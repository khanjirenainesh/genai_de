table_name: SALES_DATA
solution: Review negative values in 'tot_invc_val' and 'tot_invc_qty' for corrections. Verify 'ex_rt' and 'to_crncy' consistency, especially when converting currencies.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE tot_invc_val < 0
   OR tot_invc_qty < 0
   OR (ex_rt = 0 AND to_crncy IS NOT NULL AND from_crncy != to_crncy)
   OR (to_crncy = 'USD' AND ex_rt <= 0.000755)
   OR (to_crncy = 'SGD' AND ex_rt <= 0.001023)
   OR (from_crncy = 'TWD' AND to_crncy != 'TWD' AND ex_rt = 1.000000);
Issue: PROD_HIER_L9  
- The column name suggests a hierarchical product level, but it is not clear if the data aligns with this meaning without specific sample data. Consider checking for consistency in hierarchical data.

Issue: EAN_NUM  
- The column name suggests it should contain European Article Numbers (EAN), which are typically numerical, but the data type is TEXT. Ensure it holds valid EANs and consider using a numeric type if applicable.

Issue: TOT_INVC_QTY  
- The column name suggests it should contain total invoice quantities, which should typically be numeric. Ensure that the data is indeed numeric and correctly formatted as a FLOAT.
========================================================================================================================================

table_name : SALES_DATA
solution : The anomalies are due to currency exchange rate discrepancies and duplicated records for different currency conversions. Ensure that conversion rates are accurate and remove duplicate records by consolidating them into a single entry per transaction with correct exchange.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (from_crncy = 'KRW' AND to_crncy IN ('USD', 'SGD') AND ex_rt IN (0.000755, 0.001023))
OR (sls_doc_typ = 'ZF2K' AND 
    billing_type = 'ZF2K' AND 
    cust_no = 110558 AND 
    fisc_yr = 2024 AND 
    fisc_mo = 7 AND 
    cal_day = '2024-07-05'
    AND country = 'South Korea'
    AND tot_invc_val = 108160.0
    AND tot_invc_qty = 10.0)
OR (sls_doc_typ = 'ZF2K' AND 
    billing_type = 'ZF2K' AND 
    cust_no = 111602 AND 
    fisc_yr = 2024 AND 
    fisc_mo = 7 AND 
    cal_day = '2024-07-01'
    AND country = 'South Korea'
    AND tot_invc_val = 4352292.0
    AND tot_invc_qty = 1596.0);
Issue: `current_fisc_per`
- The column name suggests it should represent the current fiscal period. However, the data format appears to be a numeric code (e.g., `2018012`) that may not directly represent a standard fiscal period. More context is needed to confirm its alignment with expected semantics.

Issue: `ex_rt`
- The column name suggests it should represent an exchange rate, but the values like `1.000000` for different currency conversions seem unusual. There should be variations that reflect different exchange rates between currencies.

These columns require further investigation to ensure semantic alignment with their names.
========================================================================================================================================

Certainly! Here is the solution and SQL query for the anomalies detected in the 'SALES_DATA' table.


table_name : SALES_DATA
solution : Standardize currency conversion rates and remove duplicate entries.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (from_crncy = 'KRW' AND (to_crncy = 'USD' OR to_crncy = 'SGD') AND ex_rt = 1.000000)
   OR (to_crncy = 'USD' AND ex_rt != 0.000755)
   OR (to_crncy = 'SGD' AND ex_rt != 0.001023)
   OR EXISTS (
       SELECT 1
       FROM SALES_DATA sd2
       WHERE SALES_DATA.cust_no = sd2.cust_no
         AND SALES_DATA.cal_day = sd2.cal_day
         AND SALES_DATA.mat = sd2.mat
         AND SALES_DATA.tot_invc_val = sd2.tot_invc_val
         AND SALES_DATA.tot_invc_qty = sd2.tot_invc_qty
         AND SALES_DATA.rowid > sd2.rowid
   );


This solution addresses the currency conversion discrepancies by ensuring the exchange rates are consistent with the expected values and identifies duplicate records based on key attributes of the entries.
Issue: CUST_NO
- Expected data type: NUMBER
- Description: The column is expected to contain numeric customer identifiers.
- Sample Data: Contains numeric values which is valid, but further validation might be needed depending on business rules (e.g., range or format).

Issue: EX_RT
- Expected data type: FLOAT
- Description: The column should represent exchange rates, likely as floating-point numbers.
- Sample Data: Contains numeric values which is valid, but further validation might be needed for precision and currency pairs.

Issue: FISC_WK_NUM
- Expected data type: NUMBER
- Description: The column should represent the fiscal week number within a fiscal year.
- Sample Data: Contains numeric values which is valid, but further validation might be needed to ensure it aligns with fiscal calendar.

Issue: FISC_YR
- Expected data type: NUMBER
- Description: The column should represent the fiscal year.
- Sample Data: Contains numeric values which is valid, but further validation might be needed to ensure it is a valid fiscal year.

Issue: CURRENT_FISC_PER
- Expected data type: NUMBER
- Description: The column should represent the current fiscal period in a specific format (YYYYPPP).
- Sample Data: Contains numeric values which is valid, but further validation might be needed to ensure format consistency.

Issue: FISC_MO
- Expected data type: NUMBER
- Description: The column should represent the fiscal month.
- Sample Data: Contains numeric values which is valid, but further validation might be needed to ensure it aligns with fiscal calendar.
========================================================================================================================================

table_name : SALES_DATA
solution : There are duplicate rows present with different currency exchange rates, leading to inconsistencies. Ensure that each transaction has a unique combination of attributes and correct the exchange rate inconsistencies.

SQL Query:
SELECT *, COUNT(*) OVER (PARTITION BY sls_doc_typ, billing_type, cust_no, fisc_yr, fisc_mo, cal_day, sls_ofc_cv_cd, mat) AS duplicate_count
FROM SALES_DATA
WHERE duplicate_count > 1
AND (currency = 'SGD' OR currency = 'USD');
1. **Column Name: `tot_invc_qty`**  
   - Issue: Expected to hold total invoice quantities, which should be numeric. If there are any non-numeric values, it would be an error.

2. **Column Name: `tot_invc_val`**  
   - Issue: Expected to hold total invoice values, which should be numeric. If there are any non-numeric values, it would be an error.

3. **Column Name: `current_fisc_per`**  
   - Issue: The format for fiscal period seems inconsistent, as the sample data shows a value like `2018012`, which looks like a combination of year and some other identifier. If this format does not match documented expectations, it needs clarification.

4. **Column Name: `ex_rt`**  
   - Issue: Expected to hold exchange rates, which should be numeric. If there are any non-numeric values, it would be an error. Additionally, values such as `0.000755` seem unusually low and should be verified for accuracy.

These columns should be reviewed to ensure that their data aligns with their expected semantic meanings and formats.
========================================================================================================================================

table_name : SALES_DATA
solution : Ensure consistent currency conversion, remove duplicate rows with different currencies, and validate exchange rates.

SQL Query:
sql
SELECT *
FROM SALES_DATA
WHERE (from_crncy = 'KRW' AND (to_crncy IN ('USD', 'SGD') AND ex_rt NOT IN (0.000755, 0.001023)))
   OR (from_crncy = 'KRW' AND to_crncy = 'KRW' AND ex_rt != 1.000000)
   OR (cust_no, cal_day, mat, to_crncy) IN (
       SELECT cust_no, cal_day, mat, to_crncy
       FROM SALES_DATA
       GROUP BY cust_no, cal_day, mat, to_crncy
       HAVING COUNT(*) > 1
   );
Based on the provided sample data and metadata, here are the columns with issues where the semantic meaning does not align with the column name:

1. **Issue: `CUST_NO`**
   - The sample data shows a range of customer numbers, but the metadata lists the data type as `NUMBER`. If any non-numeric values are present, this would be an issue. Ensure that this column only contains numeric values.

2. **Issue: `CURRENT_FISC_PER`**
   - The column name suggests a current fiscal period, but the format "2018012" does not clearly indicate a standard fiscal period representation. This might be a concatenation of year and period, which could be misleading. Ensure the format is well-documented and understood.

No other columns in the provided sample data have misalignments with their semantic meanings based on the given metadata.
========================================================================================================================================

table_name : SALES_DATA
solution : The anomalies are caused by multiple currency conversions for the same transaction with inconsistent exchange rates. Ensure each transaction has a single, correct currency conversion rate.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat, tot_invc_val, tot_invc_qty)
IN (
    SELECT cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat, tot_invc_val, tot_invc_qty
    FROM SALES_DATA
    GROUP BY cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat, tot_invc_val, tot_invc_qty
    HAVING COUNT(DISTINCT to_crncy) > 1 OR COUNT(DISTINCT ex_rt) > 1
);
Issue: The column "EDW_CUST_NM" contains entries like "(JU) E-MART HA WOL GOK(981)", which could include unnecessary identifiers or codes that are not part of the customer name.

Issue: The column "EX_RT" contains values like "1.000000" and "0.001023", which are expected as exchange rates, but the metadata indicates a TEXT type which should be FLOAT to accurately represent numeric exchange rates.

Issue: The column "CURRENT_FISC_PER" contains entries like "2018012", which appear to be a concatenation of year and a period number, but the metadata suggests a NUMBER type without clarification of its format.
========================================================================================================================================

table_name : SALES_DATA
solution : Correct the 'from_crncy' and 'to_crncy' values, ensuring that 'from_crncy' matches the local currency (KRW) and 'to_crncy' should be the target conversion currency, with appropriate exchange rates.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (from_crncy = 'KRW' AND to_crncy IN ('USD', 'SGD') AND ex_rt = 1.000000)
   OR (from_crncy = 'KRW' AND to_crncy = 'KRW' AND ex_rt <> 1.000000);
Issue: `from_crncy`
- The column name suggests it should contain currency codes representing the currency from which a conversion is made. However, all sample values are "KRW," which might indicate a lack of variability or incorrect data entries if multiple currencies are expected.

Issue: `to_crncy`
- The column name suggests it should contain currency codes representing the currency to which a conversion is made. The sample data shows some variability, but it should be verified that this column consistently contains valid currency codes throughout the dataset.

Issue: `ex_rt`
- The column name suggests it should represent exchange rates. The value "1.000000" could indicate either an exchange rate of 1 (for the same currency conversion) or a placeholder/default value. This needs verification to ensure it aligns with expected exchange rate data.
========================================================================================================================================

table_name : SALES_DATA
solution : Identify and correct duplicate entries for transactions that have different 'to_crncy' values but similar other attributes. Ensure currency conversion rates are consistent across similar transactions, and verify if there are any missing exchange rate entries or incorrect values that need adjustment.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (cust_no, fisc_yr, fisc_mo, cal_day, sls_ofc_cv, mat) IN (
    SELECT cust_no, fisc_yr, fisc_mo, cal_day, sls_ofc_cv, mat
    FROM SALES_DATA
    GROUP BY cust_no, fisc_yr, fisc_mo, cal_day, sls_ofc_cv, mat
    HAVING COUNT(DISTINCT to_crncy) > 1
)
ORDER BY cust_no, fisc_yr, fisc_mo, cal_day, sls_ofc_cv, mat;
Issue: There are no apparent issues with the semantic meaning of the column names and the data they hold. All columns align with their intended semantic meaning based on the sample data provided.
========================================================================================================================================

table_name : SALES_DATA
solution : The anomalies in the SALES_DATA table are primarily due to duplicate entries with varying exchange rates. Ensure that for each unique transaction (based on identifiers like 'cust_no', 'fisc_yr', 'fisc_mo', 'cal_day', 'mat', etc.), only one entry exists with the correct exchange rate and currency conversion. Remove duplicate rows and keep the most accurate one.

SQL Query:
SELECT cust_no, fisc_yr, fisc_mo, cal_day, mat, COUNT(*) 
FROM SALES_DATA 
GROUP BY cust_no, fisc_yr, fisc_mo, cal_day, mat 
HAVING COUNT(*) > 1;
Based on the provided data sample and metadata, here are the columns with potential issues:

1. **Issue with data type alignment:**
   - `current_fisc_per`: The expected data type is `NUMBER`, but the sample data shows values like `2018012`, which appear to be concatenated. If this is intended to represent a fiscal period, it should be checked whether the format aligns with the business logic.

2. **Potential semantic misalignment:**
   - `sls_ofc_cv`: The values such as "Neighborhood Channel" and "CHAINS" seem more like channel descriptions rather than sales office names. This needs to be verified if it truly represents the sales office.
   - `sls_doc_typ` and `billing_type`: Both have values like "ZF2K" and "ZORH", which are similar. It should be confirmed whether these are distinct categories or if one is a subset of the other.

If any other issues arise in context with the business logic or data structure, further investigation would be required.
========================================================================================================================================

table_name : SALES_DATA
solution : Review and correct currency conversion rates and ensure consistent currency usage per record.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE to_crncy IN ('USD', 'SGD') AND ex_rt != CASE to_crncy 
                                                 WHEN 'USD' THEN 0.12749 
                                                 WHEN 'SGD' THEN 0.17289 
                                                 ELSE ex_rt
                                              END;
Issue: MATL_DESC
- The column name "MATL_DESC" implies that it should contain material descriptions, which are typically textual. The provided data type is TEXT, which seems appropriate. However, without specific sample data from this column, it's unclear if the content truly aligns with descriptive text of materials. If there's any numerical or inconsistent data, it would be an issue.

Issue: EAN_NUM
- The column name "EAN_NUM" suggests it should contain EAN (European Article Number) codes, which are typically numeric but often represented as text due to leading zeros. The data type is TEXT, which is appropriate. However, if the content does not follow the EAN format (e.g., contains non-numeric characters other than leading zeros), this would be problematic.

Issue: STORE_CD
- The column name "STORE_CD" indicates it should contain store codes, which are often numeric. The data type is NUMBER, which is suitable. If any non-numeric data is present, it would not align with the expected semantic meaning.
========================================================================================================================================

table_name : SALES_DATA
solution : Ensure currency consistency by converting all currency entries to a single standard currency, possibly using the 'ex_rt' and 'ex_rt_typ' columns. Check for duplicate rows and consolidate or rectify them as needed. Validate and correct 'Not Available' entries to ensure data completeness. Ensure 'categroy_2' is spelled correctly as 'category_2'.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE to_crncy NOT IN ('HKD') OR
      (SELECT COUNT(*) FROM SALES_DATA AS sd2 WHERE sd2.mat = SALES_DATA.mat AND sd2.cal_day = SALES_DATA.cal_day) > 1 OR
      category_1 = 'Not Available' OR
      categroy_2 = 'Not Available' OR
      prod_hier_l2 = 'Not Available';
1. Issue: COMPANY_NM
   - The data includes 'J&J Hong Kong' and 'JNTL Cons.Health TW Ltd', which seem appropriate. However, 'COMPANY_NM' should represent the full legal name of a company. Ensure all entries are complete and standardized.

2. Issue: CURRENT_FISC_PER
   - The data '2018012' does not appear to align with a recognizable fiscal period format. Verify the format and ensure it follows the expected representation of a fiscal period.

3. Issue: COUNTRY_CD
   - The data includes codes like 'HK' and 'TW'. Ensure these are consistent with official ISO country codes and verify if these align with the 'country' column.

4. Issue: SLS_DOC_TYP
   - The data like 'ZORH' and 'ZORT' may need further clarification. Ensure these document types are well-defined and consistent with the company's documentation standards.
========================================================================================================================================

table_name : SALES_DATA
solution : Review currency conversion inconsistencies, particularly with to_crncy field having different values (TWD, USD, SGD) for similar transactions. Confirm exchange rates and ensure consistency in currency conversion logic.

SQL Query:
SELECT * 
FROM SALES_DATA 
WHERE 
    (cust_no = 107323 AND from_crncy = 'TWD' AND to_crncy IN ('USD', 'SGD', 'TWD')) 
    OR 
    (cust_no = 107389 AND from_crncy = 'TWD' AND to_crncy IN ('USD', 'SGD', 'TWD')) 
    OR 
    (cust_no = 107399 AND from_crncy = 'TWD' AND to_crncy IN ('USD', 'SGD', 'TWD')) 
    OR 
    (cust_no = 107412 AND from_crncy = 'TWD' AND to_crncy IN ('USD', 'SGD', 'TWD'));
Issue: `CATEGROY_2`
- There might be a typo in the column name "CATEGROY_2". It is likely intended to be "CATEGORY_2".

Issue: `MAT`
- The column name "MAT" is ambiguous and may not clearly convey its semantic meaning. It might be better to rename it to something more descriptive, such as "MATERIAL_NUMBER".

Issue: `CORE_PLAT`
- The column name "CORE_PLAT" could be ambiguous. It might need a more descriptive name if it refers to a specific platform or core platform.

Issue: `BRND_DESC`
- The column name "BRND_DESC" might be intended to mean "BRAND_DESC". If "BRND" is an abbreviation for "BRAND", consider using the full word for clarity.
========================================================================================================================================

table_name : SALES_DATA
solution : Convert all currency values to a consistent currency type for uniformity, and ensure each transaction has a unique identifier to avoid duplicates.

SQL Query:
SELECT *
FROM SALES_DATA
WHERE (to_crncy IN ('USD', 'SGD') AND ex_rt_typ = 'BWAR' AND ex_rt != 1.00000)
   OR (cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat) IN (
       SELECT cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat
       FROM SALES_DATA
       GROUP BY cust_no, fisc_yr, fisc_mo, cal_day, store_cd, mat
       HAVING COUNT(*) > 1
   );
1. `sls_ofc_cv`: 
   - Issue: The column is expected to contain a sales office code, but the sample data shows entries like "PCS" and "DX," which appear to be abbreviations or codes not clearly indicating a sales office. This might require clarification or renaming for better understanding.

2. `sls_grp_cv_cd`:
   - Issue: This column seems to represent a sales group code, but the values like "T13" and "T31" appear as codes that might not be easily understood without a clear context or mapping to actual sales group names.

3. `company_nm`:
   - Issue: The entry "JNTL Cons.Health TW Ltd" suggests a company name; however, the format seems inconsistent. It might be beneficial to ensure all company names follow a consistent naming convention.

4. `current_fisc_per`:
   - Issue: The values like "2018012" suggest a fiscal period, but the format is unclear and might require documentation to interpret correctly. It could be a combination of year and period, but this should be clarified.
========================================================================================================================================

table_name : SALES_DATA
solution : 
1. Correct inconsistent currency conversions in rows for currency conversion issues.
2. Remove duplicate entries detected in the dataset.
3. Validate negative invoice values and quantities for potential data entry errors.

SQL Query:
SELECT * FROM SALES_DATA
WHERE 
    (tot_invc_val < 0 OR tot_invc_qty < 0)
    OR 
    (to_crncy IN ('USD', 'SGD') AND from_crncy = 'HKD' AND ex_rt_typ = 'BWAR' AND ex_rt NOT IN (0.12749, 0.17289))
    OR 
    (EXISTS (
        SELECT 1 
        FROM SALES_DATA AS SD2
        WHERE SALES_DATA.sls_doc_typ = SD2.sls_doc_typ
        AND SALES_DATA.billing_type = SD2.billing_type
        AND SALES_DATA.cust_no = SD2.cust_no
        AND SALES_DATA.fisc_yr = SD2.fisc_yr
        AND SALES_DATA.fisc_mo = SD2.fisc_mo
        AND SALES_DATA.cal_day = SD2.cal_day
        AND SALES_DATA.mat = SD2.mat
        AND SALES_DATA.matl_desc = SD2.matl_desc
        AND SALES_DATA.ean_num = SD2.ean_num
        AND SALES_DATA.tot_invc_val = SD2.tot_invc_val
        AND SALES_DATA.tot_invc_qty = SD2.tot_invc_qty
        AND SALES_DATA.country = SD2.country
        AND SALES_DATA.currency = SD2.currency
        AND SALES_DATA.row_id != SD2.row_id
    ))
;
Issue: No issues found with the semantic meanings of the column names based on the sample data provided. All columns align with their expected semantic meanings and data types.
========================================================================================================================================

