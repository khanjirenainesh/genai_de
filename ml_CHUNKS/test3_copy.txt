table_name: SDL_CBD_GT_SALES_REPORT_FACT
solution: Investigate the unusually high 'sales_qty' of 10000 for 'bu' DuplicateClient007 and validate if it's a data entry error or a legitimate transaction.

SQL Query:
SELECT *
FROM SDL_CBD_GT_SALES_REPORT_FACT
WHERE sales_qty > 5000;
Issue: expiry_date - The column name suggests it should contain dates, but it is marked as TEXT in the metadata. It should ideally be a date format.

Issue: foc_qty - The column name suggests it should contain numerical data, but it is marked as TEXT in the metadata. Negative values observed, which might be illogical for quantities.

Issue: net_price - The column name suggests it should contain numerical data, but it is marked as TEXT in the metadata. Negative values observed, which could be incorrect for price.

Issue: net_sales - The column name suggests it should contain numerical data, but it is marked as TEXT in the metadata. Zero value observed, which might be illogical for sales.

Issue: crt_dttm - The metadata indicates this column has a TIMESTAMP_NTZ data type, which is correct. Ensure data consistency across all records.
========================================================================================================================================

table_name: SDL_CBD_GT_SALES_REPORT_FACT_TEMP
solution: The sales_qty, foc_qty, net_price, and net_sales have negative values which are likely incorrect for a sales report. Verify and correct these values as they should typically be positive in a sales context. Check for data entry errors or incorrect data processing logic that may have led to these anomalies.

SQL Query:
SELECT *
FROM SDL_CBD_GT_SALES_REPORT_FACT_TEMP
WHERE sales_qty < 0 OR foc_qty < 0 OR net_price < 0 OR net_sales < 0;
Issue: net_price
- Expected Data Type: NUMBER (Positive)
- Actual Data: Contains negative values, which may not be semantically correct for net price.

Issue: net_sales
- Expected Data Type: NUMBER (Positive)
- Actual Data: Contains negative values, which may not be semantically correct for net sales.

Note: Other columns do not have apparent mismatches between their semantic meaning and the data they hold.
========================================================================================================================================

table_name: SDL_CLAVIS_GB_PRODUCTS
solution: The following anomalies were detected: 
1. 'diff_from_prev_observed_price_percent' has an unusually high value of 2800.0, which may indicate incorrect calculation or data entry.
2. Negative values detected in 'milestone2_comp' (-1200) and 'milestone5_comp' (-1600), which are likely errors as these should represent positive milestones.

SQL Query:
SELECT * FROM SDL_CLAVIS_GB_PRODUCTS
WHERE diff_from_prev_observed_price_percent > 1000
   OR milestone2_comp < 0
   OR milestone5_comp < 0;
Issue: `promo_discount_percent`
- Data contains negative values (e.g., -3000.0), which is unusual for a discount percentage.

Issue: `promo_non_discounted_price`
- The data type seems to be a float, but the values suggest it should be monetary amounts, possibly requiring currency formatting.

Issue: `traffic_page_views`
- The data is numeric, but the semantic meaning suggests it should be an integer, not a float.

Issue: `ext_page_no`
- The data appears to be numeric but might represent page numbers, suggesting it should be an integer.

Issue: `run_id`
- Values are numeric, but the semantic meaning suggests it could be a unique identifier, possibly requiring consistency in format (e.g., alphanumeric with a prefix).
========================================================================================================================================

table_name: SDL_AU_DSTR_CHS_HEADER  
solution:  
- soh_amt (Stock on Hand Amount) is negative which is incorrect. Correct the soh_amt to reflect the actual stock value.  
- Set the status to 'Active' if the product is available and should be sold, or adjust the soh_qty and soo_qty accordingly to reflect the inactive status.  

SQL Query:  
sql  
SELECT *  
FROM SDL_AU_DSTR_CHS_HEADER  
WHERE soh_amt < 0  
   OR (status = 'Inactive' AND (soh_qty > 0 OR soo_qty > 0));
Issue: soh_qty
- The column "soh_qty" contains a negative value (-10) in the first row, which is unusual for a quantity on hand column. Typically, this should be a non-negative integer.

Issue: soh_amt
- The column "soh_amt" contains a negative value (-2000) in the second row. Stock on hand amount should generally be non-negative, representing the monetary value of the stock available.

Issue: file_name
- The column "file_name" has the same value ("data.csv") for all rows. While not necessarily an error, it may indicate a missing or incomplete data entry process if multiple files are expected.
========================================================================================================================================

table_name : SDL_MDS_SG_PS_WEIGHTS
solution : The weight column has an invalid negative value (-100.0). Update it to a valid positive value based on business rules or requirements.

SQL Query:
SELECT * 
FROM SDL_MDS_SG_PS_WEIGHTS
WHERE weight < 0;
Column: id
Issue: Duplicate values found in the "id" column, which is expected to have unique identifiers.

Column: versionnumber
Issue: Contains a negative value (-15), which might not be expected for a version number.

Column: version_id
Issue: Contains a negative value (-6), which might not be expected for a version ID.

Column: weight
Issue: Contains negative values, which might not be expected if "weight" is meant to represent a positive metric.

Column: enterdatetime
Issue: No issues with the data format; however, ensure all dates are realistic and within the expected range.

Column: lastchgdatetime
Issue: No issues with the data format; however, ensure all dates are realistic and within the expected range.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCT_RANKING_MONTHLY
solution : No anomalies detected.

SQL Query:
-- Since no anomalies are detected in the table 'SDL_KR_COUPANG_PRODUCT_RANKING_MONTHLY', there's no specific SQL query needed to identify anomalies.
Column: ranking
Issue: The 'ranking' column has non-numeric entries like 'abc', which do not align with the expected semantic meaning of numeric rankings.

Column: coupang_sku_id
Issue: The 'coupang_sku_id' column contains 'None', which does not align with the expected semantic meaning of unique SKU identifiers.

Column: coupang_sku_name
Issue: The 'coupang_sku_name' column contains 'None', which does not align with the expected semantic meaning of product names.

Column: run_id
Issue: The 'run_id' column contains 'NaN', which does not align with the expected semantic meaning of numeric identifiers.
========================================================================================================================================

table_name : SDL_LA_GT_SALES_ORDER_FACT
solution : The 'totalbeforevat' value is incorrect; it should be calculated as 'subamt2' minus 'discountbtline'. Correct the 'totalbeforevat' from -300 to 300.

SQL Query:
SELECT *
FROM SDL_LA_GT_SALES_ORDER_FACT
WHERE totalbeforevat != subamt2 - discountbtline;
Issue: saleunit
- The column contains data like "None", "Unit1", "Unit2", etc. This suggests it represents units or identifiers for sales. The presence of "None" might indicate missing data that could affect downstream processing.

Issue: approved_date
- Although labeled as a date, the data type in the metadata is TEXT. It should ideally be stored in a DATE or DATETIME format for consistency and to facilitate date operations.

Issue: approved_time
- Similar to approved_date, this column should ideally be of TIME or DATETIME type instead of TEXT for accurate time-based operations.

Issue: ref_15
- The column consistently contains "None", which might indicate missing data or unused fields. If it's meant to store references, the absence of actual data might be an issue.

Issue: filename
- The column contains file names like "file1.csv", etc., but is stored as TEXT. Consider storing it as a file path or URI if applicable.

Issue: run_id
- Although labeled as a run ID, the format appears to be a string of numbers and letters. Consider validating its format to ensure consistency and uniqueness.

Issue: crt_dttm
- The column contains datetime values but is stored as TEXT. It should be stored in a DATETIME data type to facilitate datetime operations.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PA_REPORT
solution : 
1. Issue with 'total_conversion_sales_1d': Calculated as 1800, but should be 1750. Correct the 'total_conversion_sales_1d' to 1750.
2. Issue with 'total_ad_return_1d': Calculated as -5900, but should be 1750. Correct the 'total_ad_return_1d' to 1750.

SQL Query:
SELECT 
    date, 
    campaign_id, 
    campaign_name, 
    total_conversion_sales_1d, 
    total_ad_return_1d
FROM 
    SDL_KR_COUPANG_PA_REPORT
WHERE 
    (total_conversion_sales_1d != (direct_conversion_sales_1d + indirect_conversion_sales_1d) OR
    total_ad_return_1d != (direct_ad_return_1d + indirect_ad_return_1d))
    AND date = '2023-10-10';
Issue: campaign_end_date
Description: The data in this column represents the end date of a campaign. However, the third record has an end date (2023-08-31) that is before the start date (2023-09-01), which is inconsistent.

Issue: total_ad_return_14d
Description: This column is expected to hold non-negative values representing the total ad return over 14 days. However, the eighth record contains a negative value (-900), which may indicate data entry error or miscalculation.

Issue: campaign_start_date
Description: This column is expected to contain the start date of a campaign. The third record has a start date (2023-03-01) which seems out of place given the time context of the other records, suggesting a potential data entry error.

Note: Only columns with identified issues have been listed. All other columns align with their semantic meanings.
========================================================================================================================================

table_name: SDL_MDS_PH_NON_ISE_WEIGHTS
solution: 
- Issue: Negative weight (-10.0) detected.
- Solution: Correct the 'weight' value to a positive number as per business rules.

SQL Query:
SELECT * 
FROM SDL_MDS_PH_NON_ISE_WEIGHTS 
WHERE weight < 0;
Issue: `weight`
- The `weight` column contains negative values, which may not align with typical expectations for weights, as weights are generally positive.

Issue: `enterusername` and `lastchgusername`
- The `enterusername` and `lastchgusername` columns contain values like "user1", "user2", etc., which may not be meaningful usernames in a real-world context. Typically, usernames would be more descriptive or anonymized for security.
========================================================================================================================================

table_name: SDL_POP6_SG_DISPLAYS
solution: The anomaly is due to the 'start_date' being later than the 'end_date'. Correct the dates so that the 'start_date' precedes the 'end_date'.

SQL Query:
SELECT * 
FROM SDL_POP6_SG_DISPLAYS
WHERE start_date > end_date;
Issue: `start_date` and `end_date`
- The `start_date` values (e.g., "2023-01-01") are later than `end_date` values (e.g., "2022-12-31"), which is logically inconsistent.

Issue: `display_number`
- The `display_number` contains negative values (e.g., -10), which may not be semantically valid depending on the context of use.

Issue: `run_id`
- The `run_id` contains negative values (e.g., -5), which might not be expected for a field typically used to identify process runs or events in sequence.

No issues were found in the text columns regarding their semantic meaning and expected data types.
========================================================================================================================================

table_name : SDL_CSL_SALESRETURN
solution : No solution needed as no anomalies were detected.

SQL Query:
-- Since no anomalies were detected, a specific query to identify issues is not necessary.
SELECT * FROM SDL_CSL_SALESRETURN LIMIT 10;
Here are the columns with issues:

1. **distcode**  
   Issue: The data type is TEXT, but the values appear to follow a structured code format (e.g., "DIST001", "DIST002"), which might suggest a categorical or identifier type rather than free text.

2. **srnrefno**  
   Issue: The data type is TEXT, but the values resemble identifiers or reference numbers, indicating that this column might be better represented as a unique identifier rather than general text.

3. **srnreftype**  
   Issue: The data type is TEXT, but the values are consistent and repetitive (e.g., "RETURN"), suggesting this is more of a categorical field rather than free text.

4. **srnmode**  
   Issue: The data type is TEXT, but the values are limited to discrete categories (e.g., "Online", "Offline"), indicating it could be a categorical field.

5. **srntype**  
   Issue: The data type is TEXT, but the values are limited to specific types (e.g., "TypeA", "TypeB"), suggesting it could be a categorical field.

6. **nrvalue**  
   Issue: The data type is TEXT, but the values are numerical, indicating this column should likely be a numeric type.

7. **file_name**  
   Issue: The data type is TEXT, but the values appear to be structured filenames (e.g., "file001", "file002"), which might suggest a more specific format than general text.

These columns have issues in terms of their data type or the semantic meaning suggested by the values they hold.
========================================================================================================================================

table_name : SDL_DAILYSALES_DEL
solution : 
1. Correct negative values in 'salgrossamt' and 'salnetamt' which should not be negative.
2. Ensure 'prdqty' is non-negative; adjust 'prdfreeqty' to correct negative 'prdqty'.
3. Correct negative 'mrp' and 'prdselratebeforetax' values which should be positive.

SQL Query:
SELECT * 
FROM SDL_DAILYSALES_DEL
WHERE salgrossamt < 0 
   OR salnetamt < 0 
   OR prdqty < 0 
   OR mrp < 0 
   OR prdselratebeforetax < 0;
Column: salgrossamt
Issue: Negative value present, which is unusual for a gross amount.

Column: salinvlinecount
Issue: Negative value present, which is unusual for an invoice line count.

Column: mrpcs
Issue: Negative value present, which is unusual for a price or cost.

Column: lpvalue
Issue: Negative value present, which is unusual for a value or price.
========================================================================================================================================

table_name : SDL_LA_GT_CUSTOMER  
solution : The anomaly is due to missing or null values in multiple columns for the row with distributorid 12361. You should investigate the data source for this distributor and correct the missing information. Ensure all fields such as arname, araddress, telephone, city, region, and others are populated accurately.

SQL Query:  
sql  
SELECT *  
FROM SDL_LA_GT_CUSTOMER  
WHERE distributorid = 12361  
AND (arcode IS NULL OR arname IS NULL OR araddress IS NULL OR telephone IS NULL OR fax IS NULL OR city IS NULL OR region IS NULL OR saledistrict IS NULL OR saleoffice IS NULL OR salegroup IS NULL OR artypecode IS NULL OR saleemployee IS NULL OR salename IS NULL OR billno IS NULL OR billmoo IS NULL OR billsoi IS NULL OR billroad IS NULL OR billsubdist IS NULL OR billdistrict IS NULL OR billprovince IS NULL OR billzipcode IS NULL OR activestatus IS NULL OR routestep1 IS NULL OR routestep2 IS NULL OR routestep3 IS NULL OR routestep4 IS NULL OR routestep5 IS NULL OR routestep6 IS NULL OR routestep7 IS NULL OR latitude IS NULL OR longitude IS NULL OR routestep10 IS NULL OR store IS NULL OR pricelevel IS NULL OR salesareaname IS NULL OR branchcode IS NULL OR branchname IS NULL OR frequencyofvisit IS NULL OR filename IS NULL);
Column Name: distributorid
Issue: Contains 'None' values, which may indicate missing distributor IDs.

Column Name: arname
Issue: Contains entries like "Negative Active Status" and "Name with Invalid Age," which do not seem to represent valid customer names.

Column Name: city
Issue: Contains 'None' values, which may indicate missing city information.

Column Name: region
Issue: Contains 'None' values, which may indicate missing region information.

Column Name: telephone
Issue: Contains 'None' values, which may indicate missing telephone numbers.

Column Name: fax
Issue: Contains 'None' values, which may indicate missing fax numbers.

Column Name: branchcode
Issue: Contains 'None' values, which may indicate missing branch codes.

Column Name: branchname
Issue: Contains 'None' values, which may indicate missing branch names.

Column Name: frequencyofvisit
Issue: Contains 'None' values, which may indicate missing frequency of visit information.

Column Name: pricelevel
Issue: Contains 'None' values, which may indicate missing price level information.

Column Name: salesareaname
Issue: Contains 'None' values, which may indicate missing sales area names.

Column Name: filename
Issue: Contains 'None' values, which may indicate missing filenames.

Column Name: crt_dttm
Issue: None observed.
========================================================================================================================================

table_name : SDL_MDS_PH_NPI_SALES_GROUPINGS
solution : The issue is with the `id` column value `-48`, which is invalid. Ensure `id` is a positive integer. Correct the `id` to a valid positive integer.

SQL Query:
SELECT * 
FROM SDL_MDS_PH_NPI_SALES_GROUPINGS
WHERE id < 0;
Column: id
Issue: Contains negative values, which is unusual for an 'id' column typically expected to have positive unique identifiers.

Column: versionnumber
Issue: Contains negative values, which is unusual for a version number expected to increment positively.

Column: changetrackingmask
Issue: Contains negative values, which might be unexpected for a change tracking mask generally used to track changes in binary form.

Column: account_name_code
Issue: Contains 'None' values, which might indicate missing or undefined data for account name codes expected to be alphanumeric strings.

Column: dist_code_id
Issue: Contains 'None' values, indicating missing district code identifiers expected to be unique numeric values.

Column: lastchgversionnumber
Issue: Contains sequential values that might not align with the expected purpose of tracking the last change version, which could be expected to correlate with specific version numbers or identifiers.

Column: validationstatus
Issue: Contains 'Invalid' entries, which could indicate potential issues with data validation expected to be either 'Validated' or 'Pending'.
========================================================================================================================================

table_name : SDL_MDS_PH_POS_PRODUCT
solution : 
- Issue: Negative 'id' value (-10). Solution: Ensure 'id' is a positive integer.
- Issue: Negative 'cust_item_prc' (-1000). Solution: Validate that 'cust_item_prc' is non-negative.
- Issue: Mismatched 'barcode' and 'jnj_matl_cse_barcode' (both 1234567890132). Solution: Ensure barcodes are unique and correctly assigned to respective fields.

SQL Query:
SELECT * 
FROM SDL_MDS_PH_POS_PRODUCT
WHERE 
    id < 0 
    OR cust_item_prc < 0 
    OR barcode = jnj_matl_cse_barcode;
Issue: id
- The 'id' column contains negative values, which is unusual for an identifier column that typically contains positive integers or unique alphanumeric strings. This might suggest a data entry or extraction error.

Issue: versionflag
- The 'versionflag' column contains values like "Flag 1", "Flag 2", etc., which might not clearly represent the intended meaning. If this is meant to be a categorical flag related to the version, clearer naming or more descriptive values might be beneficial.

Issue: validationstatus
- The 'validationstatus' column contains values such as "Valid", "Invalid", "Pending", and "Error". While these are likely intended to describe the validation state, the use of "Error" alongside validation statuses could be misleading. Typically, validation statuses are limited to states like "Valid", "Invalid", or "Pending". Consider ensuring "Error" is appropriately used as a status.

Issue: rownum
- The 'rownum' column contains sequential numbers, which might be intended as a placeholder or row identifier. If intended to be a unique key, ensure it aligns with the primary key expectations of uniqueness and non-nullability.
========================================================================================================================================

table_name : SDL_MDS_SG_PRODUCT_HIERARCHY
solution : 
1. ID anomaly: Negative value detected. Change 'id' from -50 to a valid positive integer.
2. Versionnumber anomaly: Negative value detected. Change 'versionnumber' from -149 to a valid positive integer.
3. Versionflag anomaly: 'None' detected. Provide a valid flag value.
4. Name anomaly: 'None' detected. Provide a valid name.
5. Enterusername anomaly: 'None' detected. Provide a valid username for 'enterusername'.
6. Lastchgusername anomaly: 'None' detected. Provide a valid username for 'lastchgusername'.
7. Lastchgversionnumber anomaly: Negative value detected. Change 'lastchgversionnumber' from -50 to a valid positive integer.
8. Validationstatus anomaly: 'None' detected. Provide a valid status.

SQL Query:
SELECT * 
FROM SDL_MDS_SG_PRODUCT_HIERARCHY
WHERE id < 0 
   OR versionnumber < 0 
   OR versionflag IS NULL 
   OR name IS NULL 
   OR enterusername IS NULL 
   OR lastchgusername IS NULL 
   OR lastchgversionnumber < 0 
   OR validationstatus IS NULL;
Issue: `id`
- The column name suggests a unique identifier, typically expected to be a positive number. However, the presence of negative values such as -1 and -50 indicates a potential issue.

Issue: `muid`
- The column name suggests a unique identifier for a master record, but it contains `None` values and repetitive entries like "DUPLICATE", which may indicate missing or incorrect data.

Issue: `versionname`
- The column contains `None` values, which may indicate missing data.

Issue: `versionnumber`
- The column contains negative values like -10, which might be incorrect as version numbers are typically expected to be positive.

Issue: `version_id`
- Contains negative values like -1, which is inconsistent with typical ID values that are usually positive.

Issue: `versionflag`
- Contains `None` values, which indicates missing data.

Issue: `name`
- Contains `None` values, indicating missing data.

Issue: `code`
- Contains `None` values, which may indicate missing data.

Issue: `changetrackingmask`
- Contains negative values like -1, which might be incorrect as tracking masks are typically expected to be positive.

Issue: `brand_mapping_code`
- Contains `None` values, indicating missing data.

Issue: `product_variant_code`
- Contains `None` values, which may indicate missing data.

Issue: `product_variant_name`
- Contains `None` values, indicating missing data.

Issue: `product_variant_id`
- Contains negative values like -1, which is inconsistent with typical ID values that are usually positive.

Issue: `enterusername`
- Contains `None` values, indicating missing data.

Issue: `enterversionnumber`
- Contains negative values like -1, which might be incorrect as version numbers are typically expected to be positive.

Issue: `lastchgusername`
- Contains `None` values, indicating missing data.

Issue: `lastchgversionnumber`
- Contains negative values like -1, which might be incorrect as version numbers are typically expected to be positive.

Issue: `validationstatus`
- Contains `None` values, indicating missing data.
========================================================================================================================================

table_name : SDL_MDS_VN_GT_MSL_SHOPTYPE_MAPPING
solution : Change 'active' status to 1 for valid entries, or correct 'validationstatus' from 'Invalid' to 'Valid' if the entry is correct.

SQL Query:
SELECT *
FROM SDL_MDS_VN_GT_MSL_SHOPTYPE_MAPPING
WHERE validationstatus = 'Invalid';
Issue: id
- The presence of negative values (e.g., -1) is unexpected for an identifier column, which typically holds non-negative integers.

Issue: versionnumber
- The presence of negative values (e.g., -1) is unexpected for a version number, which usually increments positively.

Issue: version_id
- The presence of negative values (e.g., -1) is unexpected for an identifier or version related number, which typically holds non-negative integers.

Issue: msl_subchannel
- The column contains only "None" values, which may indicate missing or improperly mapped data.

Issue: active
- The column is expected to be a boolean or binary flag but contains numeric values (0 and 1). Consider using a more explicit data type or naming for clarity.

Issue: validationstatus
- The column appears to hold status information but contains only "Valid" or "Invalid" as text strings. Consider standardizing values for consistency if more categories exist.
========================================================================================================================================

table_name : PRODTR_PRODUCTTRANSLATION
solution : The 'language' field has a value of 'None', which is incorrect. Update this field with the appropriate language code.

SQL Query:
SELECT *
FROM PRODTR_PRODUCTTRANSLATION
WHERE language IS NULL OR language = 'None';
Issue: `fetchedsequence`
- The column name suggests a sequence or order, but there are negative values present (e.g., -1, -11, -32), which may not be expected for a sequence.

Issue: `producttranslationname`
- The column name implies that there should be a name for each product translation, but there are `None` values present, which indicates missing names.

Issue: `productid`
- The column name suggests a unique identifier for each product, but there are `None` values present, indicating missing IDs.

Issue: `language`
- The column name indicates a language code, but there are `None` values present, which suggests missing language information.

Issue: `eannumber`
- The column name implies that this should be a valid EAN (European Article Number), but `None` values and possibly invalid EAN formats (e.g., "ean123") indicate missing or incorrect data.
========================================================================================================================================

table_name : SDL_CSL_RETAILERROUTE
solution : 
1. Set 'distcode', 'rtrid', 'rtrcode', 'rtrname', 'rmid', 'rmcode', 'rmname', 'routetype', 'uploadflag', 'syncid', 'run_id', 'file_name' to appropriate valid values, as they currently contain None or invalid data.
2. Ensure 'createddate' and 'crt_dttm' are accurate and consistent with the expected date format.

SQL Query:
SELECT * FROM SDL_CSL_RETAILERROUTE
WHERE distcode IS NULL
   OR rtrid = -1
   OR rtrcode IS NULL
   OR rtrname IS NULL
   OR rmid = -10
   OR rmcode IS NULL
   OR rmname IS NULL
   OR routetype IS NULL
   OR uploadflag IS NULL
   OR syncid = -1
   OR run_id = -100
   OR createddate IS NULL
   OR crt_dttm IS NULL
   OR file_name IS NULL;
Issue: distcode
- Expected: Text representing district code (e.g., 'DIST001')
- Error: Row 0 has 'None'

Issue: rtrid
- Expected: Integer representing retailer ID
- Error: Row 0 has '-1'

Issue: rtrcode
- Expected: Text representing retailer code (e.g., 'RTR001')
- Error: Row 0 has 'None'

Issue: rtrname
- Expected: Text representing retailer name (e.g., 'Retailer 1')
- Error: Row 0 has 'None'

Issue: rmid
- Expected: Integer representing route manager ID
- Error: Row 0 has '-10'

Issue: rmcode
- Expected: Text representing route manager code (e.g., 'RM001')
- Error: Row 0 has 'None'

Issue: rmname
- Expected: Text representing route manager name (e.g., 'Route Manager 1')
- Error: Row 0 has 'None'

Issue: routetype
- Expected: Text representing route type (e.g., 'Type A')
- Error: Row 0 has 'None'

Issue: uploadflag
- Expected: Text indicating upload status (e.g., 'Y' or 'N')
- Error: Row 0 has 'None'

Issue: syncid
- Expected: Integer representing synchronization ID
- Error: Row 0 has '-1'

Issue: run_id
- Expected: Integer representing run ID
- Error: Row 0 has '-100'

Issue: crt_dttm
- Expected: Timestamp (e.g., '2023-01-01')
- Error: Row 0 has '2023-01-01', but contextually should be consistent with 'createddate'
========================================================================================================================================

table_name : SDL_GCPH_CATEGORY
solution : 
1. Correct negative values: length (-3000.0), net_weight (-55.0), gross_weight (-120.0), height (-100.0), width (-4500.0), and volume (-500.0) should be positive.
2. Verify format of EAN/UPC: 234567890123 might be incorrect based on standard EAN/UPC formats (usually 12 or 13 digits).
3. Check manualclassificationid: 9999999999 seems unusually large for a classification ID.
4. Validate classification scores: suggestedclassificationscore (900.0) should be within a typical range (0 to 100).

SQL Query:
SELECT * FROM SDL_GCPH_CATEGORY
WHERE length < 0 OR net_weight < 0 OR gross_weight < 0 OR height < 0 OR width < 0 OR volume < 0
OR CHAR_LENGTH(ean_upc) NOT IN (12, 13)
OR manualclassificationid > 999999999
OR suggestedclassificationscore > 100;
Column: suggestedclassificationscore
Issue: Negative values (-5.0, -10.0) are present, which may not be valid for a score column typically expected to be non-negative.

Column: volume_unit
Issue: Includes non-standard units like "Cups" and "Teaspoons," which might not align with expected standardized volume units such as liters or gallons.
========================================================================================================================================

table_name : SDL_KR_COUPANG_BRAND_RANKING
solution : Correct the 'run_id' value from -100 to a valid positive integer and ensure all 'run_id' values are positive.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_BRAND_RANKING
WHERE run_id < 0;
Issue: ranking
- The "ranking" column is expected to hold numeric values indicating a position or rank. However, it contains non-numeric entries such as "-1", "abc", and "A1", which do not align with the expected semantic meaning.

Issue: rank_change
- The "rank_change" column is expected to represent changes in rank, often numeric. It includes entries like "++" and "--" which are non-numeric or ambiguous, deviating from the expected format.
========================================================================================================================================

table_name : SDL_ECOMMERCE_6PAI
solution : 
1. Correct 'year' value from 20212 to 2021.
2. Adjust 'plan' value from -1500.0 to a realistic positive target.
3. Review and update 'score_weighted' and 'score_non_weighted' to reflect actual performance.
4. Address negative 'gap_vs_pm', 'gap_vs_p3m', and 'gap_vs_plan' by identifying root causes and taking corrective actions.

SQL Query:
SELECT *
FROM SDL_ECOMMERCE_6PAI
WHERE year = 20212
   OR plan < 0
   OR score_weighted < 0
   OR score_non_weighted < 0
   OR gap_vs_pm < 0
   OR gap_vs_p3m < 0
   OR gap_vs_plan < 0;
Issue: `year`
- The column `year` has a value '20212', which is not a valid year. It should be a four-digit year format, but this entry contains five digits.

Issue: `plan`
- The column `plan` includes negative numbers, such as -1500.0. Depending on the context, plans (especially financial plans) are usually expected to be non-negative.

Issue: `crt_dttm`
- The column `crt_dttm` is expected to be a datetime format, but it is stored as text. It should ideally be stored as a datetime data type to better reflect its semantic meaning.
========================================================================================================================================

table_name : SDL_MDS_VN_ECOM_NTS
solution : Correct negative value in 'nts_lcy' column for 'id' efgh5678-1234-90ab-cdef-ghijklmnopqr.

SQL Query:
SELECT *
FROM SDL_MDS_VN_ECOM_NTS
WHERE nts_lcy < 0;
Issue: versionnumber
- Semantic Meaning: Should represent a version number.
- Data Issue: Contains negative value (-1).

Issue: year
- Semantic Meaning: Should represent a valid year.
- Data Issue: Contains an unrealistic value (10000) and a negative value (-2023).

Issue: muid
- Semantic Meaning: Expected to be a non-null, unique identifier.
- Data Issue: Contains a NULL value.

Issue: name
- Semantic Meaning: Expected to be a descriptive name.
- Data Issue: Contains a NULL value.

Issue: code
- Semantic Meaning: Expected to be a non-null code associated with each product.
- Data Issue: Contains a NULL value.

Issue: versionflag
- Semantic Meaning: Expected to be a text flag.
- Data Issue: Contains a "None" value which may be semantically incorrect if not intended.

Issue: nts_lcy
- Semantic Meaning: Expected to be a numeric value.
- Data Issue: Contains negative value (-300.5), which may be incorrect depending on context.
========================================================================================================================================

table_name : CUST_CUSTOMER
solution : 
1. Incorrect 'fetchedsequence' value: It should be a positive integer. Current value is 0.
2. 'ecommerceflag' should be 'Yes' or 'No'. Current value is empty.

SQL Query:
SELECT *
FROM CUST_CUSTOMER
WHERE fetchedsequence <= 0 OR ecommerceflag NOT IN ('Yes', 'No');
Issue: `fetcheddatetime`
- The metadata suggests it is a text field with a maximum length of 32 characters, but the sample data appears to be a datetime format.

Issue: `azuredatetime`
- The metadata suggests it is a text field with a maximum length of 32 characters, but the sample data appears to be a datetime format.

Issue: `cdl_datetime`
- The metadata suggests it is a text field with a maximum length of 24 characters, but the sample data appears to be a datetime format.

Issue: `fetchedsequence`
- The metadata indicates a numeric type, but the sample data contains both positive and negative integers, which may need clarification if the negative values are expected.
========================================================================================================================================

table_name : MRCHR_RESPONSES
solution : 
- Negative value detected in 'pricedetails': Correct to a valid price greater than or equal to 0.
- Negative value detected in 'facings': Correct to a valid facings value greater than or equal to 0.
- Negative value detected in 'categoryfacings': Correct to a valid category facings value greater than or equal to 0.

SQL Query:
SELECT * 
FROM MRCHR_RESPONSES
WHERE pricedetails < 0 OR facings < 0 OR categoryfacings < 0;
Issue: FETCHEDSEQUENCE
- The column holds numerical data, but there are negative values (e.g., -10, -5), which may not be valid for a sequence number.

Issue: CATEGORYLENGTH
- The column holds numerical data, but there are negative values (e.g., -1.5, -3.0, -10.0), which may not be valid for a length.

Issue: CATEGORYFACINGS
- The column holds numerical data, but there are negative values (e.g., -2.0, -4.0, -5.0), which may not be valid for a number of facings.
========================================================================================================================================

table_name : SDL_CSL_TBL_SCHEMEWISE_APNO
solution : No anomalies detected.

SQL Query:
-- Since there are no anomalies detected, the SQL query is not required.
Column: schid
Issue: Contains a value of -1, which is not a valid ID number.

Column: apno
Issue: Contains a value of None, which may indicate missing or incomplete data.

Column: schcategorytype2code
Issue: Contains a value of None, which may indicate missing or incomplete data.
========================================================================================================================================

table_name : SDL_POP6_SG_EXECUTED_VISITS
solution : Correct the `check_in_longitude`, `check_in_latitude`, `check_out_longitude`, and `check_out_latitude` values for visit_id 'V007' to valid geographic coordinates, as they currently have incorrect values (1000.0, 1000.0, 2000.0, 2000.0).

SQL Query:
SELECT 
    visit_id, 
    check_in_longitude, 
    check_in_latitude, 
    check_out_longitude, 
    check_out_latitude 
FROM 
    SDL_POP6_SG_EXECUTED_VISITS 
WHERE 
    (check_in_longitude > 180 OR check_in_longitude < -180) 
    OR (check_in_latitude > 90 OR check_in_latitude < -90) 
    OR (check_out_longitude > 180 OR check_out_longitude < -180) 
    OR (check_out_latitude > 90 OR check_out_latitude < -90);
Column: check_out_datetime
Issue: The date "2022-09-03" in row 2 is inconsistent with the year 2023 for other entries.

Column: popdb_id
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid ID.

Column: pop_code
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid code.

Column: pop_name
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid name.

Column: address
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid address.

Column: check_in_longitude
Issue: Contains invalid longitude values such as 181.0, -200.0, 360.0, etc., which are outside the valid range of -180 to 180.

Column: check_in_latitude
Issue: Contains invalid latitude values such as -91.0, 95.0, -180.0, etc., which are outside the valid range of -90 to 90.

Column: user_full_name
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid name.

Column: superior_username
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid username.

Column: superior_name
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid name.

Column: planned_visit
Issue: Contains extreme or invalid values like -99999, 99999, 100000 which are inconsistent with other entries.

Column: cancelled_visit
Issue: Contains extreme or invalid values like -99999, 99999, 100000 which are inconsistent with other entries.

Column: cancellation_reason
Issue: The entry "None" in row 0 and row 3 is inconsistent with other entries that have a valid reason.

Column: cancellation_note
Issue: The entry "None" in row 0 and row 3 is inconsistent with other entries that have a valid note.

Column: file_name
Issue: The entry "None" in row 3 is inconsistent with other entries that have a valid file name.
========================================================================================================================================

table_name : SDL_MDS_PH_DISTRIBUTOR_PRODUCT
solution : 
1. Correct 'promostartperiod' and 'promoendperiod' as 'promostartperiod' should be before 'promoendperiod'. Current values: promostartperiod='2030-01', promoendperiod='2029-12'.

SQL Query:
SELECT * FROM SDL_MDS_PH_DISTRIBUTOR_PRODUCT
WHERE TO_DATE(CONCAT(promostartperiod, '-01'), 'YYYY-MM-DD') > TO_DATE(CONCAT(promoendperiod, '-01'), 'YYYY-MM-DD');
Issue: `id`  
- The column name suggests a primary key or unique identifier, but there is a duplicate value in the sample data (two entries with `id` 1).  

Issue: `muid`  
- The column name suggests a unique identifier, possibly a "machine unique identifier." However, there is a `None` value present, which may not align with its intended purpose as a unique identifier.  

Issue: `versionname`  
- The column name implies a version label, but there is a `None` value present, which may not align with its purpose.  

Issue: `versionflag`  
- The column name suggests a status or flag indicating the state of a version, but there is a `None` value present, which may not align with its intended use.

Issue: `name`  
- The column name implies a name or label, but there is a `None` value present, which may not align with its intended purpose.

Issue: `code`  
- The column name implies a code or identifier, but there is a `None` value present, which may not align with its intended purpose.

Issue: `itemcode`  
- The column name implies a product code, but there is a `None` value present, which may not align with its intended purpose.

Issue: `promoendperiod`  
- The column name implies a period or date, but there is a `None` value present, which may not align with its intended purpose.

Issue: `distitemcode`  
- The column name implies a distributor item code, but there is a `None` value present, which may not align with its intended purpose.

Issue: `enterusername`  
- The column name implies a username, but there is a `None` value present, which may not align with its intended purpose.

Issue: `validationstatus`  
- The column name implies a status, but there is a `None` value present, which may not align with its intended purpose.
========================================================================================================================================

table_name : SDL_CSL_ORDERBOOKING  
solution :  
1. orddlvdate is earlier than orderdate. Correct the orddlvdate to be after or equal to orderdate.  
2. ordtotalamt is negative. Ensure ordtotalamt is calculated correctly as positive.  
3. prdselrate is negative. Ensure prdselrate is correctly calculated as positive.  

SQL Query:  
sql  
SELECT *  
FROM SDL_CSL_ORDERBOOKING  
WHERE orddlvdate < orderdate  
   OR ordtotalamt < 0  
   OR prdselrate < 0;
Issue: `orddlvdate`
- The `orddlvdate` (expected to be the order delivery date) contains timestamps that precede the `orderdate`, which is semantically incorrect as delivery dates should generally occur after or on the same day as the order dates.

Issue: `prdselrate`
- The `prdselrate` (expected to be the product selling rate) contains negative values which are unusual for a rate unless indicating a return or discount, which is not clear from the name.

Issue: `prdgrossamt`
- The `prdgrossamt` (expected to be the product gross amount) contains negative values, which may be incorrect unless intended to indicate a refund or correction, but this isn't evident from the column name.

Issue: `recommendedsku`
- The `recommendedsku` column contains `None` values, which may be expected, but it is not clear from the column name if an SKU should always be present or if null values are acceptable.
========================================================================================================================================

table_name : SDL_ECOM_BACKMARGIN
solution : No anomalies detected.

SQL Query:
SELECT * FROM SDL_ECOM_BACKMARGIN WHERE 1 = 0;
Issue: `order_value`
- The semantic meaning of `order_value` suggests it should represent a monetary value, likely non-negative. However, it contains a negative value (-200.0), which may indicate an issue with the data.

Issue: `is_new_buyer_price`
- The semantic meaning suggests a binary indicator (0 or 1) for whether a new buyer price is applied, but it contains a value (-1) that doesn't align with this expectation.

Issue: `is_live_order`
- The semantic meaning suggests a binary indicator (0 or 1) for whether an order is live, but without additional context, it's unclear if the values (0 and 1) are used consistently. Further validation might be needed if other values are present.

Issue: `is_exclusive_price`
- The semantic meaning suggests a binary indicator (0 or 1) for whether an exclusive price is applied, but it contains a value (-1) that doesn't align with this expectation.
========================================================================================================================================

Since no anomalies were detected in the table 'SDL_MDS_MY_PRODUCT_MASTER', there are no solutions or SQL queries to provide. Please provide information about any other tables with detected anomalies for further assistance.
Issue: abc
- The data in this column appears to be related to duplicate entries or record descriptions, rather than aligning with the column name 'abc', which is non-descriptive and does not provide a clear indication of its expected content.

Issue: attachments
- The column 'attachments' seems to represent numeric values, but the semantic meaning suggested by the column name implies it should contain file attachments or similar data, which would typically be text or binary data.

Issue: validationstatus
- The column 'validationstatus' contains values such as 'Valid' and 'Invalid', which align with a validation status, but the semantic meaning is not clear if it should be more descriptive or numeric.

Issue: versionflag
- The column 'versionflag' contains single-character values ('A', 'B', 'C', etc.), which might not fully represent a flag. Typically, flag columns are expected to be Boolean or a specific set of identifiable statuses.

Note: Ensure to review the metadata and column names for potential misalignments between their semantic meanings and the data they hold.
========================================================================================================================================

table_name : SDL_CSL_UDCDETAILS
solution : The anomaly is due to an incorrect 'uploadflag' value of 'Y'. Correct it to 'N' to match the expected value.

SQL Query:
SELECT *
FROM SDL_CSL_UDCDETAILS
WHERE distcode = 31
  AND masterid = 49
  AND mastername = 'Name50'
  AND mastervaluecode = 'Code50'
  AND mastervaluename = 'ValueName50'
  AND columnname = 'Column50'
  AND columnvalue = 'Value50'
  AND uploadflag = 'Y'
  AND createddate = '2023-02-19 11:00:00'
  AND syncid = 1049
  AND run_id = 50;
Issue: `masterid`
- The sample data shows negative values such as -1, which is unusual for an ID column that typically represents a unique identifier.

Issue: `mastervaluecode`
- The sample data contains `None` values, which may not align with the expectation of a textual code.

Issue: `columnvalue`
- The sample data includes a `None` value, which may not align with the expectation of a non-null value in this context.

Issue: `uploadflag`
- The sample data contains `None` values, but the metadata specifies a character length of 1, implying it should hold a single character value like 'Y' or 'N'.
========================================================================================================================================

table_name : SDL_JNJ_OSA_OOS_REPORT
solution : Correct 'run_id' from '-1' to a valid identifier; validate 'oos_reason' as it should not be 'None' when 'oos' is 'No'.

SQL Query:
SELECT *
FROM SDL_JNJ_OSA_OOS_REPORT
WHERE run_id = '-1' OR (oos = 'No' AND oos_reason = 'None');
Issue: emp_address_pc - Contains non-numeric values (e.g., 'ABCDE') which do not align with the expectation of a postal code being numeric.

Issue: emp_address_supervisor - Contains numeric values (e.g., '12345') which do not align with the expectation of a supervisor's address being text-based.

Issue: osa_oos_date - Although the data type is TEXT, this column holds date-time values, which are typically expected to be in a DATE or TIMESTAMP format.

Issue: run_id - This column is expected to be of NUMBER data type, but the values are negative, which might not align with typical ID conventions unless negative IDs are intentional and documented.

Issue: yearmo - Although the data type is TEXT, this column holds year-month values, which might be expected in a DATE or similar format to reflect temporal data.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCT_SUMMARY_MONTHLY
solution : 
- run_id should be positive, correct value from -49 to a valid positive integer.
- yearmo should be a valid year-month format, correct value from 202349 to a valid YYYYMM.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_PRODUCT_SUMMARY_MONTHLY
WHERE run_id < 0 OR yearmo NOT LIKE '____01' AND yearmo NOT LIKE '____02' AND yearmo NOT LIKE '____03' 
AND yearmo NOT LIKE '____04' AND yearmo NOT LIKE '____05' AND yearmo NOT LIKE '____06' 
AND yearmo NOT LIKE '____07' AND yearmo NOT LIKE '____08' AND yearmo NOT LIKE '____09' 
AND yearmo NOT LIKE '____10' AND yearmo NOT LIKE '____11' AND yearmo NOT LIKE '____12';
Issue: `ranking`
- The data type for the `ranking` column is listed as TEXT. However, it appears to contain numeric values (e.g., -5, 0, 9999). It might be more appropriate for this column to have a numeric data type such as INTEGER.

Issue: `yearmo`
- The data type for the `yearmo` column is listed as TEXT. However, it appears to hold a combination of year and month as a numeric value (e.g., 202301, 202302). It might be more appropriate for this column to have a DATE or INTEGER data type, depending on the intended use.
========================================================================================================================================

table_name : SDL_DSTR_COLES_INV
solution : The anomaly is due to the identical values for 'closing_soh_nic', 'closing_soh_qty_ctns', 'closing_soh_qty_octns', 'closing_soh_qty_unit', and 'dc_days_on_hand', all set to 420. Check data entry for possible duplication errors or incorrect data import processes.

SQL Query:
SELECT *
FROM SDL_DSTR_COLES_INV
WHERE closing_soh_nic = closing_soh_qty_ctns
AND closing_soh_qty_ctns = closing_soh_qty_octns
AND closing_soh_qty_octns = closing_soh_qty_unit
AND closing_soh_qty_unit = dc_days_on_hand
AND closing_soh_nic = 420;
Issue: `vendor`
- The column contains very long numeric strings, which may not align with typical vendor identifiers. If these are meant to be vendor IDs, they may be expected to be shorter or have a specific format.

Issue: `closing_soh_nic`
- Contains negative values, which may not be expected for stock on hand (SOH) values. This suggests possible errors in inventory data.

Issue: `closing_soh_qty_ctns`
- Contains negative values, which may not be expected for inventory quantities in cartons. This suggests possible errors in inventory data.

Issue: `closing_soh_qty_octns`
- Contains negative values, which may not be expected for inventory quantities in outer cartons. This suggests possible errors in inventory data.

Issue: `dc_days_on_hand`
- Contains negative and extremely high values (e.g., 9999), which may not be expected for days on hand calculations. This suggests possible errors in data entry or calculation.

Issue: `closing_soh_qty_unit`
- Contains negative values, which may not be expected for inventory quantities in units. This suggests possible errors in inventory data.

Issue: `file_name`
- The column contains file names with inconsistent conventions (e.g., "file1.csv", "file2.csv"). This impacts data consistency and may require standardization.
========================================================================================================================================

table_name : SDL_ECOM_GMV_KONVY
solution : 
- Replace '9999999999.0' in 'sales_amount', 'total_unit_sold', 'current_price', 'pro_price', 'pro_cost', 'cost_in_vat', 'cost', 'market_value', 'conversion' with correct values.
- Replace 'infinite' in 'tstock', 'stock_turnover_days' with correct values.
- Ensure 'productname', 'status', 'platform', 'discontinue' have valid entries.

SQL Query:
SELECT * 
FROM SDL_ECOM_GMV_KONVY
WHERE sales_amount = 9999999999.0 
   OR total_unit_sold = 9999999999.0 
   OR current_price = 9999999999.0 
   OR pro_price = 9999999999.0 
   OR pro_cost = 9999999999.0 
   OR cost_in_vat = 9999999999.0 
   OR cost = 9999999999.0 
   OR market_value = 9999999999.0 
   OR conversion = 9999999999.0 
   OR tstock = 'infinite' 
   OR stock_turnover_days = 'infinite' 
   OR productname IS NULL 
   OR status IS NULL 
   OR platform IS NULL 
   OR discontinue IS NULL;
Issue: `market_value`
- Semantic meaning implies a numerical representation of value, but data type is TEXT and contains non-numeric values like `None`.

Issue: `tstock`
- Expected to represent a numerical stock quantity, but data type is TEXT and contains non-numeric values like `infinite`.

Issue: `stock_turnover_days`
- Expected to represent the number of days, but data type is TEXT and contains non-numeric values like `None`.

Issue: `view_no`
- Expected to represent a numerical count, but data type is TEXT and contains non-numeric values like `None`.

Issue: `date`
- Expected to be in DATE format, but data type is TEXT and may not enforce date integrity.

Issue: `discontinue`
- Expected to be a categorical indicator (e.g., yes/no), but data type is TEXT and contains values like `unknown`.

Issue: `platform`
- Expected to be a categorical field, but data type is TEXT and contains values like `unknown`.

Issue: `crtd_dttm`
- Expected to be a TIMESTAMP, but data type is TEXT and may not enforce timestamp integrity.
========================================================================================================================================

table_name : SDL_HK_IMS_WINGKEUNG_SEL_OUT
solution : 
1. Net trade sales is negative (-25500.0), which may be incorrect. Verify transaction details and correct the value if needed.
2. Sales volume (15500.0) and sales order quantity (155) mismatch with net trade sales. Ensure calculations and data entry are correct.

SQL Query:
SELECT *
FROM SDL_HK_IMS_WINGKEUNG_SEL_OUT
WHERE net_trade_sales < 0 
   OR (sales_volume * sales_order_quantity) != ABS(net_trade_sales);
Issue: `sales_volume` - The column contains negative values which might be unexpected for sales volume, as sales volume typically represents the quantity or amount of sales and is expected to be non-negative.

Issue: `sales_order_quantity` - The column contains negative values which might be unexpected, as order quantities are typically non-negative integers representing the number of items ordered.

Issue: `net_trade_sales` - The column contains negative values which might be unexpected since net trade sales typically represent the net revenue from sales and are expected to be non-negative.

Issue: `local_curr_exch_rate` - The column contains negative values which might be unexpected for exchange rates, as exchange rates are typically positive values representing the conversion rate between currencies.

Issue: `country_code` - The column contains a mix of country codes with different lengths (e.g., "US" is 2 characters, while others might be longer), which could be inconsistent with the expected maximum length of 2 characters as per metadata.
========================================================================================================================================

table_name : SDL_CSL_RETAILERHIERARCHY
solution : The turnover value is negative (-2100.0), which is not expected. Verify and correct the turnover value to ensure it reflects a positive amount.

SQL Query:
SELECT * 
FROM SDL_CSL_RETAILERHIERARCHY
WHERE turnover < 0;
Issue: `run_id`
- The `run_id` column contains negative values, which may not align with typical expectations for an identifier or a run number that is generally non-negative.

Issue: `turnover`
- The `turnover` column contains negative values, which might be unexpected unless negative turnover is a valid business scenario (e.g., returns or refunds). This should be confirmed based on business context.
========================================================================================================================================

table_name : SDL_MDS_SG_PRODUCT_MAPPING
solution : Check for duplicate or incorrect entries in the 'id', 'muid', 'versionname', 'versionnumber', 'version_id', 'versionflag', 'name', 'code', 'changetrackingmask', 'customer_name_code', 'customer_name_name', 'customer_name_id', 'customer_brand_code', 'customer_brand_name', 'customer_brand_id', 'customer_product_code', 'customer_product_name', 'material code', 'master code', 'product name', 'enterdatetime', 'enterusername', 'enterversionnumber', 'lastchgdatetime', 'lastchgusername', 'lastchgversionnumber', 'validationstatus' fields, such as repeated values or misalignments. Review 'customer_name_id' and 'customer_brand_id' for consistency with corresponding 'code' and 'name' fields.

SQL Query:
SELECT *
FROM SDL_MDS_SG_PRODUCT_MAPPING
WHERE id = 49 AND (muid != 'muid_50' OR versionname != 'version_50' OR versionnumber != 50 OR version_id != 50 OR versionflag != 'flag_50' OR name != 'name_50' OR code != 'code_50' OR changetrackingmask != 50 OR customer_name_code != 'cust_code_50' OR customer_name_name != 'cust_name_50' OR customer_name_id != 500 OR customer_brand_code != 'brand_code_50' OR customer_brand_name != 'brand_name_50' OR customer_brand_id != 500 OR customer_product_code != 'prod_code_50' OR customer_product_name != 'prod_name_50' OR "material code" != 'mat_code_50' OR "master code" != 'mas_code_50' OR "product name" != 'prod_name_50' OR enterdatetime != '2023-01-01' OR enterusername != 'enter_user_50' OR enterversionnumber != 50 OR lastchgdatetime != '2023-01-01' OR lastchgusername != 'chg_user_50' OR lastchgversionnumber != 50 OR validationstatus != 'valid_50');
Column: name
Issue: The data in the 'name' column appears to contain identifiers (e.g., name_1, name_2) instead of actual names, which may not align with the semantic expectation of holding human-readable names.

Column: product name
Issue: The data in the 'product name' column appears to contain structured identifiers (e.g., prod_name_1, prod_name_2) instead of descriptive product names, which might not align with the column's intended semantic meaning.
========================================================================================================================================

table_name : SDL_IG_INVENTORY_DATA
solution : No anomalies detected.

SQL Query:
SELECT 'No anomalies detected' AS message;
Issue: `stock_details_lead_time`
- The values such as `-10` and `-5` imply negative lead times, which may not make sense semantically for a lead time, as it usually represents the time required to procure or deliver stock and should be non-negative.

Issue: `sales_week_6`, `sales_week_5`, `sales_week_4`, `sales_week_3`, `sales_week_2`, `sales_week_1`, `sales_this_week`
- The repeated value `100` for `sales_week_6` across all records and other identical values for previous weeks for different items may indicate a data entry error or placeholder data rather than actual sales figures.

Issue: `stock_details_vendor`
- The value `None` for a vendor might be problematic if every item is supposed to have an associated vendor.

Issue: `stock_details_vendor_description`
- The value `None` for a vendor description might be problematic if every item is supposed to have an associated vendor description.

Issue: `create_dt`
- The format seems consistent, but ensure the timestamp reflects the accurate creation date and time relevant to your dataset context.

If these issues are not actually erroneous due to the context of the dataset (e.g., placeholder values are intentional, negative lead times have specific meanings, etc.), then further investigation or clarification within the data context may be needed.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCTSALEREPORT
solution : Correct the negative cost_of_purchase value from -1225.0 to a valid positive amount that reflects actual purchase costs.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_PRODUCTSALEREPORT
WHERE cost_of_purchase < 0;
Issue: units_sold
- The column contains negative values, which is unexpected for a count of units sold.

Issue: shipping_sales_gmv
- The column contains negative values, which is unexpected for a sales metric.

Issue: sns_cogs
- The column contains negative values, which is unexpected for a cost metric.

Issue: sns_units_sold
- The column contains negative values, which is unexpected for a count of units sold.

Issue: avg_product_rating
- The column contains values outside the typical rating scale (e.g., 1 to 5), which may indicate errors.

Issue: file_name
- File names typically should not have numbers that appear to increase incrementally without a valid context, indicating possible errors in naming conventions.

Issue: yearmo
- The column contains values that do not correspond to valid year-month combinations (e.g., 202313, 202314), indicating errors in date representation.
========================================================================================================================================

table_name : SDL_MDS_PH_MSL_HDR
solution : 
- Set 'muid', 'versionname', 'versionflag', 'name', 'code', 'csg_code_code', 'csg_code_name', 'enterusername', 'lastchgusername', 'validationstatus' to appropriate non-null values.
- Correct 'versionnumber', 'version_id', and 'lastchgversionnumber' from 9999 to valid numbers.
- Ensure 'csg_code_id', 'enterdatetime', and 'lastchgdatetime' have valid corresponding entries.

SQL Query:
SELECT * 
FROM SDL_MDS_PH_MSL_HDR
WHERE (muid IS NULL OR versionname IS NULL OR versionflag IS NULL OR name IS NULL OR code IS NULL OR csg_code_code IS NULL OR csg_code_name IS NULL OR enterusername IS NULL OR lastchgusername IS NULL OR validationstatus IS NULL) 
OR (versionnumber = 9999 OR version_id = 9999 OR lastchgversionnumber = 9999)
OR (csg_code_id IS NULL OR enterdatetime IS NULL OR lastchgdatetime IS NULL);
Issue: id
- The 'id' column contains a duplicate value ('1' appears twice), which is typically not expected for unique identifiers.

Issue: muid
- The 'muid' column has 'None' values, which may imply missing data or a lack of unique identifiers where expected.
  
Issue: versionname
- The 'versionname' column has 'None' values, indicating missing data for what is likely a descriptive field.

Issue: versionflag
- The 'versionflag' column has 'None' values, indicating missing data for what might be intended as a status or flag indicator.

Issue: name
- The 'name' column has 'None' values, indicating missing data for what is presumably a descriptive field.

Issue: code
- The 'code' column has 'None' values, indicating missing data for what is presumably a code identifier.

Issue: csg_code_code
- The 'csg_code_code' column has 'None' values, indicating missing data for what is presumably a code identifier.

Issue: fr_salescycle
- The 'fr_salescycle' column has 'None' values, indicating missing data for what may represent a sales cycle identifier or description.

Issue: to_salescycle
- The 'to_salescycle' column has 'None' values, indicating missing data for what may represent a sales cycle identifier or description.

Issue: enterusername
- The 'enterusername' column has 'None' values, which may indicate missing information for the username of the individual who entered the record.

Issue: lastchgusername
- The 'lastchgusername' column has 'None' values, which may indicate missing information for the username of the individual who last changed the record.

Issue: validationstatus
- The 'validationstatus' column has 'None' values, indicating missing data for what might represent the validation status of the record.
========================================================================================================================================

table_name: SDL_KR_COUPANG_BPA_REPORT
solution: 
- campaign_end_date 2022-12-31 is earlier than campaign_start_date 2023-01-01. Correct the campaign_end_date to be later than or equal to campaign_start_date.
- impression_count -100 is negative. Correct it to a non-negative value.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_BPA_REPORT
WHERE campaign_start_date > campaign_end_date
   OR impression_count < 0;
Issue: campaign_end_date
- The data in this column seems to represent dates, but there is an inconsistency in the first row where `campaign_end_date` is earlier than `campaign_start_date`, which is logically incorrect for campaign dates.

Issue: total_ad_return_1d
- The column `total_ad_return_1d` is expected to hold numeric values representing returns, but the values are consistent at 5 across all rows, which might not be realistic given the varying campaign conditions.

Issue: direct_ad_return_1d
- Similar to `total_ad_return_1d`, the `direct_ad_return_1d` column also has consistent values of 3 across all rows, which might not accurately reflect campaign performance.

Issue: indirect_ad_return_1d
- The `indirect_ad_return_1d` column, like the previous two, has consistent values of 2 across all rows, which may not be a realistic representation of data.
========================================================================================================================================

table_name : SDL_MY_DAILY_SELLOUT_STOCK_FACT
solution : No solution needed as no anomalies were detected.

SQL Query:
-- Since no anomalies were detected, there is no SQL query needed to identify them.
-- However, here is a template SQL query to check for anomalies in a generic table:
-- Replace <COLUMN_NAME> and <CONDITION> with specific column and condition to detect anomalies.

-- SELECT *
-- FROM SDL_MY_DAILY_SELLOUT_STOCK_FACT
-- WHERE <COLUMN_NAME> <CONDITION>;
1. **qty**  
   Issue: The column name "qty" typically implies a non-negative numeric value representing quantity. However, the data contains negative values, which may indicate a discrepancy or need for validation.

2. **uom**  
   Issue: The column "uom" is expected to contain valid units of measurement. However, the sample data has inconsistent data (e.g., "PCS," potentially representing "pieces") which may need standardization.

3. **unit_prc**  
   Issue: The column "unit_prc" typically represents unit price, which should be non-negative. Negative values in the data could indicate an error or require further investigation.

4. **total_val**  
   Issue: "total_val" represents total value, which should typically be non-negative. Negative values in the data may suggest a calculation error or need for adjustment.

5. **curr_dt**  
   Issue: The data type in the metadata is TIMESTAMP_NTZ, but it is stored as TEXT. This discrepancy could lead to parsing or format issues.
========================================================================================================================================

table_name : SDL_POP6_SG_POP_LISTS
solution : The 'status' value of -41 is invalid. Correct it to a valid status code.

SQL Query:
SELECT *
FROM SDL_POP6_SG_POP_LISTS
WHERE status < 0;
Column: status
Issue: The values in 'status' include negative numbers, which may not align with typical status codes that are generally non-negative.

Column: run_id
Issue: The values in 'run_id' also include negative numbers, which might be unexpected for identifiers that are usually positive or zero.
========================================================================================================================================

table_name: KPI2DATA_MAPPING
solution: The 'value' for 'Impressions' in the 'SAF' country is unusually high at 1,000,000. Verify if this is a data entry error or a valid anomaly. Check source data for discrepancies or confirm with relevant stakeholders.

SQL Query:
SELECT * 
FROM KPI2DATA_MAPPING
WHERE (ctry = 'SAF' AND data_type = 'Marketing' AND identifier = 'ID313' AND kpi_name = 'Impressions')
AND (value > 999999 OR value < 0);
Issue: VALUE
- The 'value' column is expected to hold quantitative numerical data, but the metadata specifies its data type as TEXT, which may not align with its intended use for numerical calculations.

Issue: CRT_DTTM
- The 'crt_dttm' column is expected to hold timestamp data, which aligns with the sample data format, but ensure that the format is stored as a TIMESTAMP_NTZ in the database if precision is required.
========================================================================================================================================

table_name : SDL_GCPH_BRAND
solution : 
1. The 'ean_upc' value '12345678901' should be validated for correct format and length, as standard UPC codes are typically 12 digits or 13 digits for EAN.
2. The 'manualclassificationid' and 'suggestedclassificationid' should be checked for consistency. In this case, 'SugID10' might not correspond with '108', indicating a potential misclassification.
3. The 'suggestedclassificationscore' value '125.0' seems unusually high; verify if this is within the expected range.
4. The 'dateofextract' and 'cdl_datetime' fields should be checked for consistency with other records to ensure no data synchronization issues.

SQL Query:
SELECT * FROM SDL_GCPH_BRAND
WHERE LENGTH(ean_upc) NOT IN (12, 13)
   OR manualclassificationid NOT LIKE 'SugID%'
   OR suggestedclassificationscore > 100
   OR dateofextract <> cdl_datetime;
Issue: suggestedclassificationscore
- The column name suggests a score, which is typically a numerical value within a defined range. However, some values like -20.0 and values greater than 100 (e.g., 101.0, 105.0, etc.) seem unusual for a classification score, which usually ranges from 0 to 100.

Issue: tamr_id
- The value -1 is unexpected for an identifier, which typically is a positive number or zero.
========================================================================================================================================

table_name : SDL_MY_CUSTOMER_DIM
solution : 
- Issue: 'cust_nm' should not be 'Vera' for 'cust_id' 50.
- Issue: Incorrect 'dstrbtr_grp_cd' value 'B50' for 'cust_id' 50.
- Issue: 'dstrbtr_grp_nm' should not be 'GroupB' for 'cust_id' 50.
- Issue: 'ullage' should not be 75 for 'cust_id' 50.
- Issue: 'chnl' should be 'Offline' instead of 'Online' for 'cust_id' 50.
- Issue: 'territory' should not be 'North' for 'cust_id' 50.
- Issue: 'retail_env' should not be 'Urban' for 'cust_id' 50.
- Issue: 'trdng_term_val' should not be 125 for 'cust_id' 50.
- Issue: 'rdd_ind' should not be 'N' for 'cust_id' 50.
- Issue: 'cdl_dttm' should not be 'Inactive' for 'cust_id' 50.
- Issue: 'curr_dt' is not expected as '2023-02-19 13:00:00' for 'cust_id' 50.
- Issue: 'file_name' should not be 'file50.txt' for 'cust_id' 50.

SQL Query:
SELECT * FROM SDL_MY_CUSTOMER_DIM
WHERE (cust_id = 50 AND cust_nm = 'Vera')
   OR (cust_id = 50 AND dstrbtr_grp_cd = 'B50')
   OR (cust_id = 50 AND dstrbtr_grp_nm = 'GroupB')
   OR (cust_id = 50 AND ullage = 75)
   OR (cust_id = 50 AND chnl = 'Online')
   OR (cust_id = 50 AND territory = 'North')
   OR (cust_id = 50 AND retail_env = 'Urban')
   OR (cust_id = 50 AND trdng_term_val = 125)
   OR (cust_id = 50 AND rdd_ind = 'N')
   OR (cust_id = 50 AND cdl_dttm = 'Inactive')
   OR (cust_id = 50 AND curr_dt = '2023-02-19 13:00:00')
   OR (cust_id = 50 AND file_name = 'file50.txt');
Issue: CUST_ID
- Expected to be a numeric or integer identifier based on the name. However, the metadata suggests it is stored as TEXT.

Issue: TRDNG_TERM_VAL
- Contains numeric values but is stored as TEXT, which might not be appropriate for calculations.

Issue: ULLAGE
- Contains numeric values (including negatives), but is stored as TEXT, which might be inappropriate for arithmetic operations.

Issue: CDL_DTTM
- Expected to be a datetime value based on the name, but is stored as TEXT, which might not allow for proper datetime operations.
========================================================================================================================================

table_name : SDL_CSL_PRODUCTWISESTOCK
solution : No anomalies detected.

SQL Query:
SELECT * FROM SDL_CSL_PRODUCTWISESTOCK WHERE 1=0; -- No anomalies present
Issue: `lcnid` - The column name suggests it should contain a unique identifier for a location, typically a positive integer, but it contains negative values which may not be semantically appropriate.

Issue: `prdid` - The column name suggests it should contain a unique identifier for a product, typically a positive integer, but it contains negative values which may not be semantically appropriate.

Issue: `salopenstock` - The column represents open stock for sales, which typically should be a non-negative number since stock cannot be negative, but it contains negative values.

Issue: `unsalopenstock` - Similar to `salopenstock`, this column represents unsalable open stock, which should also typically be non-negative, but it contains negative values.

Issue: `offeropenstock` - This column represents open stock for offers and should also be non-negative, but it includes a negative value.

Issue: `salpurchase` - The name suggests it is a purchase value related to sales, which should typically be non-negative, but it contains negative values.

Issue: `salclsstock` - Represents closing stock for sales, which should typically not be negative, but it contains negative values.

Issue: `uploadflag` - Contains single-character flags, but the metadata indicates a maximum length of 10 characters, which is inconsistent unless the flag can indeed be more than one character.

Issue: `file_name` - Contains a mix of filenames and `None`, which may not align with expectations if every entry is supposed to have a filename.
========================================================================================================================================

table_name: SDL_DISTRIBUTOR_IVY_USER_MASTER
solution: The anomaly is caused by a negative run_id value of '-50'. Ensure that run_id is always a positive integer to maintain data integrity.

SQL Query:
SELECT * 
FROM SDL_DISTRIBUTOR_IVY_USER_MASTER
WHERE run_id < 0;
Issue: cdl_dttm - The data type is listed as TEXT, but it contains datetime values. The format should be adjusted to a datetime type.
========================================================================================================================================

table_name : SDL_MDS_PH_MSL_DTLS
solution : The anomaly detected in the row with id '50' is likely related to inconsistent or incorrect data in one or more columns. Review the following potential issues:
- The 'versionnumber' and 'version_id' both have the value '50', ensure these values are correct as per the versioning logic.
- The 'lastchgdatetime' is '2023-02-19 13:00:00' which is after 'enterdatetime' '2023-02-19 12:00:00'. Confirm if this is expected behavior.
- Verify the 'validationstatus' is correctly set to 'Validated' with respect to the data entered.

SQL Query:
SELECT * FROM SDL_MDS_PH_MSL_DTLS
WHERE id = 50
AND (
  versionnumber = 50 AND version_id <> 50
  OR lastchgdatetime < enterdatetime
  OR validationstatus <> 'Validated'
);
Issue: id
- The column 'id' contains duplicate values (-1), which may not be suitable if 'id' is intended to be a unique identifier for each record.

Issue: versionnumber
- The column 'versionnumber' contains a negative value (-2), which might not be semantically valid if version numbers are expected to be non-negative.

Issue: lastchgusername
- The column 'lastchgusername' contains a 'None' value in row 4, which may not be appropriate if a username is always expected to be present.

Issue: validationstatus
- The column 'validationstatus' contains inconsistent capitalization (e.g., 'Validated', 'In Review', 'Rejected', 'Approved', 'Pending'). This may cause issues if the values are expected to be standardized.
========================================================================================================================================

table_name: SDL_MY_CIW_MAP
solution: The anomaly detected is that 'ciw_buckt1' has a value of 'None', which is unexpected. The 'acct_desc' field also contains 'None'. Ensure 'ciw_buckt1' and 'acct_desc' have valid values corresponding to the defined categories and account descriptions.

SQL Query:
SELECT * FROM SDL_MY_CIW_MAP
WHERE ciw_buckt1 IS NULL OR acct_desc IS NULL;
Issue: `CDL_DTTM`  
- The name suggests a datetime format, but the metadata indicates it is stored as `TEXT`.

Issue: `ACCT_NUM`  
- Typically expected to be a numeric or string representation of an account number; however, metadata shows `TEXT`, which is acceptable for alphanumeric account numbers but should be verified for numeric-only formats.
========================================================================================================================================

table_name : PRODBU_PRODUCTBUSINESSUNIT
solution : The 'islisted' column has a value 'No', which may be inconsistent if this product should be available. Verify the product availability requirements. Additionally, check the 'maximumorderquantity' which is set to 100000.0, to ensure it aligns with business rules.

SQL Query:
SELECT *
FROM PRODBU_PRODUCTBUSINESSUNIT
WHERE islisted = 'No'
   OR maximumorderquantity > 99999;
Issue: `fetcheddatetime`  
- The expected data type is `TEXT` with a maximum length of 32, but the data format suggests it should be a `DATETIME` or `TIMESTAMP` type.

Issue: `maximumorderquantity`  
- The expected data type is `FLOAT`, which aligns with some entries. However, negative values like `-10.5`, `-5.0`, `-100.0`, `-50.0`, and `-1.0` may not be semantically valid for an order quantity.

Issue: `cdl_datetime`  
- The expected data type is `TEXT` with a maximum length of 24, but the data format suggests it should be a `DATETIME` or `TIMESTAMP` type.
========================================================================================================================================

table_name : SDL_MDS_PH_ECOM_PRODUCT
solution : The 'changetrackingmask' field contains an invalid value '-5'. Ensure it contains a positive integer or a valid code.

SQL Query:
SELECT * FROM SDL_MDS_PH_ECOM_PRODUCT 
WHERE changetrackingmask < 0 OR id = '00000000-0000-0000-0000-000000000000';
Issue: 
- Column 'versionnumber': Contains negative values (e.g., -1), which may not be intended for a version number, as version numbers are typically non-negative.
- Column 'changetrackingmask': Contains negative values (e.g., -5, -10), which might not be expected for a tracking mask.
- Column 'versionflag': Contains 'None', which might not be an intended status, as version flags are typically categorical like 'active', 'inactive'.
========================================================================================================================================

table_name: SDL_MDS_VN_PS_WEIGHTS
solution: The 'versionnumber' column has an invalid value of -2. It should be corrected to a valid positive integer.

SQL Query:
SELECT * FROM SDL_MDS_VN_PS_WEIGHTS 
WHERE versionnumber < 0;
Based on the provided sample data and metadata, here are the columns with issues:

Issue: `versionnumber` contains negative numbers, which might be unexpected for a version number as they typically start from zero or one and increment positively.

Issue: `enterusername` and `lastchgusername` may have inconsistent usernames (e.g., `user1` in `enterusername` should not appear in `lastchgusername` if it indicates a different user who last changed the record).

Issue: `weight` contains negative numbers, which might not be expected if weight is supposed to represent a positive measure.

These are the columns identified with potential semantic issues.
========================================================================================================================================

table_name : SDL_ECOM_COGS
solution : No anomalies detected. No solution required.

SQL Query:
SELECT 'No anomalies detected' AS status;
Issue: `cost_rel_yr`
- Expected Data Type: Number (likely year)
- Sample Data Issue: Contains a large number (10000) instead of a valid year format (e.g., 2024).

Issue: `final_cost`
- Expected Data Type: Number (likely monetary value)
- Sample Data Issue: Contains a negative value (-500.0, -1000.0), which may not align with typical cost semantics unless negative costs are expected in context.

Issue: `per_piece` and `per_dozen`
- Expected Data Type: Number (likely cost or quantity per unit)
- Sample Data Issue: Contains negative values (-1.0, -12.0, -2.0, -24.0), which may not align with typical cost or quantity semantics unless negative values are expected in context.

Issue: `profit_center`
- Expected Data Type: Number (likely representing an ID)
- Sample Data Issue: Contains a repeated value (1000), suggesting potential data duplication or misalignment in context, though repetition alone may not inherently be an issue depending on the business logic.
========================================================================================================================================

table_name : SDL_DISTRIBUTOR_CUSTOMER_DIM_ADFTEMP
solution : The anomaly detected in the table involves inconsistency between the cust_id (CUST050) and cust_nm (Customer XX) with the cust_id_map (Map050) and cust_nm_map (CustMapXX). Ensure cust_id_map and cust_nm_map correctly correspond to cust_id and cust_nm or update the mapping values.

SQL Query:
SELECT *
FROM SDL_DISTRIBUTOR_CUSTOMER_DIM_ADFTEMP
WHERE (cust_id = 'CUST050' AND cust_id_map != 'Map050')
   OR (cust_nm = 'Customer XX' AND cust_nm_map != 'CustMapXX');
Issue: `crtd_dttm` and `updt_dttm` - The format "24:00:00" is not a valid time format in the context of a 24-hour clock, as it should be "00:00:00" of the next day.
========================================================================================================================================

table_name : SDL_CSL_RETAILERMASTER
solution : No issues detected.

SQL Query:
SELECT * FROM SDL_CSL_RETAILERMASTER;
Issue: rtrlatitude
- Data type expected: Number (latitude values are numeric)
- Data type found: Text
- Semantic issue: Latitude values should be numeric, but are stored as text.

Issue: rtrlongitude
- Data type expected: Number (longitude values are numeric)
- Data type found: Text
- Semantic issue: Longitude values should be numeric, but are stored as text.
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_CIW_ADJUSTMENT
solution : 
1. Negative 'id' value: Change 'id' from -1 to a valid positive integer.
2. Negative 'versionnumber': Change 'versionnumber' from -10 to a valid non-negative integer.

SQL Query:
SELECT * 
FROM SDL_MDS_PACIFIC_CIW_ADJUSTMENT 
WHERE id < 0 OR versionnumber < 0;
Issue: `muid`
- The `muid` column is expected to be a unique identifier and should not contain `None` values.

Issue: `versionname`
- The `versionname` column is expected to contain version names and should not contain `None` values.

Issue: `code`
- The `code` column is expected to contain alphanumeric codes and should not contain `None` values.

Issue: `name`
- The `name` column is expected to contain person names and should not contain `None` values.

Issue: `versionflag`
- The `versionflag` column is expected to contain status indicators and should not contain `None` values.
========================================================================================================================================

table_name : SDL_ECOM_SHOPEE_COMPENSATION
solution : No anomalies detected; no solution required.

SQL Query:
SELECT * FROM SDL_ECOM_SHOPEE_COMPENSATION WHERE FALSE;
Issue: po_cmpt_mnth  
- The column likely represents a purchase order completion month, but it contains a negative value ("-2023-03") and "None," which are inconsistent with a valid month-year format. Expected format is "YYYY-MM".

Issue: scm_barcode  
- The column is expected to contain a barcode, usually numeric, but there are entries like "ABCDEFGHIJ" which deviate from a standard numeric barcode format. 

Issue: sum_of_qty  
- The column is expected to represent the sum of quantities, typically a positive or zero number. However, there are entries with negative values, which might be incorrect unless the context justifies negative quantities.

Issue: sum_of_rspxqty  
- Similar to sum_of_qty, this column is expected to represent a sum of a calculated value, but it contains negative numbers and zeros, which may not be appropriate unless justified by the context.

Issue: sum_of_total_net_selling_price  
- The column is expected to hold positive values or zero as it represents a total net selling price. Negative values could indicate an error unless there is a specific reason for them being negative.

Issue: sum_of_dis_shopee  
- This column is likely to represent a discount amount. Negative values could be incorrect unless they represent a refund or similar adjustment.

Issue: sum_of_ltpxqty  
- Expected to represent a sum related to quantity, negative values here could be incorrect unless the context supports them.

Issue: sum_of_front_margin  
- This column is likely to represent a margin, which typically should be non-negative. Negative values here might indicate an error unless there is context to support them. 

Issue: sum_of_enabler_margin  
- Similar to sum_of_front_margin, negative values can be inappropriate unless the context justifies them.

Issue: sum_of_compensation  
- Expected to represent compensation amounts, negative values might be incorrect unless there's a context that requires such values.
========================================================================================================================================

Certainly! Here is the solution for the provided anomalies:

table_name: SDL_MDS_MY_SKU_BENCHMARKS

solution: 
- Issue: Version number '26500' should be a decimal similar to 'version_id' i.e., '1050.0'.
  Solution: Correct 'versionnumber' to '26500.0'.
- Issue: 'versionflag' should not be 'Stable' if 'versionname' is 'Beta'.
  Solution: Change 'versionflag' to 'Beta'.
- Issue: 'valid_to' is the same as 'valid_from', which may indicate an error.
  Solution: Ensure that 'valid_to' is correctly set based on the intended validity period.

SQL Query:
sql
SELECT * 
FROM SDL_MDS_MY_SKU_BENCHMARKS
WHERE versionnumber = 26500
   OR (versionname = 'Beta' AND versionflag != 'Beta')
   OR valid_to = valid_from;
Issue: versionnumber
- Semantic Meaning: Represents the version number of a product.
- Data Type: Expected to be numeric.
- Error: Contains negative values (e.g., -500, -2500, -11500), which are not typical for version numbers.

Issue: valid_to
- Semantic Meaning: Represents the valid end date for a product or version.
- Data Type: Expected to be a valid future timestamp.
- Error: Contains dates that are earlier than 'valid_from' dates (e.g., row 1: valid_to is 2023-01-01, valid_from is 2023-02-01), which is illogical for end dates.

Issue: enterusername
- Semantic Meaning: Represents the username of the person who entered the data.
- Data Type: Expected to be a non-null text value.
- Error: Contains null values (e.g., row 3), which indicate missing data.

Issue: comp_packsize
- Semantic Meaning: Represents the pack size of a component.
- Data Type: Expected to be a positive numeric value.
- Error: Contains negative values (e.g., -400, -200, -50), which are not logical for pack sizes.
========================================================================================================================================

table_name : SDL_MDS_PH_ISE_WEIGHTS
solution : The 'id' should not be negative; update it to a valid positive integer. 'weight' should not be negative; update it to a positive value.

SQL Query:
SELECT *
FROM SDL_MDS_PH_ISE_WEIGHTS
WHERE id < 0 OR weight < 0;
Issue: `id`
- The column "id" contains a value of `-1`, which is unusual for an identifier column as these typically start from `0` or `1`.

Issue: `versionname`
- The column contains a `None` value, which is unexpected if every entry is supposed to have a version name.

Issue: `changetrackingmask`
- Contains negative values such as `-1`, which might not be appropriate depending on the intended purpose of the mask.

Issue: `weight`
- Contains negative values such as `-50`, which may not be suitable if weights are expected to be non-negative.

Issue: `versionflag`
- Contains a `None` value, which might be unexpected if every entry is supposed to have a status.

Issue: `validationstatus`
- Contains alternating valid/invalid values which might not be an issue, but it's worth verifying if the status is expected to alternate in such a manner.
========================================================================================================================================

table_name : SDL_MDS_VN_ECOM_TARGET
solution : The 'enterdatetime' value '2024-01-07 12:00:00' is in the future. Update the 'enterdatetime' to a current or past date.

SQL Query:
SELECT * 
FROM SDL_MDS_VN_ECOM_TARGET 
WHERE enterdatetime > CURRENT_TIMESTAMP();
Issue: id - Contains negative values, which might not be expected for an identifier column if it should only contain positive numbers or if -1 is not a valid identifier.

Issue: muid - Contains None and zero values, which might not be expected if this is a mandatory field or if zero is not a valid identifier.

Issue: code - Contains None values, which might not be expected if this is a mandatory field, or if every item should have a code.

Issue: platform - No issues with data alignment observed, but ensure None values are appropriate if applicable.

Issue: versionflag - Contains None value, which might not be expected if every item should have a version flag.

Issue: target - Contains integer values, but metadata suggests it should be float according to sample data (e.g., 1.0, 2.0).

Issue: enterdatetime - No issues with data alignment observed, but ensure that timestamps are valid.

Issue: lastchgdatetime - No issues with data alignment observed, but ensure that timestamps are valid.

Issue: lastchgusername - No issues with data alignment observed, but ensure None values are appropriate if applicable.

Issue: validationstatus - No issues with data alignment observed, but ensure None values are appropriate if applicable.
========================================================================================================================================

table_name : MRCHR_MERCHANDISINGRESPONSE  
solution : The 'startdate' and 'enddate' fields are inconsistent. 'enddate' should not be earlier than 'startdate'. Correct 'enddate' to be after or equal to 'startdate'.

SQL Query:  
sql  
SELECT *  
FROM MRCHR_MERCHANDISINGRESPONSE  
WHERE TO_TIMESTAMP(enddate || ' ' || endtime, 'YYYY-MM-DD HH24:MI:SS') < TO_TIMESTAMP(startdate || ' ' || starttime, 'YYYY-MM-DD HH24:MI:SS');
Issue: fetchedsequence - Some values are negative, which may not align with the typical expectation of a sequence number being non-negative.
Issue: customerid - Contains a 'None' value, which may not align with the expectation of a customer identifier being a valid text string.
Issue: salespersonid - Contains a 'None' value, which may not align with the expectation of a salesperson identifier being a valid text string.
Issue: azuredatetime - The 'azuredatetime' and 'fetcheddatetime' columns have identical values, which may indicate redundancy or incorrect data representation.
Issue: status - The 'status' column includes values such as 'Pending', 'Rejected', and 'Cancelled', which should be clearly defined as valid states. If these states are not valid, this could indicate an issue.
========================================================================================================================================

table_name : SDL_DNR_CUSTOMER_DIM
solution : Ensure that numeric data types are used for columns intended for numerical analysis and populate them with valid numeric values.

SQL Query:
SELECT * 
FROM SDL_DNR_CUSTOMER_DIM
WHERE NOT TRY_CAST(column_name AS NUMERIC) IS NULL
AND column_name IS NOT NULL;
1. Column: grcust
   Issue: The 'grcust' column contains numerical and 'None' values, which do not align with its expected meaning as a group customer identifier. It should likely be a text identifier.

2. Column: cust_id
   Issue: The 'cust_id' column contains 'None' values, which may indicate missing customer identifiers. All records should ideally have a unique customer ID.

3. Column: custname
   Issue: The 'custname' column contains 'None' values, indicating missing customer names. All records should ideally have a customer name.

4. Column: custadd
   Issue: The 'custadd' column contains 'None' values, indicating missing customer addresses. All records should ideally have a customer address.

5. Column: custcity
   Issue: The 'custcity' column contains 'None' values, indicating missing customer city information. All records should ideally have a city name.

6. Column: pstlz
   Issue: The 'pstlz' column contains '0' and 'None' values, which may indicate missing or invalid postal codes. All records should ideally have a valid postal code.
========================================================================================================================================

table_name : SDL_LA_GT_SALES_ORDER_FACT_TEMP
solution : No anomalies detected.

SQL Query:
SELECT * 
FROM SDL_LA_GT_SALES_ORDER_FACT_TEMP
WHERE 1=0;  -- No anomalies detected, so no records to retrieve
Issue: orderid - The sample data for 'orderid' is "ORD001", "ORD002", etc. This format seems appropriate and no issue is detected.
Issue: orderdate - The sample data for 'orderdate' is in the format "YYYY-MM-DD", which aligns with its semantic meaning as a date. No issue detected.
Issue: customer_id - The sample data for 'customer_id' is in the format "CUST001", "CUST002", etc. This format seems appropriate and no issue is detected.
Issue: city - The sample data for 'city' includes names like "New York", "Los Angeles", etc. This aligns with its semantic meaning as city names. No issue detected.
Issue: region - The sample data for 'region' includes terms like "East", "West", etc. This aligns with its semantic meaning as a region name. No issue detected.
Issue: saledistrict - The sample data for 'saledistrict' includes terms like "District1", "District2", etc. This aligns with its semantic meaning as a sales district. No issue detected.
Issue: saleoffice - The sample data for 'saleoffice' includes terms like "Office1", "Office2", etc. This aligns with its semantic meaning as a sales office. No issue detected.
Issue: deliveryrouteid - The sample data for 'deliveryrouteid' includes terms like "Route1", "Route2", etc. This aligns with its semantic meaning as a delivery route identifier. No issue detected.
Issue: approved_date - The sample data for 'approved_date' is in the format "YYYY-MM-DD", aligning with its semantic meaning as a date. No issue detected.
Issue: approved_time - The sample data for 'approved_time' is in the format "HH:MM:SS", aligning with its semantic meaning as time. No issue detected.
Issue: paymenttype - The sample data for 'paymenttype' includes terms like "Credit", "Cash", etc. This aligns with its semantic meaning as a type of payment. No issue detected.
Issue: filename - The sample data for 'filename' includes terms like "file1.txt", "file2.txt", etc. This aligns with its semantic meaning as a file name. No issue detected.
Issue: run_id - The sample data for 'run_id' appears to be a number string like "12345678901234". This aligns with its semantic meaning as a run identifier. No issue detected.
Issue: crt_dttm - The sample data for 'crt_dttm' is in the format "YYYY-MM-DD HH:MM:SS", aligning with its semantic meaning as a creation date-time. No issue detected.
Issue: updt_dttm - The sample data for 'updt_dttm' is in the format "YYYY-MM-DD HH:MM:SS", aligning with its semantic meaning as an update date-time. No issue detected.


Note: No issues were detected in the provided sample data based on the semantic meaning of the column names. All data appears to be aligned with the expected semantic meanings.
========================================================================================================================================

table_name: SDL_MDS_VN_PS_TARGETS  
solution: The value for the column 'value' is negative (-49.0). Ensure that the 'value' column should not have negative values unless this is the expected behavior. Verify the data source or apply a data transformation to correct this anomaly.

SQL Query:
sql
SELECT * 
FROM SDL_MDS_VN_PS_TARGETS
WHERE value < 0;
Issue: `id` - The column has a value of `-1`, which may not be a valid identifier.

Issue: `versionnumber` - Contains a value of `-100`, which is negative and might not be expected for a version number.

Issue: `versionflag` - Contains `None` at index 4, which may not align with expected flag values.

Issue: `name` - Contains `None` at index 4, which may not be expected in a name column.

Issue: `code` - Contains `None` at index 4, which may not be expected in a code column.

Issue: `channel` - Contains `None` at index 4, which may not be expected in a channel column.

Issue: `attribute_1` - Contains `None` at index 4, which may not be expected in an attribute column.

Issue: `attribute_2` - Contains `None` at index 4, which may not be expected in an attribute column.

Issue: `value` - Contains negative values like `-3.0`, `-10.0`, `-19.0`, etc., which might not be expected if only positive values are valid.

Issue: `enterusername` - Contains `None` at index 4, which may not be expected in a username column.

Issue: `validationstatus` - Contains alternating `Valid` and `Invalid` values, verify if this pattern is intended.
========================================================================================================================================

table_name : SDL_MDS_VN_TOPDOOR_STORETYPE_MAPPING
solution : The 'changetrackingmask' value is set to -50, which is likely incorrect. Set 'changetrackingmask' to a valid positive integer.

SQL Query:
sql
SELECT *
FROM SDL_MDS_VN_TOPDOOR_STORETYPE_MAPPING
WHERE changetrackingmask < 0;
Issue: CHANGETRACKINGMASK
- The column name suggests tracking changes, possibly a binary mask or flag. However, it contains both positive and negative integer values, which could indicate a calculation or status rather than a simple tracking mask.

Issue: ENTERVERSIONNUMBER
- The column name suggests it should be a sequential or version-related numeric identifier. Values appear to be sequential, but there might be a need for validation against actual versioning logic.

Issue: LASTCHGVERSIONNUMBER
- The column name suggests it should be a sequential or version-related numeric identifier, reflecting the last change made. Values appear valid, but should be verified against actual versioning logic.

Issue: VALIDATIONSTATUS
- The column name suggests a binary or categorical status indicating validity. The values "Valid" and "Invalid" seem appropriate, but it's crucial to confirm that they align with the actual data validation process and criteria.
========================================================================================================================================

table_name : SDL_MY_DAILY_SELLOUT_SALES_FACT
solution : 
1. Correct 'qty' field from 0 to the expected quantity value.
2. Update 'qty_pc' and 'qty_aft_conv' to reflect correct conversion based on 'qty'.
3. Correct 'subtotal_1', 'subtotal_2', 'total_amt_aft_tax', 'total_amt_bfr_tax' from 0 to values calculated based on 'grs_prc' and 'qty'.

SQL Query:
SELECT *
FROM SDL_MY_DAILY_SELLOUT_SALES_FACT
WHERE sls_ord_num = 1005
  AND (
    qty = 0
    OR qty_pc = 0
    OR qty_aft_conv = 0
    OR subtotal_1 = 0
    OR subtotal_2 = 0
    OR total_amt_aft_tax = 0
    OR total_amt_bfr_tax = 0
  );
Issue: sls_ord_dt
- The column likely represents a sales order date, but the data type is "TEXT" instead of a date format. It should be corrected to a date or datetime type for consistency and proper date operations.

Issue: total_amt_aft_tax
- The column likely represents a monetary amount after tax, but the data type is "TEXT" instead of a numeric format. It should be corrected to a numeric type (e.g., FLOAT or DECIMAL) for arithmetic operations.

Issue: total_amt_bfr_tax
- The column likely represents a monetary amount before tax, but the data type is "TEXT" instead of a numeric format. It should be corrected to a numeric type (e.g., FLOAT or DECIMAL) for arithmetic operations.

Issue: cdl_dttm
- The column likely represents a datetime value, but the data type is "TEXT" instead of a datetime format. It should be corrected to a datetime type for datetime operations.

Issue: curr_dt
- The column is correctly identified as TIMESTAMP_NTZ, but the data type in the metadata indicates "TEXT" for other columns with date/time data. Ensure consistent use of date/time types.

Issue: bottom_line_dscnt
- The column likely represents a discount amount, but the data type is "TEXT" instead of a numeric format. It should be corrected to a numeric type (e.g., FLOAT or DECIMAL) for arithmetic operations.
========================================================================================================================================

table_name: SDL_MDS_VN_POS_CUSTOMERS
solution: 
1. Correct the 'id' to a valid positive integer.
2. Ensure 'versionnumber' and 'version_id' have positive integers.
3. Update 'changetrackingmask' from '-999' to a valid mask value.
4. Confirm 'versionflag', 'name', 'chain', and 'status' fields are accurate and consistent.
5. Validate 'lastchgversionnumber' to be consistent with other 'versionnumber' fields.

SQL Query:
SELECT * FROM SDL_MDS_VN_POS_CUSTOMERS
WHERE id < 0
   OR versionnumber < 0
   OR version_id < 0
   OR changetrackingmask = -999
   OR lastchgversionnumber < 0;
Issue: id
- Contains a negative value (-1) which is unusual for an identifier that typically represents an entity.

Issue: versionnumber
- Contains an unusually high number (99999) which might not align with typical versioning increments.

Issue: version_id
- Contains a negative value (-5) which is unusual for an identifier that typically represents an entity.

Issue: customer_code
- Contains a `None` value, which suggests missing or incomplete customer information in rows where this is expected to be populated.

Issue: note_closed_store
- Contains values like "Closed" in a column that may imply notes or comments. If this column is expected to hold only notes for closed stores, it should not be empty where stores are operational, and vice versa.

Issue: enterversionnumber
- Contains a negative value (-10), which might not align with typical versioning increments.

Issue: validationstatus
- Contains both "Valid" and "Invalid" statuses, which may indicate inconsistent or problematic data entries if not intended.
========================================================================================================================================

Sure, here is the structured output based on your requirements:


table_name : SDL_DISTRIBUTOR_IVY_OUTLET_MASTER_ADFTEMP
solution : No anomalies detected. No action needed.

SQL Query:
SELECT * FROM SDL_DISTRIBUTOR_IVY_OUTLET_MASTER_ADFTEMP;


Since no anomalies were detected in the specified table, no specific issues or wrong values are present, and no solutions are required. The provided SQL query is a basic one to retrieve all data, given no anomalies were found.
1. **cdl_dttm**
   - Issue: The column name suggests a datetime format, but the sample data contains the value "Invalid Timestamp," indicating a misalignment with the expected semantic meaning.

2. **lattitude**
   - Issue: The column name should be "latitude." Additionally, the values exceed valid latitude range, which should be between -90 and 90.

3. **longitude**
   - Issue: The values exceed valid longitude range, which should be between -180 and 180.

4. **run_id**
   - Issue: The sample data contains negative numbers for what is likely an identifier, which is unusual unless specifically defined.

These columns have been highlighted due to discrepancies between their names, expected data types, or semantic meanings and the sample data provided.
========================================================================================================================================

table_name : SDL_JNJ_MER_COP
solution : emp_address_pc is missing; update with correct postal code.

SQL Query:
SELECT * 
FROM SDL_JNJ_MER_COP
WHERE emp_address_pc IS NULL;
Issue: cop_priority
- The column "cop_priority" contains values like "-1", "Negative", "Invalid", and "None", which do not align with typical priority levels. Expected values might include terms like "High", "Medium", "Low", etc.

Issue: yearmo
- The column "yearmo" contains values like "99999", "202313", "202299", "202318", "202320", "202321", "202322" which do not align with the expected YYYYMM format. It should represent a valid year and month combination.

Issue: start_date and end_date
- The column "start_date" has values that are sometimes later than corresponding "end_date" values, which is semantically incorrect as a start date should not be after an end date.
========================================================================================================================================

table_name : SDL_POP6_SG_PRODUCT_LISTS_PRODUCTS
solution : The anomaly detected involves an unexpected or incorrect value in the 'msl_ranking' field. Ensure 'msl_ranking' has valid values by comparing with those from a valid source or range. Investigate the data entry process for potential errors or inconsistencies.

SQL Query:
SELECT * FROM SDL_POP6_SG_PRODUCT_LISTS_PRODUCTS
WHERE product_list = 'List11' AND product_list_code = 'Code11' AND productdb_id = 'DB11'
  AND sku = 'SKU11' AND msl_ranking != 'expected_rank'
  AND prod_grp_date = '2023-10-20' AND file_name = 'file11.txt'
  AND run_id = '123456789012' AND crtd_dttm = '2023-10-20 22:00:00' AND hashkey = 'hash11';
Issue: MSL_RANKING - The data type is TEXT, but the column name suggests it should contain numerical rankings. Values such as 'abc', 'high', 'low', and 'xyz' are inconsistent with numerical rankings.

Issue: RUN_ID - The data type is NUMBER, but it contains negative values like '-123', which may not be expected for an ID field.
========================================================================================================================================

table_name: SDL_MDS_SG_STORE_MASTER
solution: Change 'changetrackingmask' from '3550' to appropriate mask value as it appears anomalous.

SQL Query:
SELECT *
FROM SDL_MDS_SG_STORE_MASTER
WHERE changetrackingmask = '3550';
Issue: id
- The column "id" has a negative value at index 0, which is typically not expected for an identifier column unless specifically intended for a special case.

Issue: muid
- The column "muid" has a None value at index 1, which may indicate missing data for a column that appears to represent a unique identifier.

Issue: versionname
- The column "versionname" has a None value at index 2, which may indicate missing data for a column that should describe the version name.

Issue: versionnumber
- The column "versionnumber" contains negative values at indices 4 and 10, which may indicate an error since version numbers are generally positive.

Issue: versionflag
- The column "versionflag" has a None value at index 3, which may indicate missing data for a column that should describe a version flag.

Issue: code
- The column "code" has a None value at index 7, which may indicate missing data for a column that typically holds a code value.

Issue: customer_name
- The column "customer_name" has a None value at index 8, which may indicate missing data for a column that should describe a customer name.

Issue: customer_store_code
- The column "customer_store_code" has a None value at index 9, which may indicate missing data for a column that typically holds a store code.

Issue: customer_store_name
- The column "customer_store_name" has a None value at index 10, which may indicate missing data for a column that should describe a store name.

Issue: customer_store_location
- The column "customer_store_location" has a None value at index 11, which may indicate missing data for a column that should describe a store location.

Issue: enterversionnumber
- The column "enterversionnumber" contains a negative value at index 14, which may indicate an error since version numbers are generally positive.
========================================================================================================================================

Since no anomalies were detected in the table 'DAILYSALES', there are no specific solutions required. However, I will provide a sample output format for a table with detected anomalies for your reference:


table_name : SAMPLE_TABLE
solution : Correct the 'price' column where values are negative. Ensure the 'date' column does not contain future dates.

SQL Query:
SELECT * FROM SAMPLE_TABLE WHERE price < 0 OR date > CURRENT_DATE;


As no specific issues were reported for the 'DAILYSALES' table, no solutions or queries are applicable. If you have other tables with detected anomalies, please provide the details of those issues for further assistance.
Issue: salgrossamt
- Semantic meaning suggests it should represent a positive value indicating the gross amount of sales. However, there is a negative value (-1500.0) in the sample data, which seems incorrect for a gross sales amount.

Issue: salspldiscamt
- While discounts can be negative to indicate an increase in price, it's unusual. The negative value (-100.0) found might need verification.

Issue: salschdiscamt
- Similar to special discount, a negative value (-75.0) is present, which is unusual for a discount amount. Needs verification.

Issue: salcashdiscamt
- A negative value (-40.0) is present, which is unusual for a discount. Needs verification.

Issue: mrp
- MRP, Maximum Retail Price, is expected to be a positive value. The negative value (-100.0) in the data is inconsistent with its typical meaning.
========================================================================================================================================

table_name : SDL_MDS_PH_LAV_PRODUCT
solution : The `promoendperiod` (2023-18) is earlier than the `promostartperiod` (2023-19). Correct the `promoendperiod` to be after or equal to `promostartperiod`.

SQL Query:
SELECT * FROM SDL_MDS_PH_LAV_PRODUCT
WHERE promoendperiod < promostartperiod;
Issue: muid
- Expected to contain unique identifiers; however, some entries are 'None', which may indicate missing data or should be replaced with valid UUIDs.

Issue: name
- Contains 'None' in one entry, which might indicate missing data or should be replaced with valid product names.

Issue: code
- Contains 'None' in one entry, which might indicate missing data or should be replaced with valid codes.

Issue: validationstatus
- Contains 'None' in one entry, which might indicate missing data or should be replaced with a valid status.
========================================================================================================================================

table_name : SDL_ECOMMERCE_OFFTAKE_AMAZON
solution : Correct negative quantity -10 to a valid non-negative value and verify the source data for errors.

SQL Query:
SELECT * 
FROM SDL_ECOMMERCE_OFFTAKE_AMAZON
WHERE quantity < 0;
Issue: `quantity`  
- The `quantity` column contains negative values (e.g., -10, -5, -3), which is semantically incorrect as quantity typically represents a non-negative count of items.

Issue: `mrp`  
- The `mrp` (Maximum Retail Price) column contains negative values (e.g., -1000.0, -250.0), which is semantically incorrect as MRP should be a non-negative value representing the price of an item.

Issue: `mrp_offtakes_value`  
- The `mrp_offtakes_value` column contains negative values (e.g., -16000.0, -1350.0), which might be incorrect depending on the business logic, as it usually represents the monetary value of sales or inventory removed, which is expected to be non-negative.
========================================================================================================================================

table_name : SDL_KR_COUPANG_SEARCH_KEYWORD_BY_CATEGORY
solution : Correct the ranking value for 'by_product_ranking' to match 'product_ranking' since it shows different values (45 vs 1). Ensure 'ranking' and 'by_product_ranking' are consistent with 'product_ranking'.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_SEARCH_KEYWORD_BY_CATEGORY
WHERE by_product_ranking != product_ranking OR ranking != product_ranking;
Issue: YEARMO
- The `YEARMO` column contains values such as `202113` and `202199`, which are not valid representations of year and month. Normally, a valid format would be `YYYYMM` where `MM` should be from `01` to `12`.

Issue: RUN_ID
- The `RUN_ID` column is described as a `NUMBER` type, yet it contains negative values like `-123` and `-101`, which may not be intended or valid in certain contexts.

Issue: PRODUCT_RANKING
- The `PRODUCT_RANKING` column is expected to be a ranking value, but it contains negative values like `-3` and `-5`, which are unusual for ranking systems that typically start from `1` and go upwards.

Issue: RANKING
- Similar to the `PRODUCT_RANKING` column, the `RANKING` column also contains negative values such as `-5` and `-1`, which are not typical for rank indexes.
========================================================================================================================================

table_name : SDL_AU_DSTR_SIGMA_HEADER
solution : No anomalies detected, no solution required.

SQL Query:
SELECT * FROM SDL_AU_DSTR_SIGMA_HEADER WHERE FALSE;
Issue: `cost_price`  
- The column contains negative values (e.g., -100), which is unusual for a cost price unless indicating a special accounting scenario or refund.

Issue: `soh_qty`  
- The column contains negative values (e.g., -10), which is atypical for a stock on hand quantity as it generally represents available stock.

Issue: `temp`  
- The temperature values include the unit 'C' (e.g., 25C), suggesting the actual numeric temperature is not isolated, which may cause issues in numerical computations.

Issue: `month_08` to `month_16`  
- All values are zero, suggesting potential data entry errors or placeholders rather than actual monthly data.

Issue: `ean`  
- The column contains repetitive identical values, which might not be representing distinct product identifiers as expected of EAN.

Issue: `volume_clas_code`  
- The column contains non-standardized codes (e.g., V1, V2), which could indicate a need for further standardization or mapping to meaningful categories.
========================================================================================================================================

table_name : SDL_LA_GT_VISIT  
solution :  
- Correct the 'time_survey_out' to be later than 'time_survey_in'. Current values: time_survey_in = 16:00, time_survey_out = 15:00.  
- Ensure 'count_survey' is non-negative. Current value: count_survey = -2000.  

SQL Query:  
sql  
SELECT *  
FROM SDL_LA_GT_VISIT  
WHERE (time_survey_out < time_survey_in)  
   OR (count_survey < 0);
Issue: id_sale
- Data type inconsistency: Although 'id_sale' is expected to be a unique identifier likely in TEXT format, the sample data shows it as integers.

Issue: sale_name
- Missing values: Contains 'None' for some entries, which may indicate missing sale names.

Issue: id_customer
- Missing values: Contains 'None' for some entries, which may indicate missing customer IDs.

Issue: customer_name
- Missing values: Contains 'None' for some entries, which may indicate missing customer names.

Issue: date_plan
- Data type inconsistency: Expected to be in DATE format but is stored as TEXT.

Issue: date_visi
- Data type inconsistency: Expected to be in DATE format but is stored as TEXT.

Issue: time_plan
- Data type inconsistency: Expected to be in TIME format but is stored as TEXT.

Issue: time_visi
- Data type inconsistency: Expected to be in TIME format but is stored as TEXT.

Issue: visit_end
- Data type inconsistency: Expected to be in DATE format but is stored as TEXT.

Issue: regioncode
- Missing values: Contains 'None' for some entries, which may indicate missing region codes.

Issue: branchcode
- Missing values: Contains 'None' for some entries, which may indicate missing branch codes.

Issue: saleunit
- Missing values: Contains 'None' for some entries, which may indicate missing sale units.

Issue: time_survey_in
- Data type inconsistency: Expected to be in TIME format but is stored as TEXT.

Issue: time_survey_out
- Data type inconsistency: Expected to be in TIME format but is stored as TEXT.

Issue: count_survey
- Data inconsistency: Contains negative values and zeros, which are typically not expected for survey counts.

Issue: filename
- Missing values: Contains 'None' for some entries, which may indicate missing file names.

Issue: run_id
- Data inconsistency: Contains invalid or inconsistent IDs, such as '1234', which is shorter than expected.

Issue: crt_dttm
- Data type inconsistency: Expected to be in TIMESTAMP format but is stored as TEXT.
========================================================================================================================================

table_name : SDL_MDS_MY_PS_WEIGHTS
solution : 
1. Issue with 'weight' column: Negative value detected (-190.0). Ensure 'weight' is non-negative.
2. Issue with 'validationstatus' column: Status is 'Invalid'. Correct the validation process to ensure proper status assignment.

SQL Query:
SELECT * FROM SDL_MDS_MY_PS_WEIGHTS
WHERE weight < 0 OR validationstatus = 'Invalid';
Issue: `versionnumber`, `version_id`, `enterdatetime`, `lastchgdatetime`, `enterversionnumber`, `lastchgversionnumber`
- Inconsistent `versionnumber` and `version_id`: The `versionnumber` and `version_id` columns should have unique values or maintain a particular order, but they seem redundant as they both store similar incremental values.
- `enterdatetime` and `lastchgdatetime` formats: These columns use the `TIMESTAMP_NTZ` data type, which should be consistent, but the sample data does not show any format discrepancies.
- `enterversionnumber` and `lastchgversionnumber` redundancy: Both columns track version numbers, which may not be necessary if they consistently match the `versionnumber` column. This redundancy needs to be evaluated for efficiency.

Issue: `muid`
- Possible Duplicate MUID: The first two records show a `muid` value labeled as `duplicateMUID`, which may indicate an error if `muid` is meant to be unique for each entry.
========================================================================================================================================

table_name : SDL_JNJ_CONSUMERREACH_CVS
solution : 
1. Retail name is None - Update the retailname field with the correct value.
2. status is set as Inactive - Verify if this is correct; if not, update to the correct status.

SQL Query:
SELECT * FROM SDL_JNJ_CONSUMERREACH_CVS
WHERE retailname IS NULL OR status = 'Inactive';
Column: run_id
Issue: Contains negative numbers, which may not be expected for an identifier that typically represents a sequence or count.

Column: jjskuname
Issue: Contains 'None', which might indicate missing or undefined product names.

Column: retail
Issue: Contains 'None', which might indicate missing or undefined retail identifiers.

Column: retailname
Issue: Contains 'None', which might indicate missing or undefined retail names.

Column: retailbranch
Issue: Contains 'None', which might indicate missing or undefined branch names.

Column: retailprovince
Issue: Contains 'None', which might indicate missing or undefined province names.

Column: jjskubarcode
Issue: Contains 'None', which might indicate missing or undefined barcodes.

Column: jjcore
Issue: Contains 'None', which might indicate missing or undefined core identifiers.

Column: distribution
Issue: Contains 'None', which might indicate missing or undefined distribution identifiers.

Column: status
Issue: Contains 'None', which might indicate missing or undefined status values.

Column: file_name
Issue: Contains 'None', which might indicate missing or undefined file names.
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_ECOM_PRODUCT
solution : 
1. 'muid' should not be None, assign a valid 'muid'.
2. 'cust_attr_2' should not be None, provide a valid value.
3. Ensure 'validationstatus' is appropriate and not in 'draft'.

SQL Query:
SELECT * FROM SDL_MDS_PACIFIC_ECOM_PRODUCT
WHERE muid IS NULL OR cust_attr_2 IS NULL OR validationstatus = 'draft';
Issue: `versionnumber`
- Negative values appear in `versionnumber`, which typically should be a positive integer indicating the sequential version of a product.

Issue: `muid`
- Contains `None` values, which may not be expected if `muid` is intended to be a unique identifier.

Issue: `name`
- Contains `None` values, which may not be expected if `name` is intended to have a descriptive value for each product.

Issue: `code`
- Contains `None` values, which may not be expected if `code` is intended to uniquely identify or categorize products.

Issue: `dataset`
- Contains `None` values, potentially indicating missing information about the dataset associated with each product.

Issue: `prod_attr_1`, `prod_attr_2`, `prod_attr_3`
- These columns contain `None` values, which might indicate missing product attributes that could be essential for categorization or analysis.

Issue: `enterusername`, `lastchgusername`
- Contains `None` values, which may not be expected if these fields are intended to track user actions.

Issue: `validationstatus`
- Contains `None` values, indicating missing status information which could be crucial for product validation tracking.
========================================================================================================================================

table_name : SDL_MY_AFGR
solution : No solution needed as no anomalies were detected.

SQL Query:
SELECT * FROM SDL_MY_AFGR
WHERE <condition for anomalies>;
-- Note: Replace <condition for anomalies> with your specific criteria for detecting anomalies.
Certainly! Below are the columns from the provided data set where the semantic meaning does not align with the data it holds:

Issue: `DN_AMT_EXC_GST_VAL` - The column name suggests amounts excluding GST, but some values are negative, which might not align with expectations for this column.

Issue: `RTN_ORD_AMT` - The column name suggests a return order amount, but some values are negative or `None`, which might not be expected.

Issue: `CN_AMT` - The column name suggests a credit note amount, but some values are negative or `None`, which might not be expected.

Issue: `RTN_ORD_DT` - The column name suggests a return order date, but there is a `None` value, which is unexpected for a date field.

Issue: `CN_EXP_ISSUE_DT` - The column name suggests a credit note expected issue date, but there is a `None` value, which is unexpected for a date field.

Issue: `BILL_DT` - The column name suggests a billing date, but there is a `None` value, which is unexpected for a date field.

Issue: `CDL_DTTM` - The column name suggests a datetime, but there is a `None` value, which is unexpected for a datetime field.

Issue: `FILE_NAME` - The column name suggests the name of a file, but there are `None` values, which might not be expected.

These issues indicate potential data problems or mismatches between the intended and actual data stored in these columns.
========================================================================================================================================

table_name : SDL_MY_DAILY_SELLOUT_SALES_FACT_MDS_SYNC
solution : 
1. Correct 'total_amt_after_tax' from 22950 to match 'sub_total_2' value.
2. Verify and correct 'total_amt_before_tax' if needed, as it should match 'sub_total_2' if no additional discounts apply.

SQL Query:
SELECT * 
FROM SDL_MY_DAILY_SELLOUT_SALES_FACT_MDS_SYNC
WHERE total_amt_after_tax <> sub_total_2
OR total_amt_before_tax <> sub_total_2;
Issue: DISTRIBUTOR_WH_ID
- The column contains a 'None' value which may not be appropriate if every distributor is expected to have a warehouse ID.

Issue: SALES_EMPLOYEE
- The column contains a 'None' value which may not be appropriate if every sale is expected to be associated with a sales employee.
========================================================================================================================================

I'm sorry, but there are no anomalies detected in the table 'SDL_MDS_APAC_DCL_CUSTOMERS', so no solution or SQL query is needed.
Issue: sales_channel_id - Contains negative values, which are unusual for an ID column typically representing a positive integer.

Issue: retailer_name_code - The code "Code1", "Code2", etc., might imply categorical data, whereas the column name suggests a more specific code format.

Issue: changetrackingmask - Contains negative values, which seem unusual for a tracking mask, typically expected to be a non-negative integer.

Issue: retailer_name_id - Contains negative values, which are unusual for an ID column typically representing a positive integer.

Issue: enterversionnumber - Contains negative values, which are unusual for a version number column typically representing a positive integer.

Issue: lastchgusername - Lacks consistency in the values, as usernames typically follow a consistent format or pattern.
========================================================================================================================================

table_name : SDL_JNJ_CONSUMERREACH_SFM
solution : Correct 'yearmo' to '202302' based on 'cdate' value being '2023-02-19'.

SQL Query:
SELECT * 
FROM SDL_JNJ_CONSUMERREACH_SFM
WHERE LENGTH(yearmo) != 6 OR LEFT(yearmo, 4) != LEFT(cdate, 4) OR SUBSTRING(yearmo, 5, 2) != SUBSTRING(cdate, 6, 2);
Issue: CDATE - Contains an invalid date '9999-01-04', which does not conform to typical calendar dates.

Issue: DISTRIBUTION - Contains negative values such as '-100' and '-900', which are unexpected for a field likely representing distribution quantity or value.
========================================================================================================================================

table_name : SDL_LA_GT_SELLOUT_FACT
solution : 
Issue: Negative grossprice (-100.0) for productcode P001.
Solution: Verify data source for pricing error and correct grossprice to a non-negative value.

SQL Query:
SELECT *
FROM SDL_LA_GT_SELLOUT_FACT
WHERE grossprice < 0;
1. **Column Name: avgdiscount**
   - Issue: The `avgdiscount` column contains a negative value (-80.0), which is unusual for a discount percentage. Discounts are typically positive values.

2. **Column Name: orderdate**
   - Issue: Although the `orderdate` column is expected to be a date format, it is stored as a TEXT data type according to the metadata. This may cause issues with date operations.

3. **Column Name: crt_dttm**
   - Issue: The `crt_dttm` column is expected to be a TIMESTAMP, but it is stored as TIMESTAMP_NTZ. Depending on the system, this might affect timezone handling.

4. **Column Name: distributorid**
   - Issue: The `distributorid` column is stored as TEXT with a character maximum length of 10.0, but the sample data shows an ID of length 6. Ensure this length is consistent with all records.

5. **Column Name: arname**
   - Issue: The `arname` column is stored as TEXT with a maximum length of 500.0, which seems excessive given the sample data. Consider reviewing if this maximum length is necessary.

6. **Column Name: arcode**
   - Issue: The `arcode` column is stored as TEXT with a maximum length of 20.0, which might be excessive given the sample data format.
========================================================================================================================================

table_name: SDL_CSL_UDCMASTER
solution: 
- columnprecision has wrong value: -5. Set columnprecision to a valid non-negative integer.
- columnmandatory has wrong value: -2. Set columnmandatory to a valid boolean value (0 or 1).
- udcstatus has wrong value: 2. Set udcstatus to a valid status code within the expected range.
- run_id has wrong value: -43. Set run_id to a valid non-negative integer.

SQL Query:
SELECT * 
FROM SDL_CSL_UDCMASTER
WHERE columnprecision < 0 
   OR columnmandatory NOT IN (0, 1) 
   OR udcstatus NOT IN (0, 1) -- Assuming valid udcstatus codes are 0 and 1
   OR run_id < 0;
Issue: `udcmasterid`  
- The values include negative numbers which may not be appropriate for an identifier column.

Issue: `masterid`  
- The values include negative numbers which may not be appropriate for an identifier column.

Issue: `columnsize`  
- Includes negative values which are not valid for a size specification.

Issue: `columnprecision`  
- Includes negative values which are not valid for a precision specification.

Issue: `editable`  
- The column might represent a boolean or categorical field, but contains values such as -3, -2, etc., which are not typically used in such contexts.

Issue: `columnmandatory`  
- The column might represent a boolean or categorical field, but contains values such as -2, -1, etc., which are not typically used in such contexts.

Issue: `pickfromdefault`  
- The column might represent a boolean or categorical field, but contains values such as -1, etc., which are not typically used in such contexts. 

Issue: `createduserid`  
- Contains negative numbers which may not be appropriate for an identifier column.

Issue: `modifieduserid`  
- Contains negative numbers which may not be appropriate for an identifier column.

Issue: `udcstatus`  
- The column might represent a status but contains negative values which are unusual for status indicators. 

Issue: `run_id`  
- Contains negative numbers which may not be appropriate for an identifier column.
========================================================================================================================================

table_name: SDL_KR_COUPANG_DAILY_BRAND_REVIEWS
solution: Review score star should be between 1 and 5. Correct the review_score_star from 6 to a valid score.

SQL Query:
SELECT * 
FROM SDL_KR_COUPANG_DAILY_BRAND_REVIEWS
WHERE review_score_star NOT BETWEEN 1 AND 5;
Issue: REVIEW_SCORE_STAR  
- The column name suggests a star rating, typically ranging from 1 to 5. However, the data contains values such as '0' and '6', which are outside the expected range for a star rating.

Issue: REVIEW_DATE  
- Expected data type for dates is usually a date format, but the metadata suggests it is stored as TEXT. This could lead to potential sorting and comparison issues.
========================================================================================================================================

table_name : SDL_CSL_DAILYSALES
solution : The anomaly is in the 'salnetamt' column. It should be calculated as (salgrossamt - saltotdedn + saltotaddn - salroundoffamt). Here, 40000.0 - 5800.0 + 0.0 - 0.0 = 34200.0, which is correct. No issue detected in data logic. Verify if any other related calculations or data inputs are affected.

SQL Query:
SELECT * 
FROM SDL_CSL_DAILYSALES
WHERE salnetamt != (salgrossamt - saltotdedn + saltotaddn - salroundoffamt);
Issue: distcode - Presence of 'None' value which might represent missing data and could cause issues in analysis if not handled properly.

Issue: salinvmode - Semantic meaning suggests the mode of sales (e.g., Online, Offline), but no issues are present in the given data.

Issue: salinvtype - Semantic meaning suggests the type of sales (e.g., Retail, Wholesale), but no issues are present in the given data.

Issue: salgrossamt - Contains a negative value (-5000.0) which may not align with the expected positive gross sale amount.

Issue: mrp - Contains a negative value (-50.0) which may not be expected for a maximum retail price.

Note: Other columns were scanned and found to have data that aligns with their semantic meaning.
========================================================================================================================================

table_name : SDL_CSL_DAILYSALES_UNDELIVERED
solution : No anomalies detected, no solution required.

SQL Query:
-- No anomalies detected, hence no SQL query required for this table.
Certainly! Below are the columns that have issues based on the provided data and metadata:

1. **salgrossamt**
   - **Issue:** The column `salgrossamt` has negative values, such as `-1500.0`. Typically, gross amounts should be positive, as they represent total sales amounts before deductions.

2. **salspldiscamt**
   - **Issue:** The column `salspldiscamt` includes a negative value, `-100.0`, which suggests an error because discount amounts are usually positive as they represent reductions.

3. **salschdiscamt**
   - **Issue:** The column `salschdiscamt` has a negative value, `-90.0`. Like other discount columns, this should typically contain positive numbers as discounts reduce the sales total.

4. **salcashdiscamt**
   - **Issue:** The column `salcashdiscamt` contains a negative value, `-200.0`, which is unusual since cash discounts typically reduce the amount due, implying they should be positive.

These are the columns where the semantic meaning of the data might not align with the expected column purpose.
========================================================================================================================================

table_name : SDL_CSL_RDSSMWEEKLYTARGET_OUTPUT
solution : 
1. 'distcode', 'targetrefno', 'smcode', 'smname', 'rmcode', 'rmname', 'targetmonth', 'targetname', 'targetstatus', 'targettype', 'downloadstatus', 'file_name' should not be None.
2. 'targetyear' should not be negative.
3. 'targetvalue', 'week1', 'week2', 'week3', 'week4', 'week5' should not have negative values.
4. 'run_id' should not be negative.

SQL Query:
SELECT * 
FROM SDL_CSL_RDSSMWEEKLYTARGET_OUTPUT
WHERE distcode IS NULL 
   OR targetrefno IS NULL 
   OR smcode IS NULL 
   OR smname IS NULL 
   OR rmcode IS NULL 
   OR rmname IS NULL 
   OR targetmonth IS NULL 
   OR targetname IS NULL 
   OR targetstatus IS NULL 
   OR targettype IS NULL 
   OR downloadstatus IS NULL 
   OR file_name IS NULL 
   OR targetyear < 0 
   OR targetvalue < 0 
   OR week1 < 0 
   OR week2 < 0 
   OR week3 < 0 
   OR week4 < 0 
   OR week5 < 0 
   OR run_id < 0;
Issue: targetyear - The year 9999 in row 2 seems unrealistic for a target year.
Issue: targetvalue - Negative values (e.g., -100.0 in row 0, -500.0 in row 5) may need further investigation as target values are typically positive.
Issue: targetstatus - The entry "Negative" in row 5 does not match typical statuses like "Open" or "Closed."
Issue: targettype - The entry "Negative" in row 5 does not match typical types like "Monthly" or "Quarterly."
Issue: downloadstatus - The entry "Negative" in row 5 does not fit expected statuses like "Yes" or "No."
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_ACCT_NIELSENCODE_MAPPING
solution : 
1. 'id' should be a positive integer. Current value is -2.
2. 'versionname' should not be None or null.
3. 'versionflag' should not be None or null.

SQL Query:
SELECT * 
FROM SDL_MDS_PACIFIC_ACCT_NIELSENCODE_MAPPING 
WHERE id < 0 
   OR versionname IS NULL 
   OR versionflag IS NULL;
Issue: versionnumber
- Contains negative values, which might not be expected for version numbers. 

Issue: code
- Contains None values, which might not be expected for a code field that usually requires unique identifiers.

Issue: changetrackingmask
- Contains NaN values, which might indicate a lack of data tracking, potentially problematic for change tracking.

Issue: ac_nielsencode
- Contains None values, which might not be expected for a field that typically requires a unique code.

Issue: ac_longname
- Contains None values, which might not be expected for a field that should have descriptive text.

Issue: versionflag
- Contains None values, which might not align with the expected flag status for versioning.

Issue: validationstatus
- Contains the value 'None', which might not align with expected validation statuses such as 'Validated', 'Pending', or 'Invalid'.
========================================================================================================================================

table_name : SDL_MDS_VN_CUSTOMER_SEGMENTATION
solution : The anomaly is due to a negative value in the 'versionnumber' column (-32) and 'changetrackingmask' column (-245). Ensure all version numbers and changetrackingmask values are non-negative integers.

SQL Query:
SELECT *
FROM SDL_MDS_VN_CUSTOMER_SEGMENTATION
WHERE versionnumber < 0 OR changetrackingmask < 0;
Issue: id
- The 'id' column contains negative values, which might not be appropriate for identifiers that are typically expected to be positive.

Issue: versionnumber
- The 'versionnumber' column contains negative values, which is unusual for version numbers that are typically positive integers.

Issue: code
- The 'code' column contains a `None` value, which might be unexpected for a code that is generally a non-null integer.

Issue: name
- The 'name' column contains a `None` value, which might be unexpected for a name that is generally a non-null text.

Issue: customer_segmentation_level_2_name
- The 'customer_segmentation_level_2_name' column contains text values but the expected maximum length is 500 characters, which might not be necessary for these short names.
========================================================================================================================================

table_name : SDL_ID_POS_CARREFOUR_STOCK
solution : Negative stock_amt detected for Clothing with value -1500.0. Correct to ensure stock_amt is non-negative.

SQL Query:
SELECT * 
FROM SDL_ID_POS_CARREFOUR_STOCK
WHERE stock_amt < 0;
Issue: `stock_qty`  
- The column name suggests it should contain positive or zero values representing quantity, but it contains negative values, which may indicate returns or errors in data entry.

Issue: `stock_amt`  
- The column name implies it should contain non-negative values representing monetary amounts, but it includes negative values, which could indicate refunds or incorrect data.

Issue: `stock_days`  
- The column name suggests it should contain non-negative values representing the number of days, but it contains negative values, which may be data entry errors.

Issue: `yearmonth`  
- The `yearmonth` column is expected to represent a combination of year and month, but the value `202399` is not valid, as it suggests a nonexistent month.
========================================================================================================================================

table_name : SDL_MDS_PH_LAV_CUSTOMER
solution : No anomalies detected.

SQL Query:
-- No anomalies detected, so no specific SQL query is provided.
Issue: $sourcenaturalkey - The column name suggests a unique identifier for the data source, but it contains negative float values which may not align with typical key values.

Issue: barangaycode_code - The column is expected to hold a code representing a barangay, but contains 'None' which does not align with a valid code format.

Issue: channelcode_code - The column is expected to hold a code for the channel, but the data contains placeholder-like values ('CHANNEL_DUP', 'CHANNEL_DUP2') which do not align with typical code formats.

Issue: channelsubgroupcode_code - The column name suggests a code for a channel subgroup, but it contains 'None' which is not a valid code.

Issue: reportgroup9desc_name - The column is expected to hold names for report group descriptions, but the values ('NegativeReport9', 'NegativeReport92') appear to be placeholders rather than meaningful names.

Issue: validationstatus - The column is expected to describe the validation status, but values like 'Invalid' and 'Invalid2' suggest placeholder data rather than a defined validation state.

Issue: version_id - The column name suggests a numeric identifier for versioning, but negative values are used which may not align with typical use of version identifiers.

Issue: zipcode_code - The column is expected to hold a code for a zipcode, but the data contains placeholder-like values ('ZIP_DUP', 'ZIP_DUP2') which do not align with typical code formats.

Issue: zipcode_id - The column name suggests a numeric identifier for a zipcode, but negative values are used which may not be appropriate for this context.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCT_MASTER
solution : No issues detected.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_PRODUCT_MASTER
WHERE 1=0; -- No anomalies detected, so no specific condition to filter anomalies
Issue: RANKING contains non-numeric values such as 'abc', 'five', 'XYZ', 'two', which are not consistent with expected numeric or numeric-like data.
Issue: YEARMO contains values like '202313', '202314', '202315', etc., which are not valid year-month representations as months should range from 01 to 12.
Issue: JNJ_PRODUCT_FLAG contains 'None', which is inconsistent with expected 'Y' or 'N' values.
========================================================================================================================================

table_name : SDL_HK_IMS_VIVA_SEL_OUT  
solution :  
- Replace negative sales_volume (-1000.0), sales_order_quantity (-50.0), and net_trade_sales (-5000.0) with positive values or investigate why these values are negative as sales figures should not be negative.  
- Correct the 'local_curr_exch_rate' from 0.0 to the appropriate exchange rate.  
- Ensure 'account_types' is not None; assign a valid account type if applicable.  
- Verify 'sales_office', 'sales_group', 'sales_office_name', and 'sales_group_name' lengths to ensure they fit within expected field lengths.  

SQL Query:  
sql
SELECT * FROM SDL_HK_IMS_VIVA_SEL_OUT 
WHERE sales_volume < 0 
   OR sales_order_quantity < 0 
   OR net_trade_sales < 0 
   OR local_curr_exch_rate = 0 
   OR account_types IS NULL
   OR LENGTH(sales_office) != 10 
   OR LENGTH(sales_group) != 10 
   OR LENGTH(sales_office_name) > 15 
   OR LENGTH(sales_group_name) > 15;
Issue: calendar_sid
- The data type in the metadata is "DATE," but the sample data values are in string format representing dates (e.g., "2023-01-01"). Ensure that these are properly converted to date objects in your database.

Issue: sales_office and sales_group
- The metadata specifies a maximum length of 10 characters, but the sample data includes a value "1234567890" for both columns. Ensure the data does not exceed 10 characters.

Issue: sales_office_name and sales_group_name
- The metadata specifies a maximum length of 15 characters, but the sample data includes values "123456789012345" for both columns. Ensure the data does not exceed 15 characters.

Issue: local_curr_exch_rate
- The sample data includes a value of 0.0 and negative values, which may not be appropriate for exchange rates. Verify if these values are accurate or require handling.

Issue: crt_dttm and updt_dttm
- The metadata specifies "TIMESTAMP_NTZ," but the sample data shows string representation of timestamps (e.g., "2023-01-01 12:00:00"). Ensure these are stored as proper timestamp objects in your database.
========================================================================================================================================

table_name : SDL_MDS_PH_POS_CUSTOMERS
solution : No solution needed as no anomalies were detected.

SQL Query:
SELECT * FROM SDL_MDS_PH_POS_CUSTOMERS WHERE 1=0;
Certainly! Below are the columns with issues based on their semantic meaning and the data they contain:

1. **barangaycode_id**
   - **Issue**: Contains a value of `-1` which is unexpected for a column presumably representing an ID. Typically, IDs are positive integers.

2. **versionnumber**
   - **Issue**: Contains a value of `-1`, which is inconsistent with the expected positive or zero values for version numbers.

3. **zipcode_id**
   - **Issue**: Contains a value of `-1`, similar to the `barangaycode_id`, which is unexpected for an ID.

These columns contain values that do not align with the typical expectations for IDs and version numbers, which are usually non-negative integers.
========================================================================================================================================

table_name: SDL_MY_ACCRUALS
solution: The anomaly in 'SDL_MY_ACCRUALS' is detected in the 'may_val' column where the value is negative (-60). Ensure all monthly values are non-negative. Correct 'may_val' for cust_id 67890 from -60 to the correct non-negative value.

SQL Query:
SELECT * FROM SDL_MY_ACCRUALS
WHERE may_val < 0;
Issue: `jj_year` - The value `10000` seems unrealistic for a year.
Issue: `file_type` - The value `None` does not align with expected file type formats.
Issue: `jan_val`, `feb_val`, `mar_val`, `apr_val`, `may_val`, `jun_val`, `jul_val`, `aug_val`, `sep_val`, `oct_val`, `nov_val`, `dec_val` - These columns contain negative values, which may not be expected for monthly values.
Issue: `file_name` - The name `file.txt` is generic and might not be meaningful in context.
========================================================================================================================================

table_name : SDL_MDS_SG_PRODUCT_EXCEPTIONS
solution : The 'changetrackingmask' field has an invalid negative value of '-500'. Ensure 'changetrackingmask' has a valid positive integer.

SQL Query:
SELECT * 
FROM SDL_MDS_SG_PRODUCT_EXCEPTIONS
WHERE changetrackingmask < 0;
Issue: `versionnumber` - The column name suggests it should represent version numbers as positive integers, but there are negative values present in the data, such as -1, -14, -24, -31.

Issue: `code` - The column is expected to contain text codes, but there are missing values (None) in the data, which may not align with the expectation that each entry should have a code.

Issue: `name` - The column is expected to contain names, but there are missing values (None) in the data, which may not align with the expectation that each entry should have a name.

Issue: `itemcode` - The column is expected to contain item codes as positive numbers, but there are negative values present in the data, such as -1003, -1010, -1019, etc.

Issue: `enterusername` - The column is expected to contain usernames, but there are missing values (None) in the data, which may not align with the expectation that each entry should have a username.

Issue: `barcode` - The column is expected to contain barcodes, but there are missing values (None) in the data, which may not align with the expectation that each entry should have a barcode.

Issue: `lastchgusername` - The column is expected to contain usernames, but there are missing values (None) in the data, which may not align with the expectation that each entry should have a username.
========================================================================================================================================

table_name : SDL_CHS_DSTR
solution : 
1. last_cost should not be negative. Correct the value from -10.0 to a valid positive number.
2. month_06 should not be negative. Correct the value from -60.0 to a valid positive number.
3. month_12 should not be negative. Correct the value from -120.0 to a valid positive number.

SQL Query:
SELECT *
FROM SDL_CHS_DSTR
WHERE last_cost < 0 
   OR month_06 < 0 
   OR month_12 < 0;
Column: inv_dt
Issue: The column is expected to contain date values, but the data type in the metadata is listed as TEXT. It should be a DATE or DATETIME format.

Column: last_cost
Issue: Contains negative values. Typically, last cost should be a non-negative number unless negative values are intended to represent specific cases.

Column: soh_qty
Issue: Contains negative values. Stock on hand (soh_qty) usually represents the quantity of items available and should be non-negative unless negative values indicate specific scenarios like backorders.

Column: month_05, month_06, month_12
Issue: Contains negative values. These columns likely represent monthly quantities or metrics, which are usually non-negative unless negative values have a specific intended meaning.

Column: file_name
Issue: The file names are inconsistent in terms of the numbering and sequence (e.g., file1.csv, file2.csv). This might lead to confusion or errors when accessing specific files.
========================================================================================================================================

table_name : SDL_ID_POS_IDM_SELLOUT
solution : Correct the 'yearmonth' value from '202349' to a valid format, such as '202304'.

SQL Query:
SELECT * 
FROM SDL_ID_POS_IDM_SELLOUT
WHERE LENGTH(yearmonth) != 6 
   OR CAST(SUBSTRING(yearmonth, 5, 2) AS INTEGER) NOT BETWEEN 1 AND 12;
Issue: `description` - Contains entries like "None" and "Missing description" which may indicate missing or placeholder data rather than actual descriptions.  
Issue: `yearmonth` - Contains non-standard values (e.g., "12345", "202313") that do not conform to the expected "YYYYMM" format, suggesting potential issues with data entry or extraction.  
Issue: `run_id` - Contains negative values, which may not be semantically valid if `run_id` is intended to be a positive identifier or sequence number.
========================================================================================================================================

table_name : SDL_CHW_ECOMM_DATA
solution : Correct the negative value in 'sales_online' for row with 'skuname' as 'OvenI'. Ensure 'sales_online' is positive or zero.

SQL Query:
SELECT * 
FROM SDL_CHW_ECOMM_DATA
WHERE sales_online < 0;
Issue: `skuname`
- The column name suggests it should contain unique product names or identifiers, but the presence of `None` in the data does not align with this expectation.

Issue: `sales_online`
- The column name suggests it should contain non-negative sales figures, but negative values are present, which may indicate returns or errors.

Issue: `unit_online`
- The column name suggests it should contain non-negative unit counts, but negative values are present, which may indicate returns or errors. Additionally, the presence of `None` may not align with expectations if every entry should have a value.
========================================================================================================================================

table_name : SDL_ID_POS_DAILY_BASEDLINE_SELLOUT
solution : 
- Negative values detected in columns: plu, qty_trx, cum_ytm_qty, promo_qty, basedline_total_qty, total_days, promo_days, baselined_total_days, total_qty_baselined, indirect_qty_trx, indirect_cum_qty, indirect_promo_qty, indirect_basedline_total_qty, indirect_qty_basedlined, run_id. Ensure these columns have only non-negative values.
- Invalid 'month' value: 13. Month should be between 1 and 12.
- Invalid 'year' value: 9999. Confirm the year is accurate and within expected range.
- Invalid 'yearmonth' format: 2024-13. Ensure the format is 'YYYY-MM' and month is valid.
- Future 'crtd_dttm' detected: 2023-01-01. Ensure this date is correct and not in the future.
- Ensure 'file_name' corresponds correctly with the data content.

SQL Query:
SELECT * FROM SDL_ID_POS_DAILY_BASEDLINE_SELLOUT
WHERE plu < 0
   OR qty_trx < 0
   OR cum_ytm_qty < 0
   OR promo_qty < 0
   OR basedline_total_qty < 0
   OR total_days < 0
   OR promo_days < 0
   OR baselined_total_days < 0
   OR total_qty_baselined < 0
   OR indirect_qty_trx < 0
   OR indirect_cum_qty < 0
   OR indirect_promo_qty < 0
   OR indirect_basedline_total_qty < 0
   OR indirect_qty_basedlined < 0
   OR run_id < 0
   OR month < 1 OR month > 12
   OR year < 1900 OR year > 2100
   OR TRY_TO_DATE(CONCAT(year, '-', LPAD(month::STRING, 2, '0')), 'YYYY-MM') IS NULL
   OR TRY_TO_DATE(crtd_dttm, 'YYYY-MM-DD') > CURRENT_DATE;
Issue: month
  - The sample data contains values like 13 and 0, which are not valid month numbers. Months should be in the range 1-12.
  
Issue: year
  - Includes values like 9999 and 10000, which appear to be invalid or unrealistic years for typical datasets. 
  
Issue: roi_month
  - Includes values like "January" and "None", which do not align with the expected numerical values for this column based on the metadata.
  
Issue: yearmonth
  - Contains values like "2024-13" and "2023-00", which are not valid year-month combinations. The second part should be a valid month number (01-12).
========================================================================================================================================

table_name : SDL_KR_BO_YOUNG_JONG_HAP_LOGISTICS_GT_SELLOUT
solution : Correct the 'qty' value from -100 to a positive number. Negative quantities are not valid for transactions.

SQL Query:
SELECT *
FROM SDL_KR_BO_YOUNG_JONG_HAP_LOGISTICS_GT_SELLOUT
WHERE qty < 0;
Column: qty
Issue: Negative and zero values may not be appropriate if this column is intended to represent quantities of products sold.

Column: unit_price
Issue: Negative values may not be appropriate if this column is intended to represent positive pricing information.

Column: file_name
Issue: The file names appear to be in sequential order, which might not necessarily be an issue, but if intended to provide unique identifiers or specific naming conventions, this could be a point of concern.
========================================================================================================================================

table_name : SDL_GCCH_CUST_HIER
solution : 
1. Correct `tamr_id` from -1 to a valid positive integer.
2. Update `manualclassificationid` from -5 to a valid positive integer.
3. Ensure `suggestedclassificationscore` is within a valid range (e.g., between 0 and 1).
4. Verify `dateofextract` matches expected date format and correct if necessary.

SQL Query:
SELECT * 
FROM SDL_GCCH_CUST_HIER 
WHERE tamr_id = -1 
   OR manualclassificationid = -5 
   OR suggestedclassificationscore < 0 
   OR dateofextract != 'YYYY-MM-DD'
Issue: `tamr_id`
- The column contains negative values (e.g., -1), which might not be expected for an identifier column. Typically, IDs are non-negative numbers.

Issue: `manualclassificationid`
- The column contains negative values (e.g., -5), which might not be expected for classification IDs. Typically, IDs are non-negative numbers.

Issue: `suggestedclassificationscore`
- The column contains negative values (e.g., -10.0, -20.0), which is unusual for a score, as scores are generally non-negative.

Issue: `unique_id`
- The column contains a `None` value, which might not be expected for a unique identifier column. Each entry should typically have a unique value.
========================================================================================================================================

table_name : SDL_JNJ_CONSUMERREACH_711
solution : 
1. 'jjskuname' is missing (None). Update with the correct product name for 'jjskubarcode' 9876543210987.
2. 'status' is 'Inactive'. Verify whether this is correct, and update if necessary.

SQL Query:
SELECT * FROM SDL_JNJ_CONSUMERREACH_711
WHERE jjskuname IS NULL OR status = 'Inactive';
Issue: `id`
- The column `id` is expected to contain unique identifiers for the records, but there are duplicate values (e.g., the value `1` appears twice).

Issue: `retailname`
- The `retailname` column has instances where the value is `None`, which may indicate missing or incomplete data for the retail name.

Issue: `retailbranch`
- The `retailbranch` column has instances where the value is `None`, suggesting missing information for the branch name.

Issue: `retailprovince`
- The `retailprovince` column has instances where the value is `None`, indicating missing data for the province.

Issue: `jjskubarcode`
- The column `jjskubarcode` has instances where the value is `None` or `0`, which could imply missing or invalid barcode data.

Issue: `jjskuname`
- The `jjskuname` column contains `None` values, indicating missing product names.

Issue: `jjcore`
- The `jjcore` column has a `None` value, suggesting missing core information.

Issue: `file_name`
- The `file_name` column contains `None` values, indicating missing file name information.
========================================================================================================================================

table_name : PROD_PRODUCT
solution : 
- width has an incorrect negative value of -2300.0; should be a positive number.
- maximumorderquantity has an incorrect negative value of -45000.0; should be a positive number.

SQL Query:
SELECT * 
FROM PROD_PRODUCT
WHERE width < 0 OR maximumorderquantity < 0;
Issue: `width`
- Contains negative values, which may not be semantically valid for a dimension like width.

Issue: `maximumorderquantity`
- Contains negative values, which may not be semantically valid for a quantity.

Issue: `fetchedsequence`
- Contains negative values, which is unusual for a sequence number.
========================================================================================================================================

table_name : SDL_MDS_SG_CUSTOMER_HIERARCHY  
solution : The 'customer_segmentation_level_2_id' value 50 is duplicated and should be unique. Correct the 'customer_segmentation_level_2_id' to ensure uniqueness.

SQL Query:  
sql  
SELECT *  
FROM SDL_MDS_SG_CUSTOMER_HIERARCHY  
WHERE customer_segmentation_level_2_id = 50;
Certainly! Here are the columns with issues based on the data provided:

1. **Column: `versionnumber`**
   - **Issue:** Contains negative values (e.g., `-10`, `-8`). Version numbers are typically non-negative integers.

2. **Column: `version_id`**
   - **Issue:** Contains negative values (e.g., `-8`). IDs are typically non-negative integers.

3. **Column: `muid`**
   - **Issue:** Contains `None` value. MUID should likely be a unique identifier, and `None` may indicate missing data.

4. **Column: `versionname`**
   - **Issue:** Contains `None` value. Version names should generally be descriptive strings, and `None` may indicate missing data.

5. **Column: `versionflag`**
   - **Issue:** Contains `None` value. Flags should typically indicate specific states or categories, and `None` may indicate missing data.

6. **Column: `changetrackingmask`**
   - **Issue:** Contains negative value (e.g., `-1`). Mask values, if used as bit-masks, are generally positive integers.

Please review these columns and ensure that the data is accurate and aligns with the expected semantic meaning.
========================================================================================================================================

table_name : SDL_CLAVIS_GB_SEARCH_TERMS_RESULTS
solution : No solution needed as no anomalies were detected.

SQL Query:
SELECT * FROM SDL_CLAVIS_GB_SEARCH_TERMS_RESULTS WHERE 1=0; -- No anomalies detected, so the query returns no results.
client_id: Contains numeric and None values, expected to be a unique identifier (TEXT) for clients. Format inconsistency with None values and incorrect length.

id: Contains alphanumeric and None values, expected to be a unique identifier (TEXT). Format inconsistency with None values.

type: Contains various string values, but includes "InvalidType" and "AnotherType" which may not align with expected valid types.

region: Contains alphanumeric codes, expected to be a region code (TEXT) with a maximum length of 3. Format inconsistency with None values.

search_term: Contains various invalid strings and None values, expected to be valid search terms (TEXT).

online_store: Contains None values, expected to be text representing store names (TEXT).

brand: Contains None values, expected to be text representing brand names (TEXT).

category: Contains None values, expected to be text representing category names (TEXT).

manufacturer: Contains None values, expected to be text representing manufacturer names (TEXT).

search_results_weighted_score: Contains negative and NaN values, expected to be a positive score (NUMBER).

search_results_priority_score: Contains negative and NaN values, expected to be a positive score (NUMBER).

search_results_segment: Contains various segment names, includes None which is inconsistent with expected segments (TEXT).

search_results_segment_value: Contains segment values, includes None which is inconsistent with expected values (TEXT).

search_results_max_rank: Contains negative and NaN values, expected to be a non-negative rank (NUMBER).

ext_page_no: Contains negative and NaN values, expected to be a positive page number (NUMBER).

etl_run_id: Contains None values, expected to be a run identifier (TEXT).

delete_ind: Contains None values, expected to be 'Y' or 'N' indicating delete status (TEXT).

run_id: Contains numeric values, expected to be an identifier (NUMBER) but could benefit from consistency check.
========================================================================================================================================

table_name : SDL_DISTRIBUTOR_CUSTOMER_DIM
solution : Ensure numeric data types are used for columns intended to store numeric values. Verify data source for missing or incorrect data entries and correct them. If the data source is correct, consider applying data type conversion or default value strategies during data import.

SQL Query:
SELECT *
FROM SDL_DISTRIBUTOR_CUSTOMER_DIM
WHERE TRY_TO_NUMBER(column_name) IS NULL
  AND column_name IS NOT NULL;
Issue: cust_crtd_dt
- The data type is TEXT, but the values appear to represent datetime data. Consider using a datetime data type for better accuracy and operations.

Issue: crtd_dttm
- The data type is TEXT, but the values appear to represent datetime data. Consider using a datetime data type for better accuracy and operations.

Issue: updt_dttm
- The data type is TEXT, but the values appear to represent datetime data. Consider using a datetime data type for better accuracy and operations.

Issue: pst_cd
- The data type is TEXT, but the values appear numerical (postal codes). Ensure the format aligns with expected postal code formats.
========================================================================================================================================

table_name : SDL_DSTR_WOOLWORTH_INV
solution : Correct the following issues:
1. 'articledesc' is None. Ensure it has a valid description.
2. 'lt' cannot be negative. Set 'lt' to a non-negative value.
3. 'alc_status' is marked as Allocated, but 'sl_missed_value' is negative. Verify allocation status or sales data.
4. 'om' is negative. Correct to reflect a valid order multiple.
5. 'sl_perc' is negative. Ensure sales percentage is correctly calculated.
6. 'sl_missed_value' is negative. Correct sales data or allocation status.
7. 'soh_oms' is negative. Ensure stock on hand is correct.
8. 'soh_price' is negative. Validate stock price calculation.
9. 'demand_oms' is negative. Correct demand data.
10. 'avg_issues' is negative. Recalculate average issues correctly.
11. 'dos_oms' is negative. Ensure days of supply is calculated correctly.
12. 'cons_days_oos' is negative. Correct consecutive days out of stock.
13. 'total_wholesale_demand_om' is negative. Ensure total wholesale demand is correct.
14. 'wholesale_flag' is 'No', verify if it should be 'Yes' based on demand and supply conditions.

SQL Query:
SELECT *
FROM SDL_DSTR_WOOLWORTH_INV
WHERE articledesc IS NULL
   OR lt < 0
   OR alc_status = 'Allocated' AND sl_missed_value < 0
   OR om < 0
   OR sl_perc < 0
   OR sl_missed_value < 0
   OR soh_oms < 0
   OR soh_price < 0
   OR demand_oms < 0
   OR avg_issues < 0
   OR dos_oms < 0
   OR cons_days_oos < 0
   OR total_wholesale_demand_om < 0
   OR wholesale_flag = 'No';
Issue: articledesc - Some entries have the value "None," which suggests missing or invalid data.
Issue: oos_comments - Some entries have the value "None," which suggests missing or invalid data.
Issue: total_wholesale_demand_om - Some entries have negative values, which may not align with the expected meaning of demand.
Issue: cons_days_oos - Some entries are negative, which may not align with the semantic meaning of consecutive days out of stock.
Issue: wholesale_flag - Inconsistencies in flag values (e.g., "Yes" and "No") might need validation to ensure they reflect accurate status.
========================================================================================================================================

table_name : SDL_MDS_PH_CLOBOTICS_SOS_REF
solution : 
1. Invalid 'enterdatetime' and 'lastchgdatetime' detected. Dates are set in the future (2031-05-01, 2031-06-01). Correct to appropriate past or present dates.

SQL Query:
SELECT * FROM SDL_MDS_PH_CLOBOTICS_SOS_REF
WHERE enterdatetime > CURRENT_DATE OR lastchgdatetime > CURRENT_DATE;
Issue: `id`
- The column `id` contains a negative value (-1), which is unusual for an ID column typically expected to be a positive unique identifier.

Issue: `versionnumber`
- The column `versionnumber` contains a negative value (-2), which is unexpected as version numbers are typically non-negative.

Issue: `version_id`
- The column `version_id` contains a negative value (-1), which is unexpected as version IDs are typically non-negative.

Issue: `muid`
- The column `muid` has a value ("muid-too-long-for-column-length") that exceeds the expected maximum length of 36 characters.

Issue: `changetrackingmask`
- The column `changetrackingmask` contains a negative value (-1), which might be unexpected depending on the context, as tracking masks are typically non-negative.

Issue: `includetag`
- The column `includetag` has values like "N" and "Y", but the column's character maximum length is 2, which should be fine. Ensure that the values are correct for the intended purpose (e.g., "Yes"/"No" instead of "Y"/"N" if that's the requirement).

Issue: `validationstatus`
- The column `validationstatus` consistently contains the value "Invalid", which may indicate a broader issue with data validation processes if the expectation is to have a mix of statuses.
========================================================================================================================================

table_name : SDL_LA_GT_ROUTE_DETAIL_TEMP
solution : The 'created_date' (2023-11-19) is in the future compared to the 'file_upload_date' (2023-11-03). Ensure 'created_date' is on or before 'file_upload_date'.

SQL Query:
SELECT * 
FROM SDL_LA_GT_ROUTE_DETAIL_TEMP
WHERE created_date > file_upload_date;
1. Column: created_date
   Issue: The data type is specified as TEXT, but the data represents dates, which should ideally be in DATE format for consistency and validation.

2. Column: file_upload_date
   Issue: The data type is specified as DATE, which is correct semantically, but the metadata does not specify a character maximum length, which could be considered a metadata issue.

3. Column: run_id
   Issue: The data type is TEXT, which is semantically correct, but the maximum length is specified as 14.0. If run_id is expected to be longer, this could be a potential issue.

4. Column: crt_dttm
   Issue: The data type is TIMESTAMP_NTZ, which is appropriate. However, the metadata does not specify a character maximum length, which is typically expected for timestamp data types.
========================================================================================================================================

table_name: SDL_MDS_PH_POS_PRICELIST
solution: 
- Yearmo '2023-13' is invalid. Correct to a valid year-month format.
- Listpricecase '-100.0' is negative. Correct to a non-negative value.
- Listpricedz '-10.0' is negative. Correct to a non-negative value.
- Listpriceunit '-1.0' is negative. Correct to a non-negative value.
- SRP '-9.99' is negative. Correct to a non-negative value.

SQL Query:
SELECT *
FROM SDL_MDS_PH_POS_PRICELIST
WHERE 
    yearmo NOT REGEXP '^\d{4}-(0[1-9]|1[0-2])$' OR
    listpricecase < 0 OR
    listpricedz < 0 OR
    listpriceunit < 0 OR
    srp < 0;
Issue: yearmo
- Expected a valid year-month format (e.g., YYYY-MM), but contains invalid entries like '2023-13' and '2023-00'.

Issue: versionname
- Contains 'None' entries, which may suggest missing or uninitialized data.

Issue: name
- Contains 'None' entries, which may suggest missing or uninitialized data.

Issue: enterdatetime
- Expected a valid date-time format, but the column contains '2024-01-02 12:00:00', which may not align with the expected date range based on the rest of the data.

Issue: versionflag
- Contains 'None' entries, which may suggest missing or uninitialized data.
========================================================================================================================================

table_name : SDL_ALL_DISTRIBUTOR_SELLOUT_SALES_FACT
solution : Negative sales quantity in 'sls_qty' should be corrected to a non-negative value. Ensure 'rtrn_qty' does not exceed 'sls_qty'.

SQL Query:
SELECT * 
FROM SDL_ALL_DISTRIBUTOR_SELLOUT_SALES_FACT
WHERE sls_qty < 0 OR rtrn_qty > ABS(sls_qty);
1. **jj_wk**
   - Issue: The values are expected to be week numbers ranging from 1 to 52 or 53. The sample data includes values such as 51, 52, 53, 54, which may not be valid for a week number, as week numbers typically range from 1 to 52 or 53.

2. **sls_qty**
   - Issue: Sales quantity (`sls_qty`) typically represents the number of items sold and should generally be positive or zero. The sample data includes negative values, which may indicate returns or errors in recording sales.

3. **grs_val**
   - Issue: Gross value (`grs_val`) should represent the total sales value and is typically positive or zero. The sample data contains negative values, which may indicate errors or specific cases such as refunds or adjustments.

4. **jj_net_val**
   - Issue: Net value (`jj_net_val`) is expected to represent the total net sales value. Negative values might indicate errors or special conditions such as overall losses, returns, or adjustments.

5. **trd_dscnt**
   - Issue: Trade discount (`trd_dscnt`) typically represents a deduction and should be positive or zero. The sample data includes negative values, which may indicate errors or unusual cases.

6. **rtrn_qty**
   - Issue: Return quantity (`rtrn_qty`) typically represents the number of items returned and should generally be positive or zero. The sample data includes negative values, which may contradict the expected semantic meaning.

7. **rtrn_val**
   - Issue: Return value (`rtrn_val`) typically represents the monetary value of returned items. Negative values might suggest unusual cases or errors, as returns are generally recorded as positive values.

Please review and validate these columns accordingly to ensure data accuracy and integrity.
========================================================================================================================================

table_name: SDL_AU_DSTR_API_HEADER
solution: 
- Issue: Anomalous high cost_price of 9999.99 for article_id 11.
- Solution: Verify if cost_price is correct. If not, update with the correct value from the vendor.

SQL Query:
SELECT *
FROM SDL_AU_DSTR_API_HEADER
WHERE cost_price > 1000 
  OR month_01 < 0
  OR null_coloumn IS NOT NULL;
Issue: article_desc - Contains values like "Negative cost price" and "Duplicate ID" which are not typical descriptions of an article but seem to describe data issues or errors.

Issue: cost_price - Contains negative values (e.g., "-10.99", "-9.99"), which are generally illogical for cost price unless indicating a refund or error.

Issue: soh_qty - Contains negative values (e.g., "-5", "-500"), which may indicate an error in stock on hand quantity as it cannot be negative.

Issue: dc_soo_qty - Contains negative values (e.g., "-1", "-50"), which may indicate an error in the distribution center's stock on order quantity.

Issue: so_backorder_qty - Contains negative values (e.g., "-10", "-100"), which may indicate an error in the stock on backorder quantity.

Issue: mth_total_invoiced_qty - Contains negative values (e.g., "-150", "-600"), which may indicate an error in the total invoiced quantity for the month.

Issue: null_coloumn - Contains the text "None", which may not align with the expected data type as a numeric column.
========================================================================================================================================

table_name : SDL_MDS_VN_POS_PRODUCTS
solution : Remove duplicate entry with id -1 and ensure 'muid' uniqueness. Correct negative 'changetrackingmask' value.

SQL Query:
SELECT * 
FROM SDL_MDS_VN_POS_PRODUCTS 
WHERE id = -1 OR changetrackingmask < 0;
Certainly, here are the columns with issues based on the provided data:

1. **Column Name: versionnumber**
   - **Issue:** Contains a negative value (-4), which is unusual for a version number that typically increments positively.

2. **Column Name: barcode**
   - **Issue:** Contains `None` values. A barcode is typically expected to have unique identifiers for products.

3. **Column Name: customer_sku**
   - **Issue:** Contains `None` values. A SKU (Stock Keeping Unit) is typically required for inventory management.

4. **Column Name: versionname**
   - **Issue:** Contains `None` values. A version name is typically expected to be a non-empty string indicating the version of a product.

5. **Column Name: lastchgdatetime**
   - **Issue:** The data type should be a timestamp, but it is listed as TEXT in the metadata. This could lead to issues with date-time operations.

Please review these columns for data integrity and consistency.
========================================================================================================================================

table_name : SDL_DISTRIBUTOR_IVY_INVENTORY
solution : Verify 'batch_code' BATCH048 and 'batch_expiry_date' 2024-02-02 for distributor DIST047. Check if 'qty' 2000 is correct for UOM G.

SQL Query:
SELECT * 
FROM SDL_DISTRIBUTOR_IVY_INVENTORY
WHERE distributor_code = 'DIST047' 
AND warehouse_code = 'WH047' 
AND product_code = 'PRD047' 
AND batch_code = 'BATCH048' 
AND batch_expiry_date = '2024-02-02' 
AND uom = 'G' 
AND qty = 2000 
AND cdl_dttm = '2023-11-16 10:00:00' 
AND run_id = 48 
AND file_name = 'file48.txt';
Issue: batch_expiry_date
- Some values are not valid dates (e.g., "abcd-ef-gh", "None").

Issue: qty
- Contains negative values, which may not be semantically correct depending on the context (e.g., -10, -50).

Issue: cdl_dttm
- Expected to be a valid datetime format, but data type is TEXT, which might lead to inconsistencies or errors in date handling.
========================================================================================================================================

table_name : SDL_ID_POS_DAILY_IDM_SELLOUT
solution : The anomaly in the dataset is a negative value in the 'value' column for a product sale. Verify if this represents a return or refund; if not, correct the value in the database.

SQL Query:
SELECT * 
FROM SDL_ID_POS_DAILY_IDM_SELLOUT
WHERE value < 0;
Column: account
Issue: The column seems to represent account identifiers, which are expected to be numeric. However, the value '0' appears to be an anomaly as it might not represent a valid account number.

Column: tgl
Issue: The column name "tgl" is not descriptive. It likely represents a date, and the format should be a 'YYYY-MM-DD' date. The data type is TEXT; consider changing to a DATE type for better semantic alignment.

Column: pos_cust
Issue: The column is expected to represent customer identifiers (possibly text-based). Ensure the values align with valid customer identifiers.

Column: yearmonth
Issue: The column name "yearmonth" is ambiguous and should be clarified to ensure it represents a specific year and month format. '202308' implies a 'YYYYMM' format, but the use of TEXT as a data type could lead to issues in chronological operations. Consider using a DATE or INTEGER type for better clarity.

Column: crtd_dttm
Issue: The column is correctly identified as a TIMESTAMP, but its maximum character length is not defined. Ensure it can handle all potential timestamp formats without truncation.

Column: filename
Issue: The column represents filenames, which may vary in length. Ensure the maximum length of 100 characters suffices for all possible filenames.
========================================================================================================================================

table_name : SDL_MDS_VN_PRICE_PRODUCTS
solution : The 'price' field has an anomalous value of 2500.0 which may be incorrect. Verify the correct price for 'Product 50' and update if necessary.

SQL Query:
SELECT * 
FROM SDL_MDS_VN_PRICE_PRODUCTS 
WHERE price = 2500.0;
Issue: versionnumber
- The value '-4' is inconsistent with expected non-negative integers.

Issue: version_id
- The value '-5' is inconsistent with expected non-negative integers.

Issue: name
- The value 'None' is present, which is inconsistent with expected non-null product names.

Issue: code
- The value 'None' is present, which is inconsistent with expected non-null product codes.

Issue: pc_per_case
- The value '-10.0' is inconsistent with expected non-negative numbers, indicating pieces per case.

Issue: price
- The value '-50.0' is inconsistent with expected non-negative numbers for pricing.

Issue: product_id_concung
- The value 'None' is present, which is inconsistent with expected non-null product IDs.

Issue: enterusername
- The value 'None' is present, which is inconsistent with expected non-null usernames.

Issue: lastchgdatetime
- The value 'None' is present, which is inconsistent with expected non-null datetime values.

Issue: lastchgusername
- The value 'None' is present, which is inconsistent with expected non-null usernames.

Issue: lastchgversionnumber
- The value 'NaN' is present, which is inconsistent with expected non-null version numbers.

Issue: validationstatus
- The value 'None' is present, which is inconsistent with expected non-null validation statuses.
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_PRODUCT_MAPPING_COLES
solution : Correct 'versionnumber' from -51 to 51.

SQL Query:
SELECT *
FROM SDL_MDS_PACIFIC_PRODUCT_MAPPING_COLES
WHERE versionnumber < 0;
Issue: 
- column: `versionname` 
  - Description: The column contains entries like "None" which may not be valid version names.
  
- column: `versionnumber`
  - Description: The column contains negative numbers (e.g., -1, -5, -21), which may not be appropriate for version numbers.
  
- column: `name`
  - Description: The column contains entries like "None" which may not be valid product names.
  
- column: `code`
  - Description: The column contains entries like "None" which may not be valid codes.
  
- column: `prod_desc_coles`
  - Description: The column contains entries like "None" which may not be valid product descriptions.
  
- column: `jnj_sap_code`
  - Description: The column contains entries like "None" which may not be valid SAP codes.
========================================================================================================================================

table_name: SDL_MDS_MY_ECOM_PRODUCT
solution: The issue is with the 'versionnumber' value which is set to 99999 and is unusually high. Consider verifying if this is a typo or if it needs to be adjusted to match the standard versioning scheme.

SQL Query:
SELECT * 
FROM SDL_MDS_MY_ECOM_PRODUCT
WHERE versionnumber > 10000;
Issue: id - Contains non-positive values, which are generally unexpected for an ID column.
Issue: muid - Contains 'None' values, which may be unexpected for a UUID column.
Issue: versionnumber - Contains negative and unusually large values, which are generally unexpected for a version number.
Issue: name - Contains 'None' values, which are unexpected for a product name.
Issue: changetrackingmask - Contains a negative value, which may be unexpected for a tracking mask.
========================================================================================================================================

table_name : SDL_MDS_SG_ECOM_PRODUCT
solution : The 'upc' value '1234567890173' is of incorrect length; it should be 12 digits long. Verify and correct the 'upc' value to a valid 12-digit number.

SQL Query:
SELECT *
FROM SDL_MDS_SG_ECOM_PRODUCT
WHERE LENGTH(upc) != 12;
Issue: versionnumber
- The column versionnumber contains both negative and positive values. Typically, version numbers are expected to be non-negative integers as they represent incremental updates or releases. Negative values may not be semantically valid for version numbering.

Issue: validationstatus
- The column validationstatus contains values "valid" and "invalid". While these values are text and can be valid, it is crucial to ensure that the values are consistent with the intended status representation. If there are any other unexpected or inconsistent values in this column, it could indicate an issue with data consistency or input validation.
========================================================================================================================================

table_name : ITG_SFA_PM
solution : 
- Invalid 'filename': 'invalid_file_name_50'. Ensure filenames follow the correct naming conventions.
- Invalid 'path': '/invalid/path/to/file'. Verify and update to a valid file path.
- Invalid 'country': 'Lilliput'. Update to a correct country name.

SQL Query:
SELECT * FROM ITG_SFA_PM
WHERE filename = 'invalid_file_name_50'
   OR path = '/invalid/path/to/file'
   OR country = 'Lilliput';
1. **filename**
   - Issue: The filenames appear to be labeled as "invalid_file_name_xx," indicating they may not be valid or correctly formatted filenames.

2. **path**
   - Issue: The path values are "/invalid/path/to/file," which suggests these may not be valid or correct file paths.

3. **customername**
   - Issue: Some entries are `None`, implying missing customer names.

4. **salesgroup**
   - Issue: Some entries are `None`, indicating missing sales group information.

5. **storetype**
   - Issue: Some entries are `None`, indicating missing store type information.

6. **dist_chnl**
   - Issue: Some entries are `None`, indicating missing distribution channel information.

7. **country**
   - Issue: Some entries are `None`, indicating missing country information.

8. **salescyclename**
   - Issue: Some entries are `None`, indicating missing sales cycle name information.

9. **salescampaignname**
   - Issue: Some entries are `None`, indicating missing sales campaign name information.

10. **mastertaskname**
    - Issue: Some entries are `None`, indicating missing master task name information.

11. **salesperson_firstname**
    - Issue: Some entries are `None`, indicating missing salesperson first names.

12. **salesperson_lastname**
    - Issue: Some entries are `None`, indicating missing salesperson last names.

13. **secondarytradecode**
    - Issue: Some entries are `None`, indicating missing secondary trade codes.

14. **secondarytradename**
    - Issue: Some entries are `None`, indicating missing secondary trade names.
========================================================================================================================================

table_name : SDL_HK_WINGKEUNG_INDIRECT_SALES_REP_ROUTE_PLAN
solution : Correct 'visit_freq' from 45 to a valid frequency, 'week' from Week100 to a valid week, and 'period' from 48 to a valid period.

SQL Query:
SELECT *
FROM SDL_HK_WINGKEUNG_INDIRECT_SALES_REP_ROUTE_PLAN
WHERE visit_freq > 7 OR week NOT LIKE 'Week%' OR week > 'Week52' OR period > 12;
Issue: visit_freq
- The column name suggests a positive frequency, but there are negative values in the data, which might indicate an error in the context of visit frequencies.

Issue: period
- The column name suggests a time-related period, typically expected to be non-negative. However, there are negative values in the data, which might not align with the intended semantic meaning.
========================================================================================================================================

table_name : SDL_POP6_SG_POPS  
solution : Correct the longitude and latitude values for 'popdb_id' POP048. Longitude and latitude should be in the range of -180 to 180 and -90 to 90 respectively. Current values are -180.0 for both, which is incorrect.

SQL Query:
sql
SELECT * 
FROM SDL_POP6_SG_POPS 
WHERE longitude < -180 OR longitude > 180 OR latitude < -90 OR latitude > 90;
Issue: longitude
- Some longitude values exceed the valid range of -180 to 180 degrees.

Issue: latitude
- Some latitude values exceed the valid range of -90 to 90 degrees.

Issue: business_units_id
- Contains a None value, which may indicate missing data where unique business unit identifiers are expected.

Issue: longitude
- Some longitude values exceed the usual range for longitudes, which is typically -180 to 180.

Issue: latitude
- Some latitude values exceed the usual range for latitudes, which is typically -90 to 90.
========================================================================================================================================

table_name : SDL_CSL_CLASSMASTER  
solution : Correct the 'availabilty' value from 255 to a valid availability value, as it seems to be outside the expected range.

SQL Query:
sql
SELECT * 
FROM SDL_CSL_CLASSMASTER
WHERE availabilty = 255;
Issue: `availabilty`
- The column name suggests it might represent availability as a count or percentage, typically expected to be non-negative. However, there is a negative value (-10) in the sample data, which doesn't align with common expectations for availability.

Issue: `classdesc`
- The expected maximum character length is 100, but the column contains a description that exceeds this limit, thereby violating the character constraint.

Issue: `classcode`
- The expected maximum character length is 10, but there is a value ("E5E5E5E5E5") that exceeds this limit, thereby violating the character constraint.
========================================================================================================================================

table_name: SDL_DISTRIBUTOR_IVY_ORDER
solution: 
- order_latitude is invalid with value -3.123456. Verify and correct latitude to a valid range.
- order_longitude is invalid with value -44.123456. Verify and correct longitude to a valid range.

SQL Query:
SELECT *
FROM SDL_DISTRIBUTOR_IVY_ORDER
WHERE order_latitude NOT BETWEEN -90 AND 90
   OR order_longitude NOT BETWEEN -180 AND 180;
Issue: `uom_count`  
- The `uom_count` column has negative values (e.g., -5, -55). Unit of Measure (UOM) count should logically be a non-negative number.

Issue: `qty`  
- The `qty` column has negative values (e.g., -20, -180). Quantity should logically be a non-negative number.

Issue: `order_latitude`  
- The `order_latitude` column has values that exceed the valid range of latitudes (-90 to 90), such as -2.987654. 

Issue: `order_longitude`  
- The `order_longitude` column has values that exceed the valid range of longitudes (-180 to 180), such as -93.123456. 

Note: While the text columns were reviewed, no semantic issues were found in them based on the sample data provided.
========================================================================================================================================

table_name : SDL_ECOM_GMV_SHOPEE
solution : 
1. gross_sales cannot be negative. Correct the value from -1000.0.
2. gross_units_sold cannot be negative. Correct the value from -5.0.
3. product_views cannot be negative. Correct the value from -100.0.
4. gross_avg_selling_price cannot be negative. Correct the value from -20.0.

SQL Query:
SELECT * 
FROM SDL_ECOM_GMV_SHOPEE 
WHERE gross_sales < 0 
   OR gross_units_sold < 0 
   OR product_views < 0 
   OR gross_avg_selling_price < 0;
Issue: product_id
- Some entries are `None`, which may not align with the expected semantic meaning of a unique identifier for products.

Issue: gross_sales
- Contains negative values, which may not align with the typical expectation of sales figures being non-negative.

Issue: gross_orders
- Contains negative values, which may not align with the expectation of order counts being non-negative.

Issue: gross_units_sold
- Contains negative values, which may not align with the expectation of units sold being non-negative.

Issue: product_visitors
- Contains negative values, which may not align with the expectation of visitor counts being non-negative.

Issue: filename
- Some entries are `None`, which may not align with the expectation of providing a filename for each record.
========================================================================================================================================

table_name : SDL_ECOM_SEARCH_ADS_BY_DATE
solution : The issue in the table is that the 'sales_usd' and 'sales_lcy' values are unusually high compared to the 'orders' and 'units_sold'. Verify if the 'sales_usd' and 'sales_lcy' values are correct, as they might have been entered incorrectly. Additionally, check if 'add_to_cart_units' and 'add_to_cart_value_usd' values are consistent with 'orders' and 'sales_usd'.

SQL Query:
SELECT *
FROM SDL_ECOM_SEARCH_ADS_BY_DATE
WHERE sales_usd > 4800 OR sales_lcy > 9600 OR orders < 470 OR units_sold < 940;
Issue: REGION - Contains 'None', which might indicate missing or undefined data.

Issue: SALES_USD - Negative values may indicate refunds or errors.

Issue: SALES_LCY - Negative values may indicate refunds or errors.

Issue: ORDERS - Negative values, typically not expected as orders are usually non-negative.

Issue: VISITS - Contains negative values, which are likely erroneous as visits cannot be negative.

Issue: UNIQUE_VISITORS - Contains negative values, which are likely erroneous as unique visitors cannot be negative.

Issue: ADD_TO_CART_UNITS - Negative values may indicate errors, as units added to cart should be non-negative.

Issue: BUYERS - Negative values may indicate errors, as the count of buyers should be non-negative.

Issue: NEW_BUYERS - Negative values may indicate errors, as the count of new buyers should be non-negative.

Issue: ITEM_CONVERSION_RATE - Negative values and values over 1 can indicate calculation errors, as conversion rates are typically between 0 and 1.
========================================================================================================================================

table_name : SDL_MDS_VN_SKU_BENCHMARKS  
solution :  
1. The 'valid_from' date 2024-08-01 is later than the 'valid_to' date 2024-05-31. Ensure 'valid_from' is earlier than 'valid_to'. Correct the dates so that 'valid_from' is on or before 'valid_to'.

SQL Query:  
sql
SELECT *  
FROM SDL_MDS_VN_SKU_BENCHMARKS  
WHERE valid_from > valid_to;
Issue: changetrackingmask
- Description: This column seems to represent a tracking mask for changes. The data type is NUMBER. However, it contains a negative value (-4), which may not be expected for a tracking mask that typically consists of non-negative values.

Issue: valid_to
- Description: This column contains timestamps indicating the end of a validity period. The data in this column should logically follow the 'valid_from' date for each record. However, for some records (e.g., rows 6-9), 'valid_to' is before 'valid_from', which is inconsistent.

Issue: comp_packsize
- Description: This column represents the package size of a competing product and is of data type NUMBER. The negative value (-40.0) in the column is inconsistent with the expected semantic meaning, as package sizes are typically non-negative.
========================================================================================================================================

table_name : SDL_ECOM_AMS
solution : No anomalies detected.

SQL Query:
SELECT * FROM SDL_ECOM_AMS WHERE FALSE;
Issue: order_id
- Duplicate values for a primary key column (e.g., 'ORD123' appears multiple times).

Issue: order_completed_time
- The value in row 6 ('2023-07-14 10:00:00') is earlier than the corresponding order_time ('2023-07-15 09:00:00').

Issue: brand_commission
- Negative values present which might indicate a data error or require special handling (e.g., rows 0, 4, 9, 14, 19, 24, 29).

Issue: price
- Negative value present in row 1 and row 26, which is unusual for a price column unless indicating refunds or corrections.

Issue: shope_name
- Inconsistent naming conventions ('shope_name' should probably be 'shop_name').
========================================================================================================================================

table_name : SDL_MDS_MY_GT_PRODUCT_MAPPING
solution : The anomaly is due to an invalid 'id' value of -1, which should be a positive integer.

SQL Query:
SELECT * FROM SDL_MDS_MY_GT_PRODUCT_MAPPING WHERE id < 0;
Issue: versionname - The column contains text such as 'Version A', 'Version B' etc., which seem valid, but there are negative values in the 'versionnumber' and 'version_id' columns, which may suggest inconsistencies in version tracking.

Issue: versionnumber - The column contains negative values, which may not be appropriate for version numbers.

Issue: version_id - Contains negative values and NaN values, which may not be suitable for an identifier column.

Issue: changetrackingmask - Contains negative values, which may not be appropriate for tracking masks.

Issue: distributor_id - Contains 'None' values, which may indicate missing data for distributor identification.

Issue: product_description - Contains 'None' values, which may indicate missing product descriptions.

Issue: validationstatus - Contains 'Invalid' values, which might indicate records that need attention.

Issue: non_sap - Contains 'Yes' and 'No' values, which might not be appropriate if the column should be Boolean or a specific category indicator.
========================================================================================================================================

table_name : SDL_SPIRAL_MTI_OFFTAKE
solution : 
1. Reduce 'quantity' and 'amount' to realistic values. Current values: quantity = 9999999999, amount = 9999999999. 
2. Check 'amountusd' for consistency with 'amount' and update accordingly. Current value: amountusd = 9999999999. 
3. Verify 'size' field for proper categorization since 'XXL' might not fit product specifications.

SQL Query:
SELECT *
FROM SDL_SPIRAL_MTI_OFFTAKE
WHERE quantity > 1000000 OR amount > 1000000 OR amountusd > 1000000 OR size = 'XXL';
Issue: YEAR
- The column "year" contains an invalid entry "9999". Typically, the year should represent a valid calendar year. 

Issue: QUANTITY
- The column "quantity" contains negative values, such as "-10". Quantity is generally expected to be a non-negative number representing an amount of items.

Issue: AMOUNT
- The column "amount" contains negative values, such as "-200". Amounts are generally expected to be non-negative, representing a sum of money.

Issue: AMOUNTUSD
- The column "amountusd" contains negative values, such as "-100". Amounts in currency are generally expected to be non-negative.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCT_SUMMARY_WEEKLY
solution : Correct the ranking value for the 'Luxury Watch' SKU (coupang_sku_id: 890123) from 9999999999 to an appropriate ranking within the expected range.

SQL Query:
SELECT *
FROM SDL_KR_COUPANG_PRODUCT_SUMMARY_WEEKLY
WHERE ranking > 99999 OR ranking < 0;
Issue: `ranking`
- The column is expected to represent a ranking, which typically should be a numerical value. Although the data type is `TEXT`, some values like `9999999999` and `-10` suggest numerical rankings, while other values like `0` and `1` are plausible. If these are meant to be ordinal rankings, the data type may not be suitable.

Issue: `yearmo`
- The column is expected to represent a year and month, typically formatted as `YYYYMM`. While the data type is `TEXT`, which can hold this format, it's important to ensure all entries strictly adhere to this format. The values appear to be consistent, but they need to be verified for their semantic validity as actual time periods.
========================================================================================================================================

table_name: SDL_MDS_SG_SKU_BENCHMARKS
solution: Ensure 'muid' is not None, 'version_id' should be positive, 'jj_packsize', 'jj_target', 'variance', and 'comp_packsize' must be non-negative. Correct 'comp_packsize' from -10.0 to a positive value.

SQL Query:
SELECT * 
FROM SDL_MDS_SG_SKU_BENCHMARKS 
WHERE muid IS NULL 
   OR version_id < 0 
   OR jj_packsize < 0 
   OR jj_target < 0 
   OR variance < 0 
   OR comp_packsize < 0;
Issue: id
- The column 'id' contains numeric data which aligns with its name indicating it’s likely an identifier. However, the metadata suggests its data type should be 'NUMBER'. Ensure the data type in the dataset is consistent with the metadata.

Issue: muid
- The column 'muid' contains long strings which appear to be unique identifiers. Ensure that all entries adhere to a consistent format, as some entries are 'None', which might not align with expected unique identifiers.

Issue: versionname
- The column 'versionname' contains 'None' in one entry, while other entries have a version format like 'v1.0'. Ensure consistency in data entry, as the presence of 'None' may indicate missing or incorrect data.

Issue: version_id
- The column 'version_id' contains negative values (e.g., -101), which may not align with the semantic meaning of an identifier. Verify if negative values are valid in the context of this dataset.

Issue: versionflag
- The column 'versionflag' contains text data with entries like 'active' and 'inactive'. Verify if any additional states are missing or if these are the only valid states.

Issue: valid_to
- The column 'valid_to' uses a 'TIMESTAMP_NTZ' format, but the metadata indicates 'TIMESTAMP_NTZ'. Ensure that the actual data adheres to the specified timestamp format.

Issue: changetrackingmask
- The column 'changetrackingmask' contains numeric values that might indicate a flag or mask. Ensure that the range and values are valid and correctly interpreted.

Issue: comp_packsize
- The column 'comp_packsize' contains negative values (e.g., -10.0), which might not align with the semantic meaning of a package size. Verify if negative values are valid in the context of this data.

Issue: enterusername
- The column 'enterusername' appears to contain usernames, but the metadata indicates a maximum length of 200 characters. Verify that all entries are within this limit and that the column is used consistently.

Issue: validationstatus
- The column 'validationstatus' contains entries like 'valid' and 'invalid'. Ensure that these are the only valid states and check for any inconsistencies in the dataset.
========================================================================================================================================

table_name : SDL_POP6_SG_DISPLAY_PLANS  
solution : Correct negative values for 'status' and 'required_number_of_displays'. Ensure 'end_date' is after 'start_date'.

SQL Query:
sql
SELECT *
FROM SDL_POP6_SG_DISPLAY_PLANS
WHERE status < 0 
   OR required_number_of_displays < 0 
   OR end_date <= start_date;
Issue: status
- Description: The 'status' column likely represents a numeric status code associated with each display plan. Despite being a numeric field, negative numbers are present, which may not align with expected status codes unless specified by the business logic.

Issue: start_date and end_date
- Description: These columns are expected to contain valid date values. However, there are instances where 'start_date' is after 'end_date', which is logically inconsistent.

Issue: required_number_of_displays
- Description: This column should represent the number of required displays, typically a positive number. The presence of negative values suggests potential data entry errors or a need for clarification on what negative numbers represent.

Issue: comments
- Description: The 'comments' column should contain free text comments. No semantic issues detected based on the sample provided, but verify for any unusual patterns that don't constitute valid comments.

Issue: file_name
- Description: Although the 'file_name' column is expected to contain text representing file names, ensure all entries conform to expected naming conventions (e.g., valid file extensions).
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_CUST_CIW_PLAN
solution : No anomalies detected.

SQL Query:
SELECT * 
FROM SDL_MDS_PACIFIC_CUST_CIW_PLAN
WHERE FALSE;  -- No anomalies detected, so query returns no rows
Issue: id - The values are negative, which is unusual for an identifier typically expected to be positive.
Issue: version_id - The values are negative, which is unusual for an identifier typically expected to be positive.
Issue: name - Contains "InvalidName" and None, suggesting potential placeholder values or missing data.
Issue: changetrackingmask - The values are negative, which is atypical for a tracking mask.
Issue: goal_gp - The values are negative, which could be unexpected for a "goal" metric.
Issue: enterversionnumber - The values are negative, which is unusual for a version number typically expected to be positive.
Issue: lastchgversionnumber - The values are negative, which is unusual for a version number typically expected to be positive.
Issue: validationstatus - Consistently marked as "invalid," which could indicate issues with data validity.
========================================================================================================================================

table_name : SDL_MARKET_SHARE_QSD
solution : Correct the negative value in 'value' column; set to a valid positive number.

SQL Query:
SELECT * 
FROM SDL_MARKET_SHARE_QSD 
WHERE value < 0;
Issue: `period_date`
- Contains invalid dates such as `2022-13-01` and `2022-02-30`, which do not exist in the calendar.

Issue: `value`
- Contains negative values, which may not be appropriate for certain contexts, especially if this column represents metrics like sales or revenue.

Issue: `database date`
- Contains invalid dates such as `2022-13-01` and `2022-02-30`, which do not exist in the calendar.
========================================================================================================================================

table_name : SDL_MDS_VN_CUSTOMER_SALES_ORGANIZATION
solution : 
1. Correct the 'mti_code' value from -5000 to a valid positive number.
2. Update the 'status' from 'Inactive' to 'Active' to align with the 'versionflag'.
3. Change 'validationstatus' from 'Invalid' to 'Valid' if data is corrected.

SQL Query:
SELECT * 
FROM SDL_MDS_VN_CUSTOMER_SALES_ORGANIZATION
WHERE mti_code < 0
   OR status = 'Inactive'
   OR validationstatus = 'Invalid';
Certainly! Below, I've analyzed each column to identify any discrepancies between the semantic meaning implied by the column name and the data it contains:

1. **id**: 
   - Issue: Contains negative values, which are unusual for an identifier column.

2. **changetrackingmask**:
   - Issue: Contains negative values, which might be unexpected for a tracking mask unless they have a specific semantic meaning.

3. **mtd_code**:
   - Issue: Contains negative values, which might be unexpected for a code unless they have a specific semantic meaning.

No other discrepancies were noted in the other columns based on the provided data and column names.
========================================================================================================================================

table_name : SDL_POP6_SG_PLANNED_VISITS
solution : planned_visit_date '2023-02-19' is a past date for planned visits; update to future date.

SQL Query:
SELECT * 
FROM SDL_POP6_SG_PLANNED_VISITS
WHERE planned_visit_date < CURRENT_DATE;
Column: popdb_id
Issue: The expected data type is TEXT, but it appears to represent an ID, which is typically a number. If IDs include non-numeric characters or need to be stored textually, this is correct; otherwise, consider using a numeric type.

Column: run_id
Issue: The run_id contains both positive and negative numbers, which may not be anticipated. If there is a specific reason for negative numbers, ensure it is documented.

Column: username
Issue: No specific issue with data type, but ensure usernames conform to expected patterns or constraints (e.g., no special characters if not allowed).

Column: pop_code
Issue: The pop_code column is expected to be TEXT, which is appropriate, but ensure that the code structure aligns with business rules or categorization logic.
========================================================================================================================================

table_name : MS_MASTERSURVEY
solution : No anomalies detected.

SQL Query:
SELECT * FROM MS_MASTERSURVEY WHERE 1=0; -- No anomalies detected, query returns no rows.
Issue: `fetchedsequence`
- The column name suggests a sequence or order, likely represented by a numeric value. However, the presence of large numbers like `9999999999` and negative values like `-1` and `-10` suggests potential data quality issues or misinterpretation of the expected sequence format.

Issue: `mastersurveyname`
- The column is expected to contain the names of surveys. However, there are entries like `None` which suggests missing or invalid survey names.

Issue: `mastersurveydescription`
- The column should contain descriptions of surveys. Entries like `None` and completely empty strings suggest missing or invalid descriptions.

Issue: `cdl_datetime`
- The column is expected to contain datetime values. An entry with `None` suggests a missing or invalid datetime value.

Issue: `cdl_source_file`
- The column is expected to list source file names, but there are entries like `None`, indicating missing or invalid file names.

Issue: `load_key`
- The column is expected to contain unique load keys. Entries like `None` suggest missing or invalid load keys. Additionally, there is a duplicate `load_key` value (`load035`), indicating a potential data integrity issue.
========================================================================================================================================

table_name: SDL_MDS_PACIFIC_ECOM_NTS
solution: 
- Issue: 'year' value 2030 is in the future.
  Solution: Correct the 'year' to a value within a reasonable range.
- Issue: 'brand' value is None, expected a valid brand name.
  Solution: Update 'brand' with a valid brand name.

SQL Query:
SELECT * 
FROM SDL_MDS_PACIFIC_ECOM_NTS
WHERE year > EXTRACT(YEAR FROM CURRENT_DATE())
   OR brand IS NULL;
Column: versionnumber
Issue: Contains a negative value (-1) which is unusual for a version number. Typically, version numbers are non-negative integers.

Column: year
Issue: Contains an outlier value (9999) which is not a realistic year for data records.

Column: code
Issue: Contains a None value, which could indicate missing or incomplete data. Normally, 'code' should be a string identifier.

Column: crncy_cd
Issue: Contains a None value, which is unexpected for a currency code.

Column: enterusername
Issue: Contains a None value, which is unusual as it typically represents a user identifier responsible for data entry.

Column: lastchgusername
Issue: Contains a None value, which is unusual as it typically represents a user identifier responsible for the last change. 

Column: validationstatus
Issue: Contains a value ("pending") which is not listed among the usual statuses ("valid", "invalid", "approved", "rejected").
========================================================================================================================================

table_name : SDL_MDS_MY_PS_MSL
solution : The 'ean' value '1234567890172' is not valid for 'Product AX'. Update 'ean' to correct value.

SQL Query:
SELECT *
FROM SDL_MDS_MY_PS_MSL
WHERE ean = '1234567890172';
Column: id
Issue: The column name suggests a unique identifier, typically expected to be a positive integer. However, it contains a negative value (-1), which is unusual for an ID column.

Column: code
Issue: The column contains a mix of text and None values. Since the metadata specifies a maximum length of 500, the presence of None might indicate missing or incomplete data.

Column: versionflag
Issue: The column contains consistent values of "flag", except for one occurrence of "None", which might indicate missing data or an inconsistency in the dataset.

Column: name
Issue: The column contains None for one record, which could indicate missing or incomplete data for what appears to be a product name.

Column: enterversionnumber
Issue: There are negative values in this column, which could be unexpected for a version number. Version numbers are typically non-negative.

Column: changetrackingmask
Issue: The presence of negative numbers (e.g., -100, -120) could be unexpected for a column that is likely intended to track changes, as these might imply some inconsistencies or misinterpretations of the data purpose.

Column: validationstatus
Issue: Contains varying statuses including "valid", "invalid", and "pending". While this is common for a validation status, ensure that all expected statuses are covered and appropriately defined.

Note: All text columns have been checked as instructed.
========================================================================================================================================

table_name : SDL_CSL_SALESMANMASTER
solution : 
1. 'distcode' is missing. Assign a valid distribution code.
2. 'smemail' is missing. Provide a valid email address.
3. 'uploadflag' has an invalid value 'XX'. Correct it to a valid flag value.
4. 'rdssmtype' has an invalid value 'Type XX'. Correct it to a valid type.

SQL Query:
SELECT * 
FROM SDL_CSL_SALESMANMASTER
WHERE distcode IS NULL 
   OR smemail IS NULL 
   OR uploadflag = 'XX' 
   OR rdssmtype = 'Type XX';
Issue: `distcode`  
- Some entries are `None`, which may indicate missing district codes expected to be text or alphanumeric identifiers.

Issue: `smphoneno`  
- Some entries are `None`, which may indicate missing phone numbers. The format should align with a valid phone number format.

Issue: `smemail`  
- Some entries are `None`, which may indicate missing email addresses. The format should align with a valid email format.

Issue: `smcode`  
- Some entries are `None`, which may indicate missing salesman codes expected to be text or alphanumeric identifiers.

Issue: `smname`  
- Some entries are `None`, which may indicate missing names, expected to be text.

Issue: `smdailyallowance`  
- Some values are negative, which may be incorrect for a daily allowance, typically expected to be non-negative.

Issue: `smmonthlysalary`  
- Some values are negative, which may be incorrect for a monthly salary, typically expected to be non-negative.

Issue: `smmktcredit`  
- Some values are negative, which may be incorrect for a market credit, typically expected to be non-negative.

Issue: `uploadflag`  
- The column contains values 'Y' and 'N', which are expected, but ensure that these are intended flags for upload status.

Issue: `uniquesalescode`  
- Ensure all entries are unique as this represents a unique sales code.

Issue: `file_name`  
- Ensure the format is consistent and represents valid file names.

Ensure to address these issues based on the context and intended data validation rules.
========================================================================================================================================

table_name : SDL_POP6_SG_PRODUCTS
solution : 
- Set 'status' to a valid integer status code.
- Correct 'unit_price' to a non-negative value.
- Adjust 'display_order' to a non-negative integer.
- Ensure 'largest_uom_quantity', 'middle_uom_quantity', and 'smallest_uom_quantity' are non-negative integers.
- Set 'run_id' to a valid positive integer.

SQL Query:
SELECT * FROM SDL_POP6_SG_PRODUCTS
WHERE status < 0
   OR unit_price < 0
   OR display_order < 0
   OR largest_uom_quantity < 0
   OR middle_uom_quantity < 0
   OR smallest_uom_quantity < 0
   OR run_id < 0;
Issue: `unit_price`
- The `unit_price` column contains negative values, which is unusual as prices are typically non-negative.

Issue: `display_order`
- The `display_order` column contains negative values, which is unexpected since display orders are typically positive or zero integers.

Issue: `largest_uom_quantity`, `middle_uom_quantity`, `smallest_uom_quantity`
- These columns contain negative values, which is unusual as quantities are typically non-negative.

Issue: `run_id`
- The `run_id` column contains negative values, which is unexpected as identifiers are typically non-negative.
========================================================================================================================================

table_name : SDL_POP6_SG_PRODUCT_ATTRIBUTE_AUDITS  
solution : The anomaly is due to a missing value in the 'audit_form_id' field. Ensure that all entries in this field are populated correctly to maintain data integrity.

SQL Query:
sql
SELECT * 
FROM SDL_POP6_SG_PRODUCT_ATTRIBUTE_AUDITS 
WHERE audit_form_id IS NULL;
Issue: `visit_id` - The column contains `None` as a value, which could indicate missing data. It should ideally contain unique identifiers for visits.

Issue: `audit_form_id` - The column contains `None` as a value, which could indicate missing data. It should ideally contain unique identifiers for audit forms.

Issue: `audit_form` - The column contains `None` as a value, which could indicate missing data. It should ideally contain names or codes for audit forms.

Issue: `section` - The column contains `None` as a value, which could indicate missing data. It should ideally contain names or identifiers for sections.

Issue: `section_id` - The column contains `None` as a value, which could indicate missing data. It should ideally contain unique identifiers for sections.

Issue: `file_name` - The data type is `TEXT` with a maximum length of 100, which aligns with the data. No issue found based on sample data.

Issue: `run_id` - Contains extreme negative and large positive values, which might not align with expected sequential numeric identifiers or status codes.

Issue: `crtd_dttm` - The data type is `TIMESTAMP_NTZ`, which is appropriate for the timestamp data it holds. No issue found based on sample data.
========================================================================================================================================

table_name : SDL_ID_POS_DIAMOND_SELLOUT
solution : Negative quantity for 'Diamond Ring' is invalid. Correct 'qty' to a positive value or investigate the source of error.

SQL Query:
SELECT *
FROM SDL_ID_POS_DIAMOND_SELLOUT
WHERE qty < 0;
Issue: nama_barang - Some records contain negative or zero values which may not be meaningful for product names.

Issue: qty - Some records contain negative or zero quantities, which may not be meaningful unless representing returns or unsold inventory.

Issue: sales - Some records have negative or zero sales values, which may need further investigation if not representing returns or discounts.

Issue: yearmonth - The value '9999-12' appears in one record, which may not be a valid or meaningful date.
========================================================================================================================================

table_name : SDL_API_DSTR
solution : 
- Correct negative values in 'month_13' and 'dc_soo_qty' to positive or logical values.
- Address potential data entry errors related to 'soh_qty' which may lead to negative inventory.
- Verify and update 'vendor_desc' for missing data.
- Review 'mth_total_invoiced_qty' as the sum of the monthly quantities does not match.

SQL Query:
SELECT *
FROM SDL_API_DSTR
WHERE month_13 < 0 
   OR dc_soo_qty < 0 
   OR soh_qty < 0 
   OR vendor_desc IS NULL 
   OR (month_01 + month_02 + month_03 + month_04 + month_05 + month_06 + month_07 + month_08 + month_09 + month_10 + month_11 + month_12 + month_13) != mth_total_invoiced_qty;
Issue: 
COST_PRICE - Contains non-numeric values (e.g., "fifty") and negative values where positive numbers are expected as prices.
PRODUCT_EAN - Contains negative numbers and None entries; should be valid EANs (typically 13-digit numbers).
SITE_ID - Contains negative values (e.g., "-S012"), which may be invalid as IDs are usually positive.
DC_SOO_QTY - Contains negative numbers where positive or zero is expected for quantity.
SO_BACKORDER_QTY - Contains negative numbers where positive or zero is expected for quantity.
MTH_TOTAL_INVOICED_QTY - Contains negative numbers where positive or zero is expected for total invoiced quantity.
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_COGS_MASTER
solution : The issue is with the negative value in the 'nz_cogs_per_unit' column. Correct the 'nz_cogs_per_unit' from -1700.0 to a valid positive value that aligns with the business rules.

SQL Query:
SELECT * 
FROM SDL_MDS_PACIFIC_COGS_MASTER
WHERE nz_cogs_per_unit < 0;
Issue: code
- The 'code' column contains 'None' for one of the entries, which may not be a valid product code.

Issue: enterusername
- The 'enterusername' column contains 'None' for one of the entries, which might not be valid if a username is required.

Issue: lastchgusername
- The 'lastchgusername' column contains 'None' for one of the entries, which might not be valid if a username is required.

Issue: name
- The 'name' column contains 'None' for one of the entries, which may not be a valid product name.

Issue: validationstatus
- The 'validationstatus' column contains 'None' for one of the entries, which may not be valid if a status is required.
========================================================================================================================================

table_name : SDL_MDS_SG_PS_TARGETS
solution : The 'versionnumber' and 'version_id' values are inconsistent. The 'versionnumber' is 49, but 'version_id' should match it. Update 'version_id' to 49.

SQL Query:
SELECT * 
FROM SDL_MDS_SG_PS_TARGETS
WHERE versionnumber <> version_id;
Issue: versionnumber
- Semantic Meaning: Typically represents a numerical identifier for a version, expected to be non-negative or a logical sequence.
- Data Issue: Includes a value of 9999, which may not align with expected version numbering.

Issue: code
- Semantic Meaning: Represents a code, often a short alphanumeric string.
- Data Issue: Contains 'None', which is not a valid code value.

Issue: name
- Semantic Meaning: Represents a name, usually a non-empty string.
- Data Issue: Contains 'None', which is not a valid name value.
========================================================================================================================================

table_name : SDL_MDS_PH_ISE_PARENT
solution : 
1. versionnumber: Correct negative value -2.0 to a valid positive version number.
2. version_id: Assign a valid version_id instead of 0.
3. changetrackingmask: Correct negative value -1.0 to a valid positive value.
4. validationstatus: Update 'Invalid' status with a valid reason or correct the data for validation.

SQL Query:
SELECT * FROM SDL_MDS_PH_ISE_PARENT 
WHERE versionnumber < 0 OR version_id = 0 OR changetrackingmask < 0 OR validationstatus = 'Invalid';
Certainly! Here is the analysis of the provided data:

1. **versionname**:
   - Issue: The column contains values like `None` and `v1.0`, which suggests it should represent version names. However, the presence of `None` might indicate missing data or a placeholder, rather than an actual version name.

2. **versionnumber**:
   - Issue: The column contains `-2.0`, which is unusual for a version number, as version numbers are typically non-negative.

3. **version_id**:
   - Issue: The column contains `-1`, which is atypical for an identifier. Identifiers are usually positive integers.

4. **changetrackingmask**:
   - Issue: The column contains `-1.0`, which might not align with the expected purpose of a "tracking mask," which typically uses non-negative values to represent different states or permissions.

5. **soldtocode_name**:
   - Issue: The column contains a `None` value, which might indicate missing data for a field expected to hold names.

6. **mtprefix**:
   - Issue: The column contains a `None` value, which might indicate missing data for a field expected to hold values like prefixes.

7. **lastchgusername**:
   - Issue: The column contains a `None` value, which might indicate missing data for a field expected to hold usernames.

8. **validationstatus**:
   - Issue: The column contains `None`, which might indicate missing data for a field expected to hold validation statuses.

These issues highlight potential discrepancies between the semantic meaning of the column names and the data they hold.
========================================================================================================================================

table_name : SDL_HK_IMS_WINGKEUNG_INV
solution : The anomaly is due to a negative amount value (-240.0). Verify the transaction details to ensure if this represents a return or an error. Correct the amount if it's an error, or ensure the related transactions are properly logged.

SQL Query:
SELECT *
FROM SDL_HK_IMS_WINGKEUNG_INV
WHERE amount < 0;
Issue: `closing`
- The column name suggests it might represent a closing balance or value. However, some values are negative, which might not align with the expected semantic meaning unless negative balances are valid in this context.

Issue: `amount`
- Similar to `closing`, the presence of negative values suggests potential issues with the data if negative amounts are not expected or valid.
========================================================================================================================================

table_name: SDL_MDS_VN_DISTRIBUTOR_CUSTOMERS
solution: 
1. 'versionnumber' should not be NaN. Ensure that each record has a specific version number.
2. 'version_id' should not be NaN. Populate with the correct version ID.
3. 'id' value '999999999999' may need verification due to its unusually high number.
4. 'group_account_id' should not be negative. Correct the value to a valid positive ID.
5. 'account_id' should not be NaN. Ensure that each account has a valid ID.
6. 'enterusername' should not be None. Assign the correct username for data entry.
7. 'enterversionnumber' should not be NaN. Assign a valid version number.
8. 'lastchgversionnumber' should not be NaN. Ensure it reflects the correct version number.

SQL Query:
SELECT * 
FROM SDL_MDS_VN_DISTRIBUTOR_CUSTOMERS
WHERE versionnumber IS NULL 
   OR version_id IS NULL 
   OR id = 999999999999 
   OR group_account_id < 0 
   OR account_id IS NULL 
   OR enterusername IS NULL 
   OR enterversionnumber IS NULL 
   OR lastchgversionnumber IS NULL;
Issue: versionname
- "None" values are present, which might not be semantically correct for a version name. 

Issue: versionnumber
- Contains NaN values which might not be semantically correct for version numbers.

Issue: name
- "None" values are present, which might not be semantically correct for a name. 

Issue: code
- "None" values are present, which might not be semantically correct for a code.

Issue: address
- Contains "None" values, which might not be semantically correct for an address.

Issue: province_name
- Contains "None" values, which might not be semantically correct for a province name.

Issue: province_id
- Contains "None" values, which might not be semantically correct for a numerical ID.

Issue: retail_environment
- Contains "None" values, which might not be semantically correct for a retail environment type.

Issue: enterusername
- Contains "None" values, which might not be semantically correct for a username.

Issue: validationstatus
- Contains "None" values, which might not be semantically correct for a validation status.
========================================================================================================================================

table_name : SDL_MDS_VN_GT_GTS_RATIO
solution : The anomaly in the dataset is that the 'percentage' column has a value of 500.0, which is outside the expected range. Verify the correct range for 'percentage' and update the value accordingly.

SQL Query:
SELECT * FROM SDL_MDS_VN_GT_GTS_RATIO 
WHERE percentage > 100 OR percentage < 0;
Certainly! Here are the issues identified in the columns based on the provided data:

Issue: `id`
- The column `id` contains a value of `-1`, which is unusual for an identifier typically starting from `1` or `0`.

Issue: `versionnumber`
- The column `versionnumber` contains a negative value, `-2`, which is not typical for a version number that generally increases sequentially.

Issue: `version_id`
- The column `version_id` contains negative values, such as `-3`, which is not standard for identifiers.

Issue: `changetrackingmask`
- The column `changetrackingmask` contains a negative value, `-10`, which may not be expected for a mask usually representing bitwise or flag values.

Issue: `percentage`
- The column `percentage` contains negative values, such as `-50.0`, which might not be appropriate depending on the context, as percentages are typically non-negative. 

These issues indicate potential data anomalies or errors that may need to be addressed.
========================================================================================================================================

table_name : SDL_IRI_SCAN_SALES
solution : 
- Correct 'numeric_distribution' value from 300.0 to an appropriate percentage (0-100) value.
- Correct 'weighted_distribution' value from -520.0 to a non-negative value.
- Correct 'store_count_where_scanned' value from -47.0 to a non-negative value.

SQL Query:
SELECT * 
FROM SDL_IRI_SCAN_SALES
WHERE numeric_distribution > 100 
   OR weighted_distribution < 0 
   OR store_count_where_scanned < 0;
Issue: `scan_sales` and `scan_units` columns contain negative values, which may not be semantically correct as sales and units are expected to be non-negative quantities.

Issue: `store_count_where_scanned` column contains negative values, which seems incorrect since a store count should be non-negative.

Issue: `filename` column has a `None` entry, which might indicate missing data or an error if a filename is expected for every record.
========================================================================================================================================

table_name : SDL_KR_COUPANG_PRODUCT_RANKING_DAILY
solution : The issue is with the 'yearmo' value being '20235', which seems incorrect. It should likely be '202310' for October 2023. Correct the 'yearmo' value from '20235' to '202310'.

SQL Query:
SELECT * 
FROM SDL_KR_COUPANG_PRODUCT_RANKING_DAILY
WHERE LENGTH(yearmo) != 6 OR yearmo NOT LIKE '2023%'
  AND product_ranking_date = '2023-10-06'
  AND category_depth1 = 'Electronics'
  AND category_depth2 = 'Phones'
  AND category_depth3 = 'Smartphones'
  AND coupang_sku_id = 'SKU131'
  AND coupang_sku_name = 'Smartphone Model F'
  AND ranking = 10
  AND run_id = 9.0
  AND file_name = 'file11.txt'
  AND data_granularity = 'Daily';
1. `ranking`: Contains values like "-1", "1", "Two", which suggests mixed types (numbers and text). The expected data type should be consistent, preferably numeric. 

2. `run_id`: Contains negative and decimal numbers (e.g., "-100.0"), which might not align with typical IDs that are usually positive integers. 

3. `file_name`: Contains `None`, which is a potential issue if all entries are expected to have a file name. 

4. `yearmo`: Contains inconsistent formats like "202310" and "99999", where "99999" does not fit the expected year-month format (YYYYMM).

5. `data_granularity`: Contains values like "Minute" and "None", which might not align with expected values like "Daily", "Weekly", etc. "None" suggests missing or undefined granularity.
========================================================================================================================================

table_name : SDL_COMPETITIVE_BANNER_GROUP
solution : Correct the 'dollar' value from -2600 to a positive value that represents accurate revenue. Verify 'time_period' format to ensure it's accurate as '2029-Q2'.

SQL Query:
SELECT *
FROM SDL_COMPETITIVE_BANNER_GROUP
WHERE (dollar < 0) OR (time_period NOT LIKE '%-Q%');
Issue: `unit` column has negative values, which may not align with the semantic meaning of representing quantities sold or available. 

Issue: `dollar` column has negative values, which may not align with the semantic meaning of representing revenue or prices.
========================================================================================================================================

table_name : SDL_MDS_LOG
solution : Ensure the table contains numeric data in necessary columns for anomaly detection.

SQL Query:
SELECT *
FROM SDL_MDS_LOG
WHERE NOT EXISTS (
  SELECT 1
  FROM INFORMATION_SCHEMA.COLUMNS
  WHERE TABLE_NAME = 'SDL_MDS_LOG' AND DATA_TYPE IN ('NUMBER', 'FLOAT', 'INTEGER')
);
1. Column: `status`
   - **Issue**: The value 'None' does not align with typical status values like 'Complete' or 'Failed'. Status is expected to indicate the state of an operation.

2. Column: `crtd_dttm`
   - **Issue**: The data format appears correct, with timestamps present. However, ensure all entries follow the same timestamp format consistently.

No other columns have issues based on the provided data and metadata.
========================================================================================================================================

table_name: SDL_MDS_APAC_DCL_PRODUCTS
solution: 
- id: Ensure 'id' is a positive integer. Current value is -1.
- changetrackingmask: Set to a valid non-negative integer. Current value is -5.
- sales_channel_id: Ensure 'sales_channel_id' is a positive integer. Current value is -100.
- srp_usd: Validate 'srp_usd' to be a non-negative value. Current value is -50.0.

SQL Query:
SELECT *
FROM SDL_MDS_APAC_DCL_PRODUCTS
WHERE id < 0 
   OR changetrackingmask < 0 
   OR sales_channel_id < 0 
   OR srp_usd < 0;
Issue: `id`
- Negative values are not expected for IDs, which are typically positive integers.

Issue: `muid`
- Contains a `None` value, which is not expected for a unique identifier.

Issue: `versionnumber`
- Contains negative values, which are not expected for version numbers.

Issue: `changetrackingmask`
- Contains negative values, which are not expected for a tracking mask.

Issue: `srp usd`
- Contains negative values, which are not expected for a standard retail price.

Issue: `comments`
- Contains `None` value, which may indicate missing comments.

Issue: `sap code`
- Not present in the sample data but appears in the metadata, suggesting a possible mismatch or missing column.
========================================================================================================================================

table_name : SDL_MDS_VN_ECOM_PRODUCT
solution : The issue is with the 'version_id' field having an anomalous value of -4900. It should be a positive integer representing a valid version identifier. Update the 'version_id' field to a correct positive value.

SQL Query:
SELECT * FROM SDL_MDS_VN_ECOM_PRODUCT
WHERE version_id < 0;
1. **versionnumber**
   - Issue: Contains negative values (-10) and unusually large positive values (99999), which are typically unexpected for version numbers.

2. **version_id**
   - Issue: Contains negative values (-200, -700), which may not make sense for an identifier.

3. **changetrackingmask**
   - Issue: Contains negative values (-5, -1), which might be unexpected for a mask typically used for tracking changes.

4. **enterdatetime**
   - No issues found.

5. **enterusername**
   - No issues found.

6. **enterversionnumber**
   - No issues found.

7. **lastchgdatetime**
   - No issues found.

8. **lastchgusername**
   - No issues found.

9. **lastchgversionnumber**
   - No issues found.

10. **validationstatus**
    - No issues found.

11. **id**
    - Issue: Contains negative values (-1), which might not be expected for a primary identifier.

12. **versionflag**
    - No issues found.

13. **name**
    - No issues found.

14. **code**
    - No issues found.

15. **dataset**
    - No issues found.

16. **prod_attr_1**
    - No issues found.

17. **prod_attr_2**
    - No issues found.

18. **prod_attr_3**
    - No issues found.

19. **muid**
    - No issues found.

20. **versionname**
    - No issues found.
========================================================================================================================================

table_name : SALES_DATA_FORMAT
solution : No solution needed as no anomalies were detected.

SQL Query:
SELECT * 
FROM SALES_DATA_FORMAT 
WHERE 1=0;  -- This query confirms no anomalies as it returns no rows.
Column: billing_type
Issue: The data seems to contain non-descriptive text ('what', 'are') that doesn't align with a typical billing type description.

Column: cust_no
Issue: The data type is NUMBER, but there is a non-numeric value ('what') in the data, which does not align with the expected numeric customer number.
========================================================================================================================================

table_name : SDL_LA_GT_ROUTE_DETAIL
solution : The anomaly in 'route_no' with value '-3' should be corrected to a valid positive integer, as route numbers are expected to be positive.

SQL Query:
SELECT *
FROM SDL_LA_GT_ROUTE_DETAIL
WHERE route_no < 0;
Issue: `ROUTE_NO`  
- Contains a negative value ("-3") which is unexpected for a route number. Route numbers are typically positive integers.
========================================================================================================================================

table_name : SDL_MDS_PH_NPI_PEG_ITEM
solution : 
1. Correct 'id' from -1 to a valid positive integer.
2. Correct 'salescycle' from -5 to a valid positive integer.
3. Ensure 'changetrackingmask' is set to a valid value, currently -100.

SQL Query:
SELECT * 
FROM SDL_MDS_PH_NPI_PEG_ITEM 
WHERE id < 0 
   OR salescycle < 0 
   OR changetrackingmask < 0;
Column: id
Issue: Contains a value of -1, which may not be a valid identifier.

Column: changetrackingmask
Issue: Contains a value of -100, which may not align with typical tracking mask values.
========================================================================================================================================

table_name : SDL_MDS_MY_GT_OUTLETATTRIBUTES
solution : 'cust_year' value 9999 is invalid. Update it to a valid year.

SQL Query:
SELECT * 
FROM SDL_MDS_MY_GT_OUTLETATTRIBUTES
WHERE cust_year = 9999;
Issue: id - The 'id' column contains negative numbers, which is unusual for an identifier. Typically, IDs are non-negative integers.
Issue: version_id - The 'version_id' column contains a negative value (-1) that seems inconsistent with the rest of the positive integer values.
Issue: changetrackingmask - The 'changetrackingmask' column has a negative value (-10 and -5), which might not be expected for a tracking mask.
Issue: cust_year - The 'cust_year' column contains unexpected negative and high positive values (e.g., -2023, 9999), which do not seem like valid years.
========================================================================================================================================

table_name : SDL_MDS_VN_PS_STORE_TAGGING
solution : 
1. Incorrect versionnumber: 99999 should be a valid version number.
2. Invalid changetrackingmask: -1 should be a non-negative integer.
3. Inactive status with future date: Ensure status matches date context.
4. Validationstatus 'Not Validated': Should be 'Validated' if the data is correct.

SQL Query:
sql
SELECT * 
FROM SDL_MDS_VN_PS_STORE_TAGGING
WHERE versionnumber = 99999
   OR changetrackingmask < 0
   OR (status = 'Inactive' AND enterdatetime > CURRENT_TIMESTAMP)
   OR validationstatus = 'Not Validated';
Certainly! Let's analyze the given data for issues with column semantics and values:

1. **id**:
   - Issue: The `id` column contains a negative value (-1), which is unusual for an identifier column that typically contains unique positive integers.

2. **muid**:
   - Issue: The `muid` column contains an entry with an invalid format ("invalid-muid-format"), which does not conform to the expected UUID format.

3. **versionnumber**:
   - Issue: The `versionnumber` column contains a negative value (-5), which is typically not expected for version numbers that usually start from 0 or 1 and increment positively.

4. **changetrackingmask**:
   - Issue: The `changetrackingmask` column contains negative values (-1, -10), while change tracking masks generally represent positive bitmask values.

5. **versionflag**:
   - Issue: The `versionflag` column contains the value "None", which is inconsistent with the pattern of using Greek letters for version flags.

6. **name**:
   - Issue: The `name` column contains the value "None", which is unexpected, as this column appears to list store names.

7. **store_name**:
   - Issue: The `store_name` column contains the value "None", which is unexpected, as this column appears to list the names of stores.

8. **status**:
   - Issue: The `status` column contains the value "Unknown", which might not be a valid status category if predefined statuses are expected.

9. **validationstatus**:
   - Issue: The `validationstatus` column contains the value "Unknown", which might not be a valid status category if only specific statuses like "Validated", "Not Validated", or "Pending" are expected.

These are the columns with potential semantic issues based on the sample data provided.
========================================================================================================================================

table_name: SDL_FPA_PROFIT_CENTER_MAPPING
solution: Add numeric columns or data for proper anomaly detection. Ensure the table has relevant numeric data types for analysis.

SQL Query:
SELECT * FROM SDL_FPA_PROFIT_CENTER_MAPPING
WHERE NOT EXISTS (
    SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_NAME = 'SDL_FPA_PROFIT_CENTER_MAPPING'
    AND DATA_TYPE IN ('NUMBER', 'FLOAT', 'DOUBLE', 'DECIMAL')
);
Issue: `execution_order`  
- The data type is TEXT, but it appears to represent numeric values (e.g., order numbers, including negative values and large numbers like -5, 10000). Consider using an INTEGER or NUMERIC data type for better semantic coherence.

Issue: `dimension`  
- The data type is TEXT, which aligns with the content. However, the values include both alphanumeric identifiers (e.g., "Dimension2") and numeric values (e.g., -100, 99999) that could imply inconsistent data entries. Review the data for consistency.

Issue: `rulename_sourcevalue`  
- The data type is TEXT, but some entries are numeric values (e.g., 99999), which may not align with the expected format of a source name. Consider ensuring all entries are consistently formatted as text identifiers.
========================================================================================================================================

table_name : SDL_JNJ_MER_SHARE_OF_SHELF
solution : Correct the 'run_id' from '9999999999' to a valid run_id. Update 'file_name' from 'None' to an appropriate file name based on the system's naming convention.

SQL Query:
SELECT *
FROM SDL_JNJ_MER_SHARE_OF_SHELF
WHERE run_id = '9999999999' OR file_name IS NULL OR file_name = 'None';
Issue: CHANNEL
- Some values like 'Retail' and 'Wholesale' appear to describe types of sales environments, while 'Online' and 'Offline' refer to modes of sales. Ensure consistency in the categorization used.

Issue: FILE_NAME
- Some values are 'None', which may indicate missing file names. Ensure all records have a valid file name.

Issue: YEARMO
- Some values like '999912', '202313', or '202326' do not represent valid year-month formats. Ensure the year-month values are in a valid format (YYYYMM) and within a reasonable date range.

Issue: SUPERVISOR_NAME
- Some values are 'None', which may indicate missing supervisor names. Ensure all records have a valid supervisor name.
========================================================================================================================================

table_name : SDL_ECOM_CPAS
solution : Detected anomaly in 'spending' value for 'shop49' on 2023-03-03. Verify and correct the 'spending' value in file49.csv.

SQL Query:
SELECT * 
FROM SDL_ECOM_CPAS
WHERE date = '2023-03-03' 
AND shop = 'shop49' 
AND spending = 3100.0;
Column: spending
Issue: Contains negative values, which may be unexpected for a column named 'spending' as it typically represents positive expenditures or costs.
========================================================================================================================================

table_name : SDL_LA_GT_ROUTE_HEADER_TEMP
solution : Ensure numeric columns are populated with valid numeric data. Use data type conversion or validation rules to prevent non-numeric entries.

SQL Query:
SELECT *
FROM SDL_LA_GT_ROUTE_HEADER_TEMP
WHERE TRY_TO_NUMBER(column_name) IS NULL AND column_name IS NOT NULL;
Issue: is_active
- Inconsistent data types: Contains values like 'yes', 'no', and None, which are not consistent with the intended TEXT data type of length 5.0. Ensure it's either 'yes' or 'no'.

Issue: routesale
- Contains negative values (e.g., -2000, -500, etc.), which may not be semantically correct for a sales figure unless intended to represent refunds or adjustments.

Issue: saleunit
- Contains negative and None values, which may not be semantically correct for a sales unit unless intended to represent specific cases.

Issue: route_code
- Contains duplicate values (e.g., RC047 appears twice), which may not be semantically correct if each route should have a unique code.

Issue: description
- Contains None values, which may not be semantically correct if every route must have a description.

Issue: last_updated_date
- Contains future dates (e.g., 2025-01-01), which may not be semantically correct if the dates should reflect past updates only.

Issue: file_upload_date
- Contains future dates (e.g., 2025-01-24), which may not be semantically correct if the dates should reflect past uploads only.

Issue: filename
- Contains duplicate filenames (e.g., file25.txt appears twice), which may not be semantically correct if each file should be unique.

Issue: run_id
- Contains None values, which may not be semantically correct if every route must have a run ID.

Issue: crt_dttm
- Contains future timestamps (e.g., 2025-01-01 13:00:00), which may not be semantically correct if the creation times should be in the past.
========================================================================================================================================

table_name: SDL_ALL_DISTRIBUTOR_SELLIN_SALES_FACT
solution: The issue is with the 'numerator' value being negative (-5.0). Ensure 'numerator' values are non-negative as they represent quantities or metrics that should not be negative.

SQL Query:
SELECT *
FROM SDL_ALL_DISTRIBUTOR_SELLIN_SALES_FACT
WHERE numerator < 0;
Issue: item1
- Semantic meaning suggests it should hold item-related data, but some entries are None.

Issue: uom
- Unit of measure (uom) should consistently describe the measurement units (like PCS). There's a None value which is inconsistent with the expected semantic meaning.

Issue: curr
- Expected to consistently represent currency codes (such as USD). There's a None value which is inconsistent with the expected semantic meaning.

Issue: filename
- Should represent filenames, but there are None values which are inconsistent with the expected semantic meaning.
========================================================================================================================================

table_name : SDL_MDS_PACIFIC_PERENSO_CYCLE_DATES
solution : The 'cycle_year' value is set to 9999, which is likely incorrect. Update 'cycle_year' to the correct year of the cycle.

SQL Query:
SELECT *
FROM SDL_MDS_PACIFIC_PERENSO_CYCLE_DATES
WHERE cycle_year = 9999;
- **Column: id**
  - Issue: The presence of NaN and negative values (-1.0) is unusual for an identifier column, which typically consists of unique, non-negative integers.

- **Column: versionname**
  - Issue: Contains None values, which might be unexpected for a column likely describing a version name.

- **Column: code**
  - Issue: Contains None values in some rows, which might be unexpected for a code that usually signifies a specific attribute or category.

- **Column: start_date, end_date, enterdatetime, lastchgdatetime**
  - Issue: The `end_date` for the first row is earlier than the `start_date`, which is logically inconsistent.

- **Column: cycle_year**
  - Issue: Contains very high values like 9999 and 10000, which may be placeholders or errors.

- **Column: version_id, versionnumber**
  - Issue: Contains negative values, which are not typically expected for version identifiers or numbers.

- **Column: validationstatus**
  - Issue: Contains None values, which might be unexpected for a validation status column that usually indicates the status clearly.
========================================================================================================================================

table_name : SDL_HK_POS_SCORECARD_MANNINGS
solution : Negative sales quantity detected. Review and correct salesqty value from -125.0 to a valid positive number.

SQL Query:
SELECT vendorid, vendordesc, brand, productid, productdesc, date, salesqty, salesvalue, filename, run_id, crt_dttm
FROM SDL_HK_POS_SCORECARD_MANNINGS
WHERE salesqty < 0;
Issue: `vendorid`
- The value `-1` in the `vendorid` column does not follow the format of other `vendorid` entries, which typically start with "V" followed by a numeric identifier.

Issue: `salesqty`
- The column contains negative values, which may not align with the semantic meaning of "sales quantity" unless negative values are intended to represent returns or other specific scenarios.

Issue: `salesvalue`
- The column contains negative values, which may not align with the semantic meaning of "sales value" unless negative values are intended to represent refunds or other specific scenarios.
========================================================================================================================================

table_name : SDL_CSL_SCHEMEUTILIZATION
solution : 
1. Correct 'schlinecount' from -10 to a valid positive integer.
2. Correct 'billedqty' from -80 to a valid positive integer.

SQL Query:
SELECT * 
FROM SDL_CSL_SCHEMEUTILIZATION
WHERE schlinecount < 0 OR billedqty < 0;
Issue: invoiceno - Contains duplicates, which may not be expected for invoice numbers.

Issue: billedqty - Negative values, which may not be logical for quantities.

Issue: billedrate - Negative values, which may not be logical for rates.
========================================================================================================================================

table_name : SDL_GCGH_GEO_HIER
solution : Ensure the table has numeric columns for anomaly detection. Add numeric columns or populate existing ones with numeric data.

SQL Query:
SELECT * 
FROM SDL_GCGH_GEO_HIER
WHERE 
    <numeric_column> IS NULL
    OR TRY_CAST(<numeric_column> AS FLOAT) IS NULL;


Replace `<numeric_column>` with the actual column names that should contain numeric data in the `SDL_GCGH_GEO_HIER` table.
Issue: country_code_iso2
- Description: The `country_code_iso2` column is expected to contain ISO 3166-1 alpha-2 country codes, which are two-letter country codes.
- Error: Some entries have the value `None`, which does not align with the expected format for ISO 3166-1 alpha-2 codes.

Issue: country_code_iso3
- Description: The `country_code_iso3` column is expected to contain ISO 3166-1 alpha-3 country codes, which are three-letter country codes.
- Error: Some entries have the value `None`, which does not align with the expected format for ISO 3166-1 alpha-3 codes.
========================================================================================================================================

table_name : SDL_ID_POS_DAILY_SAT_SELLOUT
solution : The anomaly is caused by an incorrect 'type' value. 'Return' should not have a positive 'value'. Check and correct the 'type' or 'value' fields to ensure data consistency.

SQL Query:
SELECT * 
FROM SDL_ID_POS_DAILY_SAT_SELLOUT
WHERE value > 0 AND type = 'Return';
Issue: VALUE
- The "VALUE" column is expected to hold numeric data, representing transaction values. However, the presence of negative values in this context might be unexpected unless negative transactions are valid for returns or adjustments.

Issue: TYPE
- The "TYPE" column indicates the nature of the transaction, such as 'Sale' or 'Return'. Ensure all entries align with predefined categories.

Issue: YEARMONTH
- The "YEARMONTH" column, expected to hold a text representation of a year and month in the format YYYYMM, appears correct in format but should be validated to ensure it reflects accurate reporting periods.

Issue: CRTD_DTTM
- The "CRTD_DTTM" column stores timestamps, which should be checked to ensure they are in the correct format and accurately reflect the creation date and time of the record.

No other issues were detected in the remaining columns based on their semantic meanings and the data they hold.
========================================================================================================================================

table_name: SDL_LA_GT_INVENTORY_FACT
solution: The 'qty' and 'amount' columns have negative values. Correct the 'qty' to reflect actual stock movement and adjust 'amount' to match the valid transaction values. Verify and update the 'expirydate' if it is incorrect or the stock is expired.

SQL Query:
SELECT *
FROM SDL_LA_GT_INVENTORY_FACT
WHERE qty < 0 OR amount < 0 OR expirydate < CURRENT_DATE();
Issue: QTY
- Expected to hold numeric data representing quantity, but is stored as TEXT. Potential issue with handling negative and zero values.

Issue: AMOUNT
- Expected to hold numeric data representing monetary values, but is stored as TEXT. Negative values should be validated for business logic.

Issue: RECDATE
- Expected to be in DATE format but is stored as TEXT. Ensure conversion to proper date format for date-related operations.
========================================================================================================================================

table_name : SDL_CSL_SALESINVOICEORDERS
solution : Correct the negative run_id value from '-22' to a valid positive integer.

SQL Query:
SELECT * FROM SDL_CSL_SALESINVOICEORDERS
WHERE run_id < 0;
Issue: `syncid` column contains negative numbers, which might not align with the expected semantic meaning if IDs are anticipated to be non-negative integers.
========================================================================================================================================

table_name : SDL_ID_MDS_LOG
solution : Ensure numeric columns are populated with valid numeric data. Validate data input to prevent non-numeric entries.

SQL Query:
SELECT *
FROM SDL_ID_MDS_LOG
WHERE TRY_TO_NUMBER(<column_name>) IS NULL 
AND <column_name> IS NOT NULL;
Certainly! Here's a review of the columns for any semantic misalignments with the sample data provided:

1. **status:**
   - No issues. The values like "Completed," "Failed," "Running," and "None" align with typical status indicators.

2. **result:**
   - No issues. The column holds text descriptions of various outcomes or results, which is appropriate for its name.

3. **job_name:**
   - No issues. The values appear to be identifiers or names for jobs, which aligns with the column name.

4. **query:**
   - No issues. The column contains SQL queries, which matches the expected semantic meaning.

5. **crtd_dttm:**
   - No issues. The column contains datetime values, which is consistent with a timestamp data type.

No issues were found in the columns based on semantic alignment.
========================================================================================================================================

table_name : SDL_CUSTOMERPL_STDCOST_2022
solution : Negative quantity detected for materialnumber MAT032. Verify and correct the 'qty' value which should not be negative.

SQL Query:
SELECT * 
FROM SDL_CUSTOMERPL_STDCOST_2022
WHERE qty < 0;
Column: stdcost
Issue: The column contains negative values, which might not align with the expected semantic meaning of "standard cost," as costs are typically expected to be positive.

Column: qty
Issue: The column contains negative values, which might not align with the expected semantic meaning of "quantity," as quantities are typically expected to be non-negative.
========================================================================================================================================

table_name : SDL_LA_GT_SCHEDULE
solution : Ensure that columns expected to contain numeric data are populated with valid numeric values.

SQL Query:
SELECT *
FROM SDL_LA_GT_SCHEDULE
WHERE TRY_TO_NUMBER(<column_name>) IS NULL OR <column_name> = '';


Replace `<column_name>` with the actual column name(s) where numeric data is expected.
Issue: `schedule_date`  
- The data type is specified as `TEXT`, but it holds date values, which are typically better represented by a date or datetime data type for consistency and validation.

Issue: `approved`  
- The data type is specified as `TEXT`, but the column likely represents categorical status values (e.g., 'YES', 'NO', 'MAYBE'), which could be more semantically meaningful as a categorical or enum type.
========================================================================================================================================

table_name : SDL_POP6_SG_PRODUCT_LISTS_ALLOCATION
solution : The issue is with the 'product_group_status' having an invalid value of '4'. Update 'product_group_status' to a valid status value.

SQL Query:
SELECT *
FROM SDL_POP6_SG_PRODUCT_LISTS_ALLOCATION
WHERE product_group_status NOT IN (1, 2, 3);
Issue: product_group_status
- Negative values like -1, -3, and -10 might not align with typical status values, which are usually positive.

Issue: product_list_status
- Negative values like -5 might not align with typical status values, which are usually positive.

Issue: run_id
- Negative values like -104 and -105 might not align with typical ID values, which are usually non-negative.
========================================================================================================================================

table_name : SDL_KR_COUPANG_CUSTOMER_BRAND_TREND
solution : 
1. curr_user_count should not be negative. Please verify data source for correct user count.
2. tot_user_count should not be negative. It should be the sum of new_user_count and curr_user_count.
3. curr_user_sales_amt should not be negative. Verify sales data for accuracy.
4. curr_user_avg_product_sales_price should not be negative. Recalculate average sales prices.
5. tot_user_avg_product_sales_price should not be negative. It should be recalculated based on total sales and user counts.

SQL Query:
SELECT * 
FROM SDL_KR_COUPANG_CUSTOMER_BRAND_TREND
WHERE curr_user_count < 0 
   OR tot_user_count < 0 
   OR curr_user_sales_amt < 0 
   OR curr_user_avg_product_sales_price < 0 
   OR tot_user_avg_product_sales_price < 0;
Issue: new_user_count
- Negative values are present, which are typically not expected for a count.

Issue: curr_user_count
- Negative values are present, which are typically not expected for a count.

Issue: tot_user_count
- Negative values are present, which are typically not expected for a count.

Issue: run_id
- Negative values are present, which are typically not expected for an identifier.

Issue: curr_user_sales_amt
- Negative sales amounts are present, which could indicate returns or errors in data entry.

Issue: new_user_sales_amt
- Negative sales amounts are present, which could indicate returns or errors in data entry.

Issue: new_user_avg_product_sales_price
- Negative average sales prices are present, which should typically be non-negative.

Issue: curr_user_avg_product_sales_price
- Negative average sales prices are present, which should typically be non-negative.

Issue: tot_user_avg_product_sales_price
- Negative average sales prices are present, which should typically be non-negative.
========================================================================================================================================

table_name : SDL_MDS_PH_ISE_SOS_TARGETS
solution : 
1. Correct 'versionnumber' from -5 to a valid positive integer.
2. Ensure 'cal_year' is a valid year instead of 99999.
3. Verify 'target' value as it seems to be incorrect (300.0).

SQL Query:
SELECT * 
FROM SDL_MDS_PH_ISE_SOS_TARGETS 
WHERE versionnumber < 0 
   OR cal_year > 9999 
   OR target > 100; -- Assuming 100 is the upper limit for target based on domain knowledge.
Issue: `cal_year`  
The data type for `cal_year` is listed as TEXT, but it represents a year, which is typically better suited as a NUMBER. Additionally, the value "99999" does not seem appropriate for a calendar year.

Issue: `target`  
The `target` column has a data type of NUMBER, which is appropriate, but the presence of negative values (e.g., -100.0) might not make sense semantically, depending on the context of what "target" represents. If "target" is expected to be a positive value, these negatives are an issue.

Issue: `brand_id`  
The column `brand_id` is of TEXT data type, but the values listed as "Brand A", "Brand B", etc., might suggest that `brand_id` should represent an identifier, which is often a NUMBER. The format "Brand X" seems more like a descriptor than a unique identifier.

Issue: `enterusername` and `lastchgusername`  
These columns have TEXT data types which are appropriate, but there are instances of `None` or missing values which might not be expected for a username field if every record is supposed to have an associated user.
========================================================================================================================================

table_name: SDL_ID_POS_GUARDIAN_STOCK
solution: The anomaly in the 'SDL_ID_POS_GUARDIAN_STOCK' table pertains to the row with 'article' QQ789, where the 'soh_stores' and 'soh_dc' columns both have a value of 100.0, which may indicate a duplication or data entry error. Verify with the original data source and correct the values as needed.

SQL Query:
SELECT * 
FROM SDL_ID_POS_GUARDIAN_STOCK
WHERE article = 'QQ789' AND soh_stores = 100.0 AND soh_dc = 100.0 AND yearmonth = 202005 AND run_id = 44;
Issue: soh_stores
- The column name "soh_stores" suggests it should represent stock on hand in stores. The presence of negative values (e.g., -10.0) may indicate an error, as stock on hand should logically be non-negative.

Issue: soh_dc
- Similar to "soh_stores," the column "soh_dc" indicating stock on hand at distribution centers should also be non-negative. Negative values (e.g., -5.0) might suggest an issue.

Issue: pos_cust
- The column "pos_cust" appears to represent customer identifiers (positional customer). However, the presence of "None" suggests missing data, which may need to be addressed.

Issue: yearmonth
- The column "yearmonth" indicates a year and month combination. It is expected to be in a consistent format. No specific format issues are visible, but ensure that all entries follow the "YYYYMM" format.

Note: Other columns either align with their semantic meaning or don't have clear issues based on the sample data provided.
========================================================================================================================================

table_name : SDL_CCR_PRODUCT_MAPPING
solution : Ensure that numeric fields in the table 'SDL_CCR_PRODUCT_MAPPING' are populated with valid numeric data. Validate data entry processes to prevent non-numeric entries.

SQL Query:
SELECT *
FROM SDL_CCR_PRODUCT_MAPPING
WHERE TRY_TO_NUMBER(<column_name>) IS NULL;


Replace `<column_name>` with the actual column names that are supposed to contain numeric data.
Issue: `rule_expression`
- The column contains some non-text entries like `9999`, which do not align with the expected text format.

Issue: `execution_order`
- The column contains non-numeric text entries like `None`, which do not align with the expected numeric or valid order format.
========================================================================================================================================

